   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm current_phaseU,2,2
  18              	 .comm current_phaseV,2,2
  19              	 .global ADC_scale
  20              	 .section .data.ADC_scale,"aw",%progbits
  21              	 .align 2
  24              	ADC_scale:
  25 0000 2611203B 	 .word 991957286
  26              	 .global cumulative_sum_phaseU
  27              	 .section .bss.cumulative_sum_phaseU,"aw",%nobits
  28              	 .align 2
  31              	cumulative_sum_phaseU:
  32 0000 00000000 	 .space 4
  33              	 .global cumulative_sum_phaseV
  34              	 .section .bss.cumulative_sum_phaseV,"aw",%nobits
  35              	 .align 2
  38              	cumulative_sum_phaseV:
  39 0000 00000000 	 .space 4
  40              	 .global moving_average_phaseU
  41              	 .section .bss.moving_average_phaseU,"aw",%nobits
  42              	 .align 2
  45              	moving_average_phaseU:
  46 0000 00000000 	 .space 4
  47              	 .global moving_average_phaseV
  48              	 .section .bss.moving_average_phaseV,"aw",%nobits
  49              	 .align 2
  52              	moving_average_phaseV:
  53 0000 00000000 	 .space 4
  54              	 .global aIObs
  55              	 .section .bss.aIObs,"aw",%nobits
  56              	 .align 2
  59              	aIObs:
  60 0000 00000000 	 .space 4
  61              	 .global b1IObs
  62              	 .section .bss.b1IObs,"aw",%nobits
  63              	 .align 2
  66              	b1IObs:
  67 0000 00000000 	 .space 4
  68              	 .global b2IObs
  69              	 .section .bss.b2IObs,"aw",%nobits
  70              	 .align 2
  73              	b2IObs:
  74 0000 00000000 	 .space 4
  75              	 .global b3IObs
  76              	 .section .bss.b3IObs,"aw",%nobits
  77              	 .align 2
  80              	b3IObs:
  81 0000 00000000 	 .space 4
  82              	 .global flagStartObs
  83              	 .section .bss.flagStartObs,"aw",%nobits
  84              	 .align 1
  87              	flagStartObs:
  88 0000 0000     	 .space 2
  89              	 .global EalphaHat
  90              	 .section .bss.EalphaHat,"aw",%nobits
  91              	 .align 2
  94              	EalphaHat:
  95 0000 00000000 	 .space 4
  96              	 .global EbetaHat
  97              	 .section .bss.EbetaHat,"aw",%nobits
  98              	 .align 2
 101              	EbetaHat:
 102 0000 00000000 	 .space 4
 103              	 .global IalphaHat
 104              	 .section .bss.IalphaHat,"aw",%nobits
 105              	 .align 2
 108              	IalphaHat:
 109 0000 00000000 	 .space 4
 110              	 .global IbetaHat
 111              	 .section .bss.IbetaHat,"aw",%nobits
 112              	 .align 2
 115              	IbetaHat:
 116 0000 00000000 	 .space 4
 117              	 .global Balpha
 118              	 .section .bss.Balpha,"aw",%nobits
 119              	 .align 2
 122              	Balpha:
 123 0000 00000000 	 .space 4
 124              	 .global Bbeta
 125              	 .section .bss.Bbeta,"aw",%nobits
 126              	 .align 2
 129              	Bbeta:
 130 0000 00000000 	 .space 4
 131              	 .global a1BEMFobs
 132              	 .section .bss.a1BEMFobs,"aw",%nobits
 133              	 .align 2
 136              	a1BEMFobs:
 137 0000 00000000 	 .space 4
 138              	 .global a2BEMFobs
 139              	 .section .bss.a2BEMFobs,"aw",%nobits
 140              	 .align 2
 143              	a2BEMFobs:
 144 0000 00000000 	 .space 4
 145              	 .global b1BEMFobs
 146              	 .section .bss.b1BEMFobs,"aw",%nobits
 147              	 .align 2
 150              	b1BEMFobs:
 151 0000 00000000 	 .space 4
 152              	 .global b2BEMFobs
 153              	 .section .bss.b2BEMFobs,"aw",%nobits
 154              	 .align 2
 157              	b2BEMFobs:
 158 0000 00000000 	 .space 4
 159              	 .global da
 160              	 .section .bss.da,"aw",%nobits
 161              	 .align 1
 164              	da:
 165 0000 0000     	 .space 2
 166              	 .global db
 167              	 .section .bss.db,"aw",%nobits
 168              	 .align 1
 171              	db:
 172 0000 0000     	 .space 2
 173              	 .global dc
 174              	 .section .bss.dc,"aw",%nobits
 175              	 .align 1
 178              	dc:
 179 0000 0000     	 .space 2
 180              	 .global d0
 181              	 .section .bss.d0,"aw",%nobits
 182              	 .align 2
 185              	d0:
 186 0000 00000000 	 .space 4
 187              	 .global d1
 188              	 .section .bss.d1,"aw",%nobits
 189              	 .align 2
 192              	d1:
 193 0000 00000000 	 .space 4
 194              	 .global d2
 195              	 .section .bss.d2,"aw",%nobits
 196              	 .align 2
 199              	d2:
 200 0000 00000000 	 .space 4
 201              	 .global OpenLoop
 202              	 .section .data.OpenLoop,"aw",%progbits
 203              	 .align 1
 206              	OpenLoop:
 207 0000 0100     	 .short 1
 208              	 .global ChangeMode
 209              	 .section .data.ChangeMode,"aw",%progbits
 210              	 .align 1
 213              	ChangeMode:
 214 0000 0100     	 .short 1
 215              	 .global Startup_Lock_Count
 216              	 .section .bss.Startup_Lock_Count,"aw",%nobits
 217              	 .align 1
 220              	Startup_Lock_Count:
 221 0000 0000     	 .space 2
 222              	 .global Speed_Maintain_Cnt1
 223              	 .section .bss.Speed_Maintain_Cnt1,"aw",%nobits
 224              	 .align 1
 227              	Speed_Maintain_Cnt1:
 228 0000 0000     	 .space 2
 229              	 .global SineTheta
 230              	 .section .bss.SineTheta,"aw",%nobits
 231              	 .align 2
 234              	SineTheta:
 235 0000 00000000 	 .space 4
 236              	 .global CosineTheta
 237              	 .section .bss.CosineTheta,"aw",%nobits
 238              	 .align 2
 241              	CosineTheta:
 242 0000 00000000 	 .space 4
 243              	 .global Theta
 244              	 .section .bss.Theta,"aw",%nobits
 245              	 .align 2
 248              	Theta:
 249 0000 00000000 	 .space 4
 250              	 .global Startup_Ramp_Angle_Rads_Per_Sec
 251              	 .section .bss.Startup_Ramp_Angle_Rads_Per_Sec,"aw",%nobits
 252              	 .align 2
 255              	Startup_Ramp_Angle_Rads_Per_Sec:
 256 0000 00000000 	 .space 4
 257              	 .global positionTH
 258              	 .section .bss.positionTH,"aw",%nobits
 259              	 .align 2
 262              	positionTH:
 263 0000 00000000 	 .space 4
 264              	 .global positiondTH
 265              	 .section .bss.positiondTH,"aw",%nobits
 266              	 .align 2
 269              	positiondTH:
 270 0000 00000000 	 .space 4
 271              	 .global positionTHI
 272              	 .section .bss.positionTHI,"aw",%nobits
 273              	 .align 2
 276              	positionTHI:
 277 0000 00000000 	 .space 4
 278              	 .global positionTHO
 279              	 .section .bss.positionTHO,"aw",%nobits
 280              	 .align 2
 283              	positionTHO:
 284 0000 00000000 	 .space 4
 285              	 .global positionzTH
 286              	 .section .bss.positionzTH,"aw",%nobits
 287              	 .align 2
 290              	positionzTH:
 291 0000 00000000 	 .space 4
 292              	 .global closeLoopTHI
 293              	 .section .bss.closeLoopTHI,"aw",%nobits
 294              	 .align 2
 297              	closeLoopTHI:
 298 0000 00000000 	 .space 4
 299              	 .global closeLoopTHO
 300              	 .section .bss.closeLoopTHO,"aw",%nobits
 301              	 .align 2
 304              	closeLoopTHO:
 305 0000 00000000 	 .space 4
 306              	 .global deviationTH
 307              	 .section .bss.deviationTH,"aw",%nobits
 308              	 .align 2
 311              	deviationTH:
 312 0000 00000000 	 .space 4
 313              	 .global decayRateTH
 314              	 .section .bss.decayRateTH,"aw",%nobits
 315              	 .align 2
 318              	decayRateTH:
 319 0000 00000000 	 .space 4
 320              	 .global closeLoopTHstate
 321              	 .section .bss.closeLoopTHstate,"aw",%nobits
 322              	 .align 1
 325              	closeLoopTHstate:
 326 0000 0000     	 .space 2
 327              	 .global finalTHI
 328              	 .section .bss.finalTHI,"aw",%nobits
 329              	 .align 2
 332              	finalTHI:
 333 0000 00000000 	 .space 4
 334              	 .global finalTHO
 335              	 .section .bss.finalTHO,"aw",%nobits
 336              	 .align 2
 339              	finalTHO:
 340 0000 00000000 	 .space 4
 341              	 .global estimatorState
 342              	 .section .bss.estimatorState,"aw",%nobits
 343              	 .align 1
 346              	estimatorState:
 347 0000 0000     	 .space 2
 348              	 .global estimatorStatecnt1
 349              	 .section .bss.estimatorStatecnt1,"aw",%nobits
 350              	 .align 1
 353              	estimatorStatecnt1:
 354 0000 0000     	 .space 2
 355              	 .global speedRefCnt
 356              	 .section .data.speedRefCnt,"aw",%progbits
 357              	 .align 2
 360              	speedRefCnt:
 361 0000 00007A45 	 .word 1165623296
 362              	 .global SUMdTH
 363              	 .section .bss.SUMdTH,"aw",%nobits
 364              	 .align 2
 367              	SUMdTH:
 368 0000 00000000 	 .space 4
 369              	 .global SpeedMea1
 370              	 .section .bss.SpeedMea1,"aw",%nobits
 371              	 .align 2
 374              	SpeedMea1:
 375 0000 00000000 	 .space 4
 376              	 .global SpeedMea
 377              	 .section .bss.SpeedMea,"aw",%nobits
 378              	 .align 2
 381              	SpeedMea:
 382 0000 00000000 	 .space 4
 383              	 .global SpeedRef
 384              	 .section .bss.SpeedRef,"aw",%nobits
 385              	 .align 2
 388              	SpeedRef:
 389 0000 00000000 	 .space 4
 390              	 .comm FIFOdTH,84,4
 391              	 .comm We,4,4
 392              	 .global countFIFO
 393              	 .section .bss.countFIFO,"aw",%nobits
 394              	 .align 1
 397              	countFIFO:
 398 0000 0000     	 .space 2
 399              	 .global current_u
 400              	 .section .bss.current_u,"aw",%nobits
 401              	 .align 2
 404              	current_u:
 405 0000 00000000 	 .space 4
 406              	 .global current_v
 407              	 .section .bss.current_v,"aw",%nobits
 408              	 .align 2
 411              	current_v:
 412 0000 00000000 	 .space 4
 413              	 .global current_alpha
 414              	 .section .bss.current_alpha,"aw",%nobits
 415              	 .align 2
 418              	current_alpha:
 419 0000 00000000 	 .space 4
 420              	 .global current_beta
 421              	 .section .bss.current_beta,"aw",%nobits
 422              	 .align 2
 425              	current_beta:
 426 0000 00000000 	 .space 4
 427              	 .global current_sd
 428              	 .section .bss.current_sd,"aw",%nobits
 429              	 .align 2
 432              	current_sd:
 433 0000 00000000 	 .space 4
 434              	 .global current_sq
 435              	 .section .bss.current_sq,"aw",%nobits
 436              	 .align 2
 439              	current_sq:
 440 0000 00000000 	 .space 4
 441              	 .global SpeedError
 442              	 .section .bss.SpeedError,"aw",%nobits
 443              	 .align 2
 446              	SpeedError:
 447 0000 00000000 	 .space 4
 448              	 .comm Kp_IsqRef,4,4
 449              	 .comm Ki_IsqRef,4,4
 450              	 .global sum_IsqRef
 451              	 .section .bss.sum_IsqRef,"aw",%nobits
 452              	 .align 2
 455              	sum_IsqRef:
 456 0000 00000000 	 .space 4
 457              	 .global IsqRef1
 458              	 .section .bss.IsqRef1,"aw",%nobits
 459              	 .align 2
 462              	IsqRef1:
 463 0000 00000000 	 .space 4
 464              	 .global IsqRef
 465              	 .section .bss.IsqRef,"aw",%nobits
 466              	 .align 2
 469              	IsqRef:
 470 0000 00000000 	 .space 4
 471              	 .global IsdError
 472              	 .section .bss.IsdError,"aw",%nobits
 473              	 .align 2
 476              	IsdError:
 477 0000 00000000 	 .space 4
 478              	 .global sum_Usd
 479              	 .section .bss.sum_Usd,"aw",%nobits
 480              	 .align 2
 483              	sum_Usd:
 484 0000 00000000 	 .space 4
 485              	 .global Usd1
 486              	 .section .bss.Usd1,"aw",%nobits
 487              	 .align 2
 490              	Usd1:
 491 0000 00000000 	 .space 4
 492              	 .global Usd
 493              	 .section .bss.Usd,"aw",%nobits
 494              	 .align 2
 497              	Usd:
 498 0000 00000000 	 .space 4
 499              	 .comm Kp_Usd,4,4
 500              	 .comm Ki_Usd,4,4
 501              	 .global IsqError
 502              	 .section .bss.IsqError,"aw",%nobits
 503              	 .align 2
 506              	IsqError:
 507 0000 00000000 	 .space 4
 508              	 .global sum_Usq
 509              	 .section .bss.sum_Usq,"aw",%nobits
 510              	 .align 2
 513              	sum_Usq:
 514 0000 00000000 	 .space 4
 515              	 .global Usq1
 516              	 .section .bss.Usq1,"aw",%nobits
 517              	 .align 2
 520              	Usq1:
 521 0000 00000000 	 .space 4
 522              	 .global Usq
 523              	 .section .bss.Usq,"aw",%nobits
 524              	 .align 2
 527              	Usq:
 528 0000 00000000 	 .space 4
 529              	 .comm Kp_Usq,4,4
 530              	 .comm Ki_Usq,4,4
 531              	 .global Usalpha
 532              	 .section .bss.Usalpha,"aw",%nobits
 533              	 .align 2
 536              	Usalpha:
 537 0000 00000000 	 .space 4
 538              	 .global Usbeta
 539              	 .section .bss.Usbeta,"aw",%nobits
 540              	 .align 2
 543              	Usbeta:
 544 0000 00000000 	 .space 4
 545              	 .global Usa
 546              	 .section .bss.Usa,"aw",%nobits
 547              	 .align 2
 550              	Usa:
 551 0000 00000000 	 .space 4
 552              	 .global Usb
 553              	 .section .bss.Usb,"aw",%nobits
 554              	 .align 2
 557              	Usb:
 558 0000 00000000 	 .space 4
 559              	 .global Usc
 560              	 .section .bss.Usc,"aw",%nobits
 561              	 .align 2
 564              	Usc:
 565 0000 00000000 	 .space 4
 566              	 .global SineTable
 567              	 .section .data.SineTable,"aw",%progbits
 568              	 .align 2
 571              	SineTable:
 572 0000 00000000 	 .word 0
 573 0004 350AC93C 	 .word 1019808309
 574 0008 87FB483D 	 .word 1028193159
 575 000c 3FA9963D 	 .word 1033283903
 576 0010 23BDC83D 	 .word 1036565795
 577 0014 9EB2FA3D 	 .word 1039839902
 578 0018 6440163E 	 .word 1041645668
 579 001c AA102F3E 	 .word 1043271850
 580 0020 ACC5473E 	 .word 1044891052
 581 0024 035C603E 	 .word 1046502403
 582 0028 C0CF783E 	 .word 1048104896
 583 002c 9B8E883E 	 .word 1049136795
 584 0030 3CA0943E 	 .word 1049927740
 585 0034 ED9AA03E 	 .word 1050712813
 586 0038 D97CAC3E 	 .word 1051491545
 587 003c 2844B83E 	 .word 1052263464
 588 0040 07EFC33E 	 .word 1053028103
 589 0044 C07BCF3E 	 .word 1053785024
 590 0048 7DE8DA3E 	 .word 1054533757
 591 004c 6A33E63E 	 .word 1055273834
 592 0050 F35AF13E 	 .word 1056004851
 593 0054 205DFC3E 	 .word 1056726304
 594 0058 419C033F 	 .word 1057201217
 595 005c A1F5083F 	 .word 1057551777
 596 0060 D6390E3F 	 .word 1057896918
 597 0064 2768133F 	 .word 1058236455
 598 0068 BB7F183F 	 .word 1058570171
 599 006c D87F1D3F 	 .word 1058897880
 600 0070 9467223F 	 .word 1059219348
 601 0074 5936273F 	 .word 1059534425
 602 0078 4AEB2B3F 	 .word 1059842890
 603 007c C285303F 	 .word 1060144578
 604 0080 F704353F 	 .word 1060439287
 605 0084 4068393F 	 .word 1060726848
 606 0088 F7AE3D3F 	 .word 1061007095
 607 008c 73D8413F 	 .word 1061279859
 608 0090 FCE3453F 	 .word 1061544956
 609 0094 0BD1493F 	 .word 1061802251
 610 0098 0A9F4D3F 	 .word 1062051594
 611 009c 404D513F 	 .word 1062292800
 612 00a0 38DB543F 	 .word 1062525752
 613 00a4 5A48583F 	 .word 1062750298
 614 00a8 21945B3F 	 .word 1062966305
 615 00ac 06BE5E3F 	 .word 1063173638
 616 00b0 93C5613F 	 .word 1063372179
 617 00b4 54AA643F 	 .word 1063561812
 618 00b8 D36B673F 	 .word 1063742419
 619 00bc AB096A3F 	 .word 1063913899
 620 00c0 66836C3F 	 .word 1064076134
 621 00c4 A1D86E3F 	 .word 1064229025
 622 00c8 0709713F 	 .word 1064372487
 623 00cc 4414733F 	 .word 1064506436
 624 00d0 05FA743F 	 .word 1064630789
 625 00d4 06BA763F 	 .word 1064745478
 626 00d8 F453783F 	 .word 1064850420
 627 00dc 9BC7793F 	 .word 1064945563
 628 00e0 BA147B3F 	 .word 1065030842
 629 00e4 2E3B7C3F 	 .word 1065106222
 630 00e8 B43A7D3F 	 .word 1065171636
 631 00ec 2B137E3F 	 .word 1065227051
 632 00f0 72C47E3F 	 .word 1065272434
 633 00f4 664E7F3F 	 .word 1065307750
 634 00f8 07B17F3F 	 .word 1065332999
 635 00fc 46EC7F3F 	 .word 1065348166
 636 0100 0000803F 	 .word 1065353216
 637 0104 46EC7F3F 	 .word 1065348166
 638 0108 07B17F3F 	 .word 1065332999
 639 010c 664E7F3F 	 .word 1065307750
 640 0110 72C47E3F 	 .word 1065272434
 641 0114 2B137E3F 	 .word 1065227051
 642 0118 B43A7D3F 	 .word 1065171636
 643 011c 2E3B7C3F 	 .word 1065106222
 644 0120 BA147B3F 	 .word 1065030842
 645 0124 9BC7793F 	 .word 1064945563
 646 0128 F453783F 	 .word 1064850420
 647 012c 06BA763F 	 .word 1064745478
 648 0130 05FA743F 	 .word 1064630789
 649 0134 4414733F 	 .word 1064506436
 650 0138 0709713F 	 .word 1064372487
 651 013c A1D86E3F 	 .word 1064229025
 652 0140 66836C3F 	 .word 1064076134
 653 0144 AB096A3F 	 .word 1063913899
 654 0148 D36B673F 	 .word 1063742419
 655 014c 54AA643F 	 .word 1063561812
 656 0150 93C5613F 	 .word 1063372179
 657 0154 06BE5E3F 	 .word 1063173638
 658 0158 21945B3F 	 .word 1062966305
 659 015c 5A48583F 	 .word 1062750298
 660 0160 38DB543F 	 .word 1062525752
 661 0164 404D513F 	 .word 1062292800
 662 0168 0A9F4D3F 	 .word 1062051594
 663 016c 0BD1493F 	 .word 1061802251
 664 0170 FCE3453F 	 .word 1061544956
 665 0174 73D8413F 	 .word 1061279859
 666 0178 F7AE3D3F 	 .word 1061007095
 667 017c 4068393F 	 .word 1060726848
 668 0180 F704353F 	 .word 1060439287
 669 0184 C285303F 	 .word 1060144578
 670 0188 4AEB2B3F 	 .word 1059842890
 671 018c 5936273F 	 .word 1059534425
 672 0190 9467223F 	 .word 1059219348
 673 0194 D87F1D3F 	 .word 1058897880
 674 0198 BB7F183F 	 .word 1058570171
 675 019c 2768133F 	 .word 1058236455
 676 01a0 D6390E3F 	 .word 1057896918
 677 01a4 A1F5083F 	 .word 1057551777
 678 01a8 419C033F 	 .word 1057201217
 679 01ac 205DFC3E 	 .word 1056726304
 680 01b0 F35AF13E 	 .word 1056004851
 681 01b4 6A33E63E 	 .word 1055273834
 682 01b8 7DE8DA3E 	 .word 1054533757
 683 01bc C07BCF3E 	 .word 1053785024
 684 01c0 07EFC33E 	 .word 1053028103
 685 01c4 2844B83E 	 .word 1052263464
 686 01c8 D97CAC3E 	 .word 1051491545
 687 01cc ED9AA03E 	 .word 1050712813
 688 01d0 3CA0943E 	 .word 1049927740
 689 01d4 9B8E883E 	 .word 1049136795
 690 01d8 C0CF783E 	 .word 1048104896
 691 01dc 035C603E 	 .word 1046502403
 692 01e0 ACC5473E 	 .word 1044891052
 693 01e4 AA102F3E 	 .word 1043271850
 694 01e8 6440163E 	 .word 1041645668
 695 01ec 9EB2FA3D 	 .word 1039839902
 696 01f0 23BDC83D 	 .word 1036565795
 697 01f4 3FA9963D 	 .word 1033283903
 698 01f8 87FB483D 	 .word 1028193159
 699 01fc 350AC93C 	 .word 1019808309
 700 0200 00000000 	 .word 0
 701 0204 350AC9BC 	 .word -1127675339
 702 0208 87FB48BD 	 .word -1119290489
 703 020c 3FA996BD 	 .word -1114199745
 704 0210 23BDC8BD 	 .word -1110917853
 705 0214 9EB2FABD 	 .word -1107643746
 706 0218 644016BE 	 .word -1105837980
 707 021c AA102FBE 	 .word -1104211798
 708 0220 ACC547BE 	 .word -1102592596
 709 0224 035C60BE 	 .word -1100981245
 710 0228 C0CF78BE 	 .word -1099378752
 711 022c 9B8E88BE 	 .word -1098346853
 712 0230 3CA094BE 	 .word -1097555908
 713 0234 ED9AA0BE 	 .word -1096770835
 714 0238 D97CACBE 	 .word -1095992103
 715 023c 2844B8BE 	 .word -1095220184
 716 0240 07EFC3BE 	 .word -1094455545
 717 0244 C07BCFBE 	 .word -1093698624
 718 0248 7DE8DABE 	 .word -1092949891
 719 024c 6A33E6BE 	 .word -1092209814
 720 0250 F35AF1BE 	 .word -1091478797
 721 0254 205DFCBE 	 .word -1090757344
 722 0258 419C03BF 	 .word -1090282431
 723 025c A1F508BF 	 .word -1089931871
 724 0260 D6390EBF 	 .word -1089586730
 725 0264 276813BF 	 .word -1089247193
 726 0268 BB7F18BF 	 .word -1088913477
 727 026c D87F1DBF 	 .word -1088585768
 728 0270 946722BF 	 .word -1088264300
 729 0274 593627BF 	 .word -1087949223
 730 0278 4AEB2BBF 	 .word -1087640758
 731 027c C28530BF 	 .word -1087339070
 732 0280 F70435BF 	 .word -1087044361
 733 0284 406839BF 	 .word -1086756800
 734 0288 F7AE3DBF 	 .word -1086476553
 735 028c 73D841BF 	 .word -1086203789
 736 0290 FCE345BF 	 .word -1085938692
 737 0294 0BD149BF 	 .word -1085681397
 738 0298 0A9F4DBF 	 .word -1085432054
 739 029c 404D51BF 	 .word -1085190848
 740 02a0 38DB54BF 	 .word -1084957896
 741 02a4 5A4858BF 	 .word -1084733350
 742 02a8 21945BBF 	 .word -1084517343
 743 02ac 06BE5EBF 	 .word -1084310010
 744 02b0 93C561BF 	 .word -1084111469
 745 02b4 54AA64BF 	 .word -1083921836
 746 02b8 D36B67BF 	 .word -1083741229
 747 02bc AB096ABF 	 .word -1083569749
 748 02c0 66836CBF 	 .word -1083407514
 749 02c4 A1D86EBF 	 .word -1083254623
 750 02c8 070971BF 	 .word -1083111161
 751 02cc 441473BF 	 .word -1082977212
 752 02d0 05FA74BF 	 .word -1082852859
 753 02d4 06BA76BF 	 .word -1082738170
 754 02d8 F45378BF 	 .word -1082633228
 755 02dc 9BC779BF 	 .word -1082538085
 756 02e0 BA147BBF 	 .word -1082452806
 757 02e4 2E3B7CBF 	 .word -1082377426
 758 02e8 B43A7DBF 	 .word -1082312012
 759 02ec 2B137EBF 	 .word -1082256597
 760 02f0 72C47EBF 	 .word -1082211214
 761 02f4 664E7FBF 	 .word -1082175898
 762 02f8 07B17FBF 	 .word -1082150649
 763 02fc 46EC7FBF 	 .word -1082135482
 764 0300 000080BF 	 .word -1082130432
 765 0304 46EC7FBF 	 .word -1082135482
 766 0308 07B17FBF 	 .word -1082150649
 767 030c 664E7FBF 	 .word -1082175898
 768 0310 72C47EBF 	 .word -1082211214
 769 0314 2B137EBF 	 .word -1082256597
 770 0318 B43A7DBF 	 .word -1082312012
 771 031c 2E3B7CBF 	 .word -1082377426
 772 0320 BA147BBF 	 .word -1082452806
 773 0324 9BC779BF 	 .word -1082538085
 774 0328 F45378BF 	 .word -1082633228
 775 032c 06BA76BF 	 .word -1082738170
 776 0330 05FA74BF 	 .word -1082852859
 777 0334 441473BF 	 .word -1082977212
 778 0338 070971BF 	 .word -1083111161
 779 033c A1D86EBF 	 .word -1083254623
 780 0340 66836CBF 	 .word -1083407514
 781 0344 AB096ABF 	 .word -1083569749
 782 0348 D36B67BF 	 .word -1083741229
 783 034c 54AA64BF 	 .word -1083921836
 784 0350 93C561BF 	 .word -1084111469
 785 0354 06BE5EBF 	 .word -1084310010
 786 0358 21945BBF 	 .word -1084517343
 787 035c 5A4858BF 	 .word -1084733350
 788 0360 38DB54BF 	 .word -1084957896
 789 0364 404D51BF 	 .word -1085190848
 790 0368 0A9F4DBF 	 .word -1085432054
 791 036c 0BD149BF 	 .word -1085681397
 792 0370 FCE345BF 	 .word -1085938692
 793 0374 73D841BF 	 .word -1086203789
 794 0378 F7AE3DBF 	 .word -1086476553
 795 037c 406839BF 	 .word -1086756800
 796 0380 F70435BF 	 .word -1087044361
 797 0384 C28530BF 	 .word -1087339070
 798 0388 4AEB2BBF 	 .word -1087640758
 799 038c 593627BF 	 .word -1087949223
 800 0390 946722BF 	 .word -1088264300
 801 0394 D87F1DBF 	 .word -1088585768
 802 0398 BB7F18BF 	 .word -1088913477
 803 039c 276813BF 	 .word -1089247193
 804 03a0 D6390EBF 	 .word -1089586730
 805 03a4 A1F508BF 	 .word -1089931871
 806 03a8 419C03BF 	 .word -1090282431
 807 03ac 205DFCBE 	 .word -1090757344
 808 03b0 F35AF1BE 	 .word -1091478797
 809 03b4 6A33E6BE 	 .word -1092209814
 810 03b8 7DE8DABE 	 .word -1092949891
 811 03bc C07BCFBE 	 .word -1093698624
 812 03c0 07EFC3BE 	 .word -1094455545
 813 03c4 2844B8BE 	 .word -1095220184
 814 03c8 D97CACBE 	 .word -1095992103
 815 03cc ED9AA0BE 	 .word -1096770835
 816 03d0 3CA094BE 	 .word -1097555908
 817 03d4 9B8E88BE 	 .word -1098346853
 818 03d8 C0CF78BE 	 .word -1099378752
 819 03dc 035C60BE 	 .word -1100981245
 820 03e0 ACC547BE 	 .word -1102592596
 821 03e4 AA102FBE 	 .word -1104211798
 822 03e8 644016BE 	 .word -1105837980
 823 03ec 9EB2FABD 	 .word -1107643746
 824 03f0 23BDC8BD 	 .word -1110917853
 825 03f4 3FA996BD 	 .word -1114199745
 826 03f8 87FB48BD 	 .word -1119290489
 827 03fc 350AC9BC 	 .word -1127675339
 828              	 .global CosineTable
 829              	 .section .data.CosineTable,"aw",%progbits
 830              	 .align 2
 833              	CosineTable:
 834 0000 0000803F 	 .word 1065353216
 835 0004 46EC7F3F 	 .word 1065348166
 836 0008 07B17F3F 	 .word 1065332999
 837 000c 664E7F3F 	 .word 1065307750
 838 0010 72C47E3F 	 .word 1065272434
 839 0014 2B137E3F 	 .word 1065227051
 840 0018 B43A7D3F 	 .word 1065171636
 841 001c 2E3B7C3F 	 .word 1065106222
 842 0020 BA147B3F 	 .word 1065030842
 843 0024 9BC7793F 	 .word 1064945563
 844 0028 F453783F 	 .word 1064850420
 845 002c 06BA763F 	 .word 1064745478
 846 0030 05FA743F 	 .word 1064630789
 847 0034 4414733F 	 .word 1064506436
 848 0038 0709713F 	 .word 1064372487
 849 003c A1D86E3F 	 .word 1064229025
 850 0040 66836C3F 	 .word 1064076134
 851 0044 AB096A3F 	 .word 1063913899
 852 0048 D36B673F 	 .word 1063742419
 853 004c 54AA643F 	 .word 1063561812
 854 0050 93C5613F 	 .word 1063372179
 855 0054 06BE5E3F 	 .word 1063173638
 856 0058 21945B3F 	 .word 1062966305
 857 005c 5A48583F 	 .word 1062750298
 858 0060 38DB543F 	 .word 1062525752
 859 0064 404D513F 	 .word 1062292800
 860 0068 0A9F4D3F 	 .word 1062051594
 861 006c 0BD1493F 	 .word 1061802251
 862 0070 FCE3453F 	 .word 1061544956
 863 0074 73D8413F 	 .word 1061279859
 864 0078 F7AE3D3F 	 .word 1061007095
 865 007c 4068393F 	 .word 1060726848
 866 0080 F704353F 	 .word 1060439287
 867 0084 C285303F 	 .word 1060144578
 868 0088 4AEB2B3F 	 .word 1059842890
 869 008c 5936273F 	 .word 1059534425
 870 0090 9467223F 	 .word 1059219348
 871 0094 D87F1D3F 	 .word 1058897880
 872 0098 BB7F183F 	 .word 1058570171
 873 009c 2768133F 	 .word 1058236455
 874 00a0 D6390E3F 	 .word 1057896918
 875 00a4 A1F5083F 	 .word 1057551777
 876 00a8 419C033F 	 .word 1057201217
 877 00ac 205DFC3E 	 .word 1056726304
 878 00b0 F35AF13E 	 .word 1056004851
 879 00b4 6A33E63E 	 .word 1055273834
 880 00b8 7DE8DA3E 	 .word 1054533757
 881 00bc C07BCF3E 	 .word 1053785024
 882 00c0 07EFC33E 	 .word 1053028103
 883 00c4 2844B83E 	 .word 1052263464
 884 00c8 D97CAC3E 	 .word 1051491545
 885 00cc ED9AA03E 	 .word 1050712813
 886 00d0 3CA0943E 	 .word 1049927740
 887 00d4 9B8E883E 	 .word 1049136795
 888 00d8 C0CF783E 	 .word 1048104896
 889 00dc 035C603E 	 .word 1046502403
 890 00e0 ACC5473E 	 .word 1044891052
 891 00e4 AA102F3E 	 .word 1043271850
 892 00e8 6440163E 	 .word 1041645668
 893 00ec 9EB2FA3D 	 .word 1039839902
 894 00f0 23BDC83D 	 .word 1036565795
 895 00f4 3FA9963D 	 .word 1033283903
 896 00f8 87FB483D 	 .word 1028193159
 897 00fc 350AC93C 	 .word 1019808309
 898 0100 00000000 	 .word 0
 899 0104 350AC9BC 	 .word -1127675339
 900 0108 87FB48BD 	 .word -1119290489
 901 010c 3FA996BD 	 .word -1114199745
 902 0110 23BDC8BD 	 .word -1110917853
 903 0114 9EB2FABD 	 .word -1107643746
 904 0118 644016BE 	 .word -1105837980
 905 011c AA102FBE 	 .word -1104211798
 906 0120 ACC547BE 	 .word -1102592596
 907 0124 035C60BE 	 .word -1100981245
 908 0128 C0CF78BE 	 .word -1099378752
 909 012c 9B8E88BE 	 .word -1098346853
 910 0130 3CA094BE 	 .word -1097555908
 911 0134 ED9AA0BE 	 .word -1096770835
 912 0138 D97CACBE 	 .word -1095992103
 913 013c 2844B8BE 	 .word -1095220184
 914 0140 07EFC3BE 	 .word -1094455545
 915 0144 C07BCFBE 	 .word -1093698624
 916 0148 7DE8DABE 	 .word -1092949891
 917 014c 6A33E6BE 	 .word -1092209814
 918 0150 F35AF1BE 	 .word -1091478797
 919 0154 205DFCBE 	 .word -1090757344
 920 0158 419C03BF 	 .word -1090282431
 921 015c A1F508BF 	 .word -1089931871
 922 0160 D6390EBF 	 .word -1089586730
 923 0164 276813BF 	 .word -1089247193
 924 0168 BB7F18BF 	 .word -1088913477
 925 016c D87F1DBF 	 .word -1088585768
 926 0170 946722BF 	 .word -1088264300
 927 0174 593627BF 	 .word -1087949223
 928 0178 4AEB2BBF 	 .word -1087640758
 929 017c C28530BF 	 .word -1087339070
 930 0180 F70435BF 	 .word -1087044361
 931 0184 406839BF 	 .word -1086756800
 932 0188 F7AE3DBF 	 .word -1086476553
 933 018c 73D841BF 	 .word -1086203789
 934 0190 FCE345BF 	 .word -1085938692
 935 0194 0BD149BF 	 .word -1085681397
 936 0198 0A9F4DBF 	 .word -1085432054
 937 019c 404D51BF 	 .word -1085190848
 938 01a0 38DB54BF 	 .word -1084957896
 939 01a4 5A4858BF 	 .word -1084733350
 940 01a8 21945BBF 	 .word -1084517343
 941 01ac 06BE5EBF 	 .word -1084310010
 942 01b0 93C561BF 	 .word -1084111469
 943 01b4 54AA64BF 	 .word -1083921836
 944 01b8 D36B67BF 	 .word -1083741229
 945 01bc AB096ABF 	 .word -1083569749
 946 01c0 66836CBF 	 .word -1083407514
 947 01c4 A1D86EBF 	 .word -1083254623
 948 01c8 070971BF 	 .word -1083111161
 949 01cc 441473BF 	 .word -1082977212
 950 01d0 05FA74BF 	 .word -1082852859
 951 01d4 06BA76BF 	 .word -1082738170
 952 01d8 F45378BF 	 .word -1082633228
 953 01dc 9BC779BF 	 .word -1082538085
 954 01e0 BA147BBF 	 .word -1082452806
 955 01e4 2E3B7CBF 	 .word -1082377426
 956 01e8 B43A7DBF 	 .word -1082312012
 957 01ec 2B137EBF 	 .word -1082256597
 958 01f0 72C47EBF 	 .word -1082211214
 959 01f4 664E7FBF 	 .word -1082175898
 960 01f8 07B17FBF 	 .word -1082150649
 961 01fc 46EC7FBF 	 .word -1082135482
 962 0200 000080BF 	 .word -1082130432
 963 0204 46EC7FBF 	 .word -1082135482
 964 0208 07B17FBF 	 .word -1082150649
 965 020c 664E7FBF 	 .word -1082175898
 966 0210 72C47EBF 	 .word -1082211214
 967 0214 2B137EBF 	 .word -1082256597
 968 0218 B43A7DBF 	 .word -1082312012
 969 021c 2E3B7CBF 	 .word -1082377426
 970 0220 BA147BBF 	 .word -1082452806
 971 0224 9BC779BF 	 .word -1082538085
 972 0228 F45378BF 	 .word -1082633228
 973 022c 06BA76BF 	 .word -1082738170
 974 0230 05FA74BF 	 .word -1082852859
 975 0234 441473BF 	 .word -1082977212
 976 0238 070971BF 	 .word -1083111161
 977 023c A1D86EBF 	 .word -1083254623
 978 0240 66836CBF 	 .word -1083407514
 979 0244 AB096ABF 	 .word -1083569749
 980 0248 D36B67BF 	 .word -1083741229
 981 024c 54AA64BF 	 .word -1083921836
 982 0250 93C561BF 	 .word -1084111469
 983 0254 06BE5EBF 	 .word -1084310010
 984 0258 21945BBF 	 .word -1084517343
 985 025c 5A4858BF 	 .word -1084733350
 986 0260 38DB54BF 	 .word -1084957896
 987 0264 404D51BF 	 .word -1085190848
 988 0268 0A9F4DBF 	 .word -1085432054
 989 026c 0BD149BF 	 .word -1085681397
 990 0270 FCE345BF 	 .word -1085938692
 991 0274 73D841BF 	 .word -1086203789
 992 0278 F7AE3DBF 	 .word -1086476553
 993 027c 406839BF 	 .word -1086756800
 994 0280 F70435BF 	 .word -1087044361
 995 0284 C28530BF 	 .word -1087339070
 996 0288 4AEB2BBF 	 .word -1087640758
 997 028c 593627BF 	 .word -1087949223
 998 0290 946722BF 	 .word -1088264300
 999 0294 D87F1DBF 	 .word -1088585768
 1000 0298 BB7F18BF 	 .word -1088913477
 1001 029c 276813BF 	 .word -1089247193
 1002 02a0 D6390EBF 	 .word -1089586730
 1003 02a4 A1F508BF 	 .word -1089931871
 1004 02a8 419C03BF 	 .word -1090282431
 1005 02ac 205DFCBE 	 .word -1090757344
 1006 02b0 F35AF1BE 	 .word -1091478797
 1007 02b4 6A33E6BE 	 .word -1092209814
 1008 02b8 7DE8DABE 	 .word -1092949891
 1009 02bc C07BCFBE 	 .word -1093698624
 1010 02c0 07EFC3BE 	 .word -1094455545
 1011 02c4 2844B8BE 	 .word -1095220184
 1012 02c8 D97CACBE 	 .word -1095992103
 1013 02cc ED9AA0BE 	 .word -1096770835
 1014 02d0 3CA094BE 	 .word -1097555908
 1015 02d4 9B8E88BE 	 .word -1098346853
 1016 02d8 C0CF78BE 	 .word -1099378752
 1017 02dc 035C60BE 	 .word -1100981245
 1018 02e0 ACC547BE 	 .word -1102592596
 1019 02e4 AA102FBE 	 .word -1104211798
 1020 02e8 644016BE 	 .word -1105837980
 1021 02ec 9EB2FABD 	 .word -1107643746
 1022 02f0 23BDC8BD 	 .word -1110917853
 1023 02f4 3FA996BD 	 .word -1114199745
 1024 02f8 87FB48BD 	 .word -1119290489
 1025 02fc 350AC9BC 	 .word -1127675339
 1026 0300 00000000 	 .word 0
 1027 0304 350AC93C 	 .word 1019808309
 1028 0308 87FB483D 	 .word 1028193159
 1029 030c 3FA9963D 	 .word 1033283903
 1030 0310 23BDC83D 	 .word 1036565795
 1031 0314 9EB2FA3D 	 .word 1039839902
 1032 0318 6440163E 	 .word 1041645668
 1033 031c AA102F3E 	 .word 1043271850
 1034 0320 ACC5473E 	 .word 1044891052
 1035 0324 035C603E 	 .word 1046502403
 1036 0328 C0CF783E 	 .word 1048104896
 1037 032c 9B8E883E 	 .word 1049136795
 1038 0330 3CA0943E 	 .word 1049927740
 1039 0334 ED9AA03E 	 .word 1050712813
 1040 0338 D97CAC3E 	 .word 1051491545
 1041 033c 2844B83E 	 .word 1052263464
 1042 0340 07EFC33E 	 .word 1053028103
 1043 0344 C07BCF3E 	 .word 1053785024
 1044 0348 7DE8DA3E 	 .word 1054533757
 1045 034c 6A33E63E 	 .word 1055273834
 1046 0350 F35AF13E 	 .word 1056004851
 1047 0354 205DFC3E 	 .word 1056726304
 1048 0358 419C033F 	 .word 1057201217
 1049 035c A1F5083F 	 .word 1057551777
 1050 0360 D6390E3F 	 .word 1057896918
 1051 0364 2768133F 	 .word 1058236455
 1052 0368 BB7F183F 	 .word 1058570171
 1053 036c D87F1D3F 	 .word 1058897880
 1054 0370 9467223F 	 .word 1059219348
 1055 0374 5936273F 	 .word 1059534425
 1056 0378 4AEB2B3F 	 .word 1059842890
 1057 037c C285303F 	 .word 1060144578
 1058 0380 F704353F 	 .word 1060439287
 1059 0384 4068393F 	 .word 1060726848
 1060 0388 F7AE3D3F 	 .word 1061007095
 1061 038c 73D8413F 	 .word 1061279859
 1062 0390 FCE3453F 	 .word 1061544956
 1063 0394 0BD1493F 	 .word 1061802251
 1064 0398 0A9F4D3F 	 .word 1062051594
 1065 039c 404D513F 	 .word 1062292800
 1066 03a0 38DB543F 	 .word 1062525752
 1067 03a4 5A48583F 	 .word 1062750298
 1068 03a8 21945B3F 	 .word 1062966305
 1069 03ac 06BE5E3F 	 .word 1063173638
 1070 03b0 93C5613F 	 .word 1063372179
 1071 03b4 54AA643F 	 .word 1063561812
 1072 03b8 D36B673F 	 .word 1063742419
 1073 03bc AB096A3F 	 .word 1063913899
 1074 03c0 66836C3F 	 .word 1064076134
 1075 03c4 A1D86E3F 	 .word 1064229025
 1076 03c8 0709713F 	 .word 1064372487
 1077 03cc 4414733F 	 .word 1064506436
 1078 03d0 05FA743F 	 .word 1064630789
 1079 03d4 06BA763F 	 .word 1064745478
 1080 03d8 F453783F 	 .word 1064850420
 1081 03dc 9BC7793F 	 .word 1064945563
 1082 03e0 BA147B3F 	 .word 1065030842
 1083 03e4 2E3B7C3F 	 .word 1065106222
 1084 03e8 B43A7D3F 	 .word 1065171636
 1085 03ec 2B137E3F 	 .word 1065227051
 1086 03f0 72C47E3F 	 .word 1065272434
 1087 03f4 664E7F3F 	 .word 1065307750
 1088 03f8 07B17F3F 	 .word 1065332999
 1089 03fc 46EC7F3F 	 .word 1065348166
 1090              	 .section .text.main,"ax",%progbits
 1091              	 .align 2
 1092              	 .global main
 1093              	 .code 16
 1094              	 .thumb_func
 1096              	main:
 1097              	.LFB463:
 1098              	 .file 1 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2024 Aug 05 09:00:14
   5:../main.c     ****  *  Author: dell
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
  12:../main.c     **** #include "parameter.h"
  13:../main.c     **** /**
  14:../main.c     **** 
  15:../main.c     ****  * @brief main() - Application entry point
  16:../main.c     ****  *
  17:../main.c     ****  * <b>Details of function</b><br>
  18:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  19:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  20:../main.c     ****  * code.
  21:../main.c     ****  */
  22:../main.c     **** XMC_VADC_RESULT_SIZE_t current_phaseU,current_phaseV;
  23:../main.c     **** float ADC_scale=max_motor_current/1433;
  24:../main.c     **** unsigned int cumulative_sum_phaseU=0;
  25:../main.c     **** unsigned int cumulative_sum_phaseV=0;
  26:../main.c     **** int32_t moving_average_phaseU=0;
  27:../main.c     **** int32_t moving_average_phaseV=0;
  28:../main.c     **** 
  29:../main.c     **** float aIObs = 0;
  30:../main.c     **** float b1IObs = 0;
  31:../main.c     **** float b2IObs = 0;
  32:../main.c     **** float b3IObs = 0;
  33:../main.c     **** uint16_t flagStartObs=0;
  34:../main.c     **** float EalphaHat=0;
  35:../main.c     **** float EbetaHat=0;
  36:../main.c     **** float IalphaHat=0;
  37:../main.c     **** float IbetaHat=0;
  38:../main.c     **** float Balpha=0;
  39:../main.c     **** float Bbeta=0;
  40:../main.c     **** float a1BEMFobs=0;
  41:../main.c     **** float a2BEMFobs=0;
  42:../main.c     **** float b1BEMFobs=0;
  43:../main.c     **** float b2BEMFobs=0;
  44:../main.c     **** 
  45:../main.c     **** 
  46:../main.c     **** uint16_t da=0,db=0,dc=0;
  47:../main.c     **** float d0=0,d1=0,d2=0;
  48:../main.c     **** 
  49:../main.c     **** uint16_t OpenLoop=1;
  50:../main.c     **** uint16_t ChangeMode=1;
  51:../main.c     **** 
  52:../main.c     **** uint16_t Startup_Lock_Count = 0;
  53:../main.c     **** uint16_t Speed_Maintain_Cnt1=0;
  54:../main.c     **** 
  55:../main.c     **** float SineTheta=0;
  56:../main.c     **** float CosineTheta=0;
  57:../main.c     **** float Theta=0;
  58:../main.c     **** float Startup_Ramp_Angle_Rads_Per_Sec=0;
  59:../main.c     **** float positionTH=0;
  60:../main.c     **** float positiondTH=0;
  61:../main.c     **** float positionTHI=0;
  62:../main.c     **** float positionTHO=0;
  63:../main.c     **** float positionzTH=0;
  64:../main.c     **** float closeLoopTHI=0;
  65:../main.c     **** float closeLoopTHO=0;
  66:../main.c     **** float deviationTH=0;
  67:../main.c     **** float decayRateTH=0;
  68:../main.c     **** uint16_t closeLoopTHstate=0;
  69:../main.c     **** float finalTHI=0;
  70:../main.c     **** float finalTHO=0;
  71:../main.c     **** 
  72:../main.c     **** uint16_t estimatorState=0;
  73:../main.c     **** uint16_t estimatorStatecnt1=0;
  74:../main.c     **** float speedRefCnt=(float)(0.2)*PWM_FREQ;
  75:../main.c     **** 
  76:../main.c     **** float SUMdTH=0;
  77:../main.c     **** float SpeedMea1=0;
  78:../main.c     **** float SpeedMea=0;
  79:../main.c     **** float SpeedRef=0;
  80:../main.c     **** float FIFOdTH[21];
  81:../main.c     **** float We;
  82:../main.c     **** uint16_t countFIFO=0;
  83:../main.c     **** 
  84:../main.c     **** 
  85:../main.c     **** float current_u=0;
  86:../main.c     **** float current_v=0;
  87:../main.c     **** float current_alpha=0;
  88:../main.c     **** float current_beta=0;
  89:../main.c     **** float current_sd=0;
  90:../main.c     **** float current_sq=0;
  91:../main.c     **** 
  92:../main.c     **** float SpeedError=0;
  93:../main.c     **** float Kp_IsqRef;
  94:../main.c     **** float Ki_IsqRef;
  95:../main.c     **** float sum_IsqRef=0;
  96:../main.c     **** float IsqRef1=0;
  97:../main.c     **** float IsqRef=0;
  98:../main.c     **** float IsdError=0;
  99:../main.c     **** float sum_Usd=0;
 100:../main.c     **** float Usd1=0;
 101:../main.c     **** float Usd=0;
 102:../main.c     **** float Kp_Usd;
 103:../main.c     **** float Ki_Usd;
 104:../main.c     **** float IsqError=0;
 105:../main.c     **** float sum_Usq=0;
 106:../main.c     **** float Usq1=0;
 107:../main.c     **** float Usq=0;
 108:../main.c     **** float Kp_Usq;
 109:../main.c     **** float Ki_Usq;
 110:../main.c     **** 
 111:../main.c     **** 
 112:../main.c     **** float Usalpha=0,Usbeta=0;
 113:../main.c     **** float Usa=0,Usb=0,Usc=0;
 114:../main.c     **** float SineTable[256]=
 115:../main.c     **** {
 116:../main.c     **** 0.0f,
 117:../main.c     **** 0.024541f,
 118:../main.c     **** 0.049068f,
 119:../main.c     **** 0.073565f,
 120:../main.c     **** 0.098017f,
 121:../main.c     **** 0.122411f,
 122:../main.c     **** 0.14673f,
 123:../main.c     **** 0.170962f,
 124:../main.c     **** 0.19509f,
 125:../main.c     **** 0.219101f,
 126:../main.c     **** 0.24298f,
 127:../main.c     **** 0.266713f,
 128:../main.c     **** 0.290285f,
 129:../main.c     **** 0.313682f,
 130:../main.c     **** 0.33689f,
 131:../main.c     **** 0.359895f,
 132:../main.c     **** 0.382683f,
 133:../main.c     **** 0.405241f,
 134:../main.c     **** 0.427555f,
 135:../main.c     **** 0.449611f,
 136:../main.c     **** 0.471397f,
 137:../main.c     **** 0.492898f,
 138:../main.c     **** 0.514103f,
 139:../main.c     **** 0.534998f,
 140:../main.c     **** 0.55557f,
 141:../main.c     **** 0.575808f,
 142:../main.c     **** 0.595699f,
 143:../main.c     **** 0.615232f,
 144:../main.c     **** 0.634393f,
 145:../main.c     **** 0.653173f,
 146:../main.c     **** 0.671559f,
 147:../main.c     **** 0.689541f,
 148:../main.c     **** 0.707107f,
 149:../main.c     **** 0.724247f,
 150:../main.c     **** 0.740951f,
 151:../main.c     **** 0.757209f,
 152:../main.c     **** 0.77301f,
 153:../main.c     **** 0.788346f,
 154:../main.c     **** 0.803208f,
 155:../main.c     **** 0.817585f,
 156:../main.c     **** 0.83147f,
 157:../main.c     **** 0.844854f,
 158:../main.c     **** 0.857729f,
 159:../main.c     **** 0.870087f,
 160:../main.c     **** 0.881921f,
 161:../main.c     **** 0.893224f,
 162:../main.c     **** 0.903989f,
 163:../main.c     **** 0.91421f,
 164:../main.c     **** 0.92388f,
 165:../main.c     **** 0.932993f,
 166:../main.c     **** 0.941544f,
 167:../main.c     **** 0.949528f,
 168:../main.c     **** 0.95694f,
 169:../main.c     **** 0.963776f,
 170:../main.c     **** 0.970031f,
 171:../main.c     **** 0.975702f,
 172:../main.c     **** 0.980785f,
 173:../main.c     **** 0.985278f,
 174:../main.c     **** 0.989177f,
 175:../main.c     **** 0.99248f,
 176:../main.c     **** 0.995185f,
 177:../main.c     **** 0.99729f,
 178:../main.c     **** 0.998795f,
 179:../main.c     **** 0.999699f,
 180:../main.c     **** 1.0f,
 181:../main.c     **** 0.999699f,
 182:../main.c     **** 0.998795f,
 183:../main.c     **** 0.99729f,
 184:../main.c     **** 0.995185f,
 185:../main.c     **** 0.99248f,
 186:../main.c     **** 0.989177f,
 187:../main.c     **** 0.985278f,
 188:../main.c     **** 0.980785f,
 189:../main.c     **** 0.975702f,
 190:../main.c     **** 0.970031f,
 191:../main.c     **** 0.963776f,
 192:../main.c     **** 0.95694f,
 193:../main.c     **** 0.949528f,
 194:../main.c     **** 0.941544f,
 195:../main.c     **** 0.932993f,
 196:../main.c     **** 0.92388f,
 197:../main.c     **** 0.91421f,
 198:../main.c     **** 0.903989f,
 199:../main.c     **** 0.893224f,
 200:../main.c     **** 0.881921f,
 201:../main.c     **** 0.870087f,
 202:../main.c     **** 0.857729f,
 203:../main.c     **** 0.844854f,
 204:../main.c     **** 0.83147f,
 205:../main.c     **** 0.817585f,
 206:../main.c     **** 0.803208f,
 207:../main.c     **** 0.788346f,
 208:../main.c     **** 0.77301f,
 209:../main.c     **** 0.757209f,
 210:../main.c     **** 0.740951f,
 211:../main.c     **** 0.724247f,
 212:../main.c     **** 0.707107f,
 213:../main.c     **** 0.689541f,
 214:../main.c     **** 0.671559f,
 215:../main.c     **** 0.653173f,
 216:../main.c     **** 0.634393f,
 217:../main.c     **** 0.615232f,
 218:../main.c     **** 0.595699f,
 219:../main.c     **** 0.575808f,
 220:../main.c     **** 0.55557f,
 221:../main.c     **** 0.534998f,
 222:../main.c     **** 0.514103f,
 223:../main.c     **** 0.492898f,
 224:../main.c     **** 0.471397f,
 225:../main.c     **** 0.449611f,
 226:../main.c     **** 0.427555f,
 227:../main.c     **** 0.405241f,
 228:../main.c     **** 0.382683f,
 229:../main.c     **** 0.359895f,
 230:../main.c     **** 0.33689f,
 231:../main.c     **** 0.313682f,
 232:../main.c     **** 0.290285f,
 233:../main.c     **** 0.266713f,
 234:../main.c     **** 0.24298f,
 235:../main.c     **** 0.219101f,
 236:../main.c     **** 0.19509f,
 237:../main.c     **** 0.170962f,
 238:../main.c     **** 0.14673f,
 239:../main.c     **** 0.122411f,
 240:../main.c     **** 0.098017f,
 241:../main.c     **** 0.073565f,
 242:../main.c     **** 0.049068f,
 243:../main.c     **** 0.024541f,
 244:../main.c     **** 0.0f,
 245:../main.c     **** -0.024541f,
 246:../main.c     **** -0.049068f,
 247:../main.c     **** -0.073565f,
 248:../main.c     **** -0.098017f,
 249:../main.c     **** -0.122411f,
 250:../main.c     **** -0.14673f,
 251:../main.c     **** -0.170962f,
 252:../main.c     **** -0.19509f,
 253:../main.c     **** -0.219101f,
 254:../main.c     **** -0.24298f,
 255:../main.c     **** -0.266713f,
 256:../main.c     **** -0.290285f,
 257:../main.c     **** -0.313682f,
 258:../main.c     **** -0.33689f,
 259:../main.c     **** -0.359895f,
 260:../main.c     **** -0.382683f,
 261:../main.c     **** -0.405241f,
 262:../main.c     **** -0.427555f,
 263:../main.c     **** -0.449611f,
 264:../main.c     **** -0.471397f,
 265:../main.c     **** -0.492898f,
 266:../main.c     **** -0.514103f,
 267:../main.c     **** -0.534998f,
 268:../main.c     **** -0.55557f,
 269:../main.c     **** -0.575808f,
 270:../main.c     **** -0.595699f,
 271:../main.c     **** -0.615232f,
 272:../main.c     **** -0.634393f,
 273:../main.c     **** -0.653173f,
 274:../main.c     **** -0.671559f,
 275:../main.c     **** -0.689541f,
 276:../main.c     **** -0.707107f,
 277:../main.c     **** -0.724247f,
 278:../main.c     **** -0.740951f,
 279:../main.c     **** -0.757209f,
 280:../main.c     **** -0.77301f,
 281:../main.c     **** -0.788346f,
 282:../main.c     **** -0.803208f,
 283:../main.c     **** -0.817585f,
 284:../main.c     **** -0.83147f,
 285:../main.c     **** -0.844854f,
 286:../main.c     **** -0.857729f,
 287:../main.c     **** -0.870087f,
 288:../main.c     **** -0.881921f,
 289:../main.c     **** -0.893224f,
 290:../main.c     **** -0.903989f,
 291:../main.c     **** -0.91421f,
 292:../main.c     **** -0.92388f,
 293:../main.c     **** -0.932993f,
 294:../main.c     **** -0.941544f,
 295:../main.c     **** -0.949528f,
 296:../main.c     **** -0.95694f,
 297:../main.c     **** -0.963776f,
 298:../main.c     **** -0.970031f,
 299:../main.c     **** -0.975702f,
 300:../main.c     **** -0.980785f,
 301:../main.c     **** -0.985278f,
 302:../main.c     **** -0.989177f,
 303:../main.c     **** -0.99248f,
 304:../main.c     **** -0.995185f,
 305:../main.c     **** -0.99729f,
 306:../main.c     **** -0.998795f,
 307:../main.c     **** -0.999699f,
 308:../main.c     **** -1.0f,
 309:../main.c     **** -0.999699f,
 310:../main.c     **** -0.998795f,
 311:../main.c     **** -0.99729f,
 312:../main.c     **** -0.995185f,
 313:../main.c     **** -0.99248f,
 314:../main.c     **** -0.989177f,
 315:../main.c     **** -0.985278f,
 316:../main.c     **** -0.980785f,
 317:../main.c     **** -0.975702f,
 318:../main.c     **** -0.970031f,
 319:../main.c     **** -0.963776f,
 320:../main.c     **** -0.95694f,
 321:../main.c     **** -0.949528f,
 322:../main.c     **** -0.941544f,
 323:../main.c     **** -0.932993f,
 324:../main.c     **** -0.92388f,
 325:../main.c     **** -0.91421f,
 326:../main.c     **** -0.903989f,
 327:../main.c     **** -0.893224f,
 328:../main.c     **** -0.881921f,
 329:../main.c     **** -0.870087f,
 330:../main.c     **** -0.857729f,
 331:../main.c     **** -0.844854f,
 332:../main.c     **** -0.83147f,
 333:../main.c     **** -0.817585f,
 334:../main.c     **** -0.803208f,
 335:../main.c     **** -0.788346f,
 336:../main.c     **** -0.77301f,
 337:../main.c     **** -0.757209f,
 338:../main.c     **** -0.740951f,
 339:../main.c     **** -0.724247f,
 340:../main.c     **** -0.707107f,
 341:../main.c     **** -0.689541f,
 342:../main.c     **** -0.671559f,
 343:../main.c     **** -0.653173f,
 344:../main.c     **** -0.634393f,
 345:../main.c     **** -0.615232f,
 346:../main.c     **** -0.595699f,
 347:../main.c     **** -0.575808f,
 348:../main.c     **** -0.55557f,
 349:../main.c     **** -0.534998f,
 350:../main.c     **** -0.514103f,
 351:../main.c     **** -0.492898f,
 352:../main.c     **** -0.471397f,
 353:../main.c     **** -0.449611f,
 354:../main.c     **** -0.427555f,
 355:../main.c     **** -0.405241f,
 356:../main.c     **** -0.382683f,
 357:../main.c     **** -0.359895f,
 358:../main.c     **** -0.33689f,
 359:../main.c     **** -0.313682f,
 360:../main.c     **** -0.290285f,
 361:../main.c     **** -0.266713f,
 362:../main.c     **** -0.24298f,
 363:../main.c     **** -0.219101f,
 364:../main.c     **** -0.19509f,
 365:../main.c     **** -0.170962f,
 366:../main.c     **** -0.14673f,
 367:../main.c     **** -0.122411f,
 368:../main.c     **** -0.098017f,
 369:../main.c     **** -0.073565f,
 370:../main.c     **** -0.049068f,
 371:../main.c     **** -0.024541f
 372:../main.c     **** };
 373:../main.c     **** float CosineTable[256]=
 374:../main.c     **** {
 375:../main.c     **** 1.0f,
 376:../main.c     **** 0.999699f,
 377:../main.c     **** 0.998795f,
 378:../main.c     **** 0.99729f,
 379:../main.c     **** 0.995185f,
 380:../main.c     **** 0.99248f,
 381:../main.c     **** 0.989177f,
 382:../main.c     **** 0.985278f,
 383:../main.c     **** 0.980785f,
 384:../main.c     **** 0.975702f,
 385:../main.c     **** 0.970031f,
 386:../main.c     **** 0.963776f,
 387:../main.c     **** 0.95694f,
 388:../main.c     **** 0.949528f,
 389:../main.c     **** 0.941544f,
 390:../main.c     **** 0.932993f,
 391:../main.c     **** 0.92388f,
 392:../main.c     **** 0.91421f,
 393:../main.c     **** 0.903989f,
 394:../main.c     **** 0.893224f,
 395:../main.c     **** 0.881921f,
 396:../main.c     **** 0.870087f,
 397:../main.c     **** 0.857729f,
 398:../main.c     **** 0.844854f,
 399:../main.c     **** 0.83147f,
 400:../main.c     **** 0.817585f,
 401:../main.c     **** 0.803208f,
 402:../main.c     **** 0.788346f,
 403:../main.c     **** 0.77301f,
 404:../main.c     **** 0.757209f,
 405:../main.c     **** 0.740951f,
 406:../main.c     **** 0.724247f,
 407:../main.c     **** 0.707107f,
 408:../main.c     **** 0.689541f,
 409:../main.c     **** 0.671559f,
 410:../main.c     **** 0.653173f,
 411:../main.c     **** 0.634393f,
 412:../main.c     **** 0.615232f,
 413:../main.c     **** 0.595699f,
 414:../main.c     **** 0.575808f,
 415:../main.c     **** 0.55557f,
 416:../main.c     **** 0.534998f,
 417:../main.c     **** 0.514103f,
 418:../main.c     **** 0.492898f,
 419:../main.c     **** 0.471397f,
 420:../main.c     **** 0.449611f,
 421:../main.c     **** 0.427555f,
 422:../main.c     **** 0.405241f,
 423:../main.c     **** 0.382683f,
 424:../main.c     **** 0.359895f,
 425:../main.c     **** 0.33689f,
 426:../main.c     **** 0.313682f,
 427:../main.c     **** 0.290285f,
 428:../main.c     **** 0.266713f,
 429:../main.c     **** 0.24298f,
 430:../main.c     **** 0.219101f,
 431:../main.c     **** 0.19509f,
 432:../main.c     **** 0.170962f,
 433:../main.c     **** 0.14673f,
 434:../main.c     **** 0.122411f,
 435:../main.c     **** 0.098017f,
 436:../main.c     **** 0.073565f,
 437:../main.c     **** 0.049068f,
 438:../main.c     **** 0.024541f,
 439:../main.c     **** 0.0f,
 440:../main.c     **** -0.024541f,
 441:../main.c     **** -0.049068f,
 442:../main.c     **** -0.073565f,
 443:../main.c     **** -0.098017f,
 444:../main.c     **** -0.122411f,
 445:../main.c     **** -0.14673f,
 446:../main.c     **** -0.170962f,
 447:../main.c     **** -0.19509f,
 448:../main.c     **** -0.219101f,
 449:../main.c     **** -0.24298f,
 450:../main.c     **** -0.266713f,
 451:../main.c     **** -0.290285f,
 452:../main.c     **** -0.313682f,
 453:../main.c     **** -0.33689f,
 454:../main.c     **** -0.359895f,
 455:../main.c     **** -0.382683f,
 456:../main.c     **** -0.405241f,
 457:../main.c     **** -0.427555f,
 458:../main.c     **** -0.449611f,
 459:../main.c     **** -0.471397f,
 460:../main.c     **** -0.492898f,
 461:../main.c     **** -0.514103f,
 462:../main.c     **** -0.534998f,
 463:../main.c     **** -0.55557f,
 464:../main.c     **** -0.575808f,
 465:../main.c     **** -0.595699f,
 466:../main.c     **** -0.615232f,
 467:../main.c     **** -0.634393f,
 468:../main.c     **** -0.653173f,
 469:../main.c     **** -0.671559f,
 470:../main.c     **** -0.689541f,
 471:../main.c     **** -0.707107f,
 472:../main.c     **** -0.724247f,
 473:../main.c     **** -0.740951f,
 474:../main.c     **** -0.757209f,
 475:../main.c     **** -0.77301f,
 476:../main.c     **** -0.788346f,
 477:../main.c     **** -0.803208f,
 478:../main.c     **** -0.817585f,
 479:../main.c     **** -0.83147f,
 480:../main.c     **** -0.844854f,
 481:../main.c     **** -0.857729f,
 482:../main.c     **** -0.870087f,
 483:../main.c     **** -0.881921f,
 484:../main.c     **** -0.893224f,
 485:../main.c     **** -0.903989f,
 486:../main.c     **** -0.91421f,
 487:../main.c     **** -0.92388f,
 488:../main.c     **** -0.932993f,
 489:../main.c     **** -0.941544f,
 490:../main.c     **** -0.949528f,
 491:../main.c     **** -0.95694f,
 492:../main.c     **** -0.963776f,
 493:../main.c     **** -0.970031f,
 494:../main.c     **** -0.975702f,
 495:../main.c     **** -0.980785f,
 496:../main.c     **** -0.985278f,
 497:../main.c     **** -0.989177f,
 498:../main.c     **** -0.99248f,
 499:../main.c     **** -0.995185f,
 500:../main.c     **** -0.99729f,
 501:../main.c     **** -0.998795f,
 502:../main.c     **** -0.999699f,
 503:../main.c     **** -1.0f,
 504:../main.c     **** -0.999699f,
 505:../main.c     **** -0.998795f,
 506:../main.c     **** -0.99729f,
 507:../main.c     **** -0.995185f,
 508:../main.c     **** -0.99248f,
 509:../main.c     **** -0.989177f,
 510:../main.c     **** -0.985278f,
 511:../main.c     **** -0.980785f,
 512:../main.c     **** -0.975702f,
 513:../main.c     **** -0.970031f,
 514:../main.c     **** -0.963776f,
 515:../main.c     **** -0.95694f,
 516:../main.c     **** -0.949528f,
 517:../main.c     **** -0.941544f,
 518:../main.c     **** -0.932993f,
 519:../main.c     **** -0.92388f,
 520:../main.c     **** -0.91421f,
 521:../main.c     **** -0.903989f,
 522:../main.c     **** -0.893224f,
 523:../main.c     **** -0.881921f,
 524:../main.c     **** -0.870087f,
 525:../main.c     **** -0.857729f,
 526:../main.c     **** -0.844854f,
 527:../main.c     **** -0.83147f,
 528:../main.c     **** -0.817585f,
 529:../main.c     **** -0.803208f,
 530:../main.c     **** -0.788346f,
 531:../main.c     **** -0.77301f,
 532:../main.c     **** -0.757209f,
 533:../main.c     **** -0.740951f,
 534:../main.c     **** -0.724247f,
 535:../main.c     **** -0.707107f,
 536:../main.c     **** -0.689541f,
 537:../main.c     **** -0.671559f,
 538:../main.c     **** -0.653173f,
 539:../main.c     **** -0.634393f,
 540:../main.c     **** -0.615232f,
 541:../main.c     **** -0.595699f,
 542:../main.c     **** -0.575808f,
 543:../main.c     **** -0.55557f,
 544:../main.c     **** -0.534998f,
 545:../main.c     **** -0.514103f,
 546:../main.c     **** -0.492898f,
 547:../main.c     **** -0.471397f,
 548:../main.c     **** -0.449611f,
 549:../main.c     **** -0.427555f,
 550:../main.c     **** -0.405241f,
 551:../main.c     **** -0.382683f,
 552:../main.c     **** -0.359895f,
 553:../main.c     **** -0.33689f,
 554:../main.c     **** -0.313682f,
 555:../main.c     **** -0.290285f,
 556:../main.c     **** -0.266713f,
 557:../main.c     **** -0.24298f,
 558:../main.c     **** -0.219101f,
 559:../main.c     **** -0.19509f,
 560:../main.c     **** -0.170962f,
 561:../main.c     **** -0.14673f,
 562:../main.c     **** -0.122411f,
 563:../main.c     **** -0.098017f,
 564:../main.c     **** -0.073565f,
 565:../main.c     **** -0.049068f,
 566:../main.c     **** -0.024541f,
 567:../main.c     **** 0.0f,
 568:../main.c     **** 0.024541f,
 569:../main.c     **** 0.049068f,
 570:../main.c     **** 0.073565f,
 571:../main.c     **** 0.098017f,
 572:../main.c     **** 0.122411f,
 573:../main.c     **** 0.14673f,
 574:../main.c     **** 0.170962f,
 575:../main.c     **** 0.19509f,
 576:../main.c     **** 0.219101f,
 577:../main.c     **** 0.24298f,
 578:../main.c     **** 0.266713f,
 579:../main.c     **** 0.290285f,
 580:../main.c     **** 0.313682f,
 581:../main.c     **** 0.33689f,
 582:../main.c     **** 0.359895f,
 583:../main.c     **** 0.382683f,
 584:../main.c     **** 0.405241f,
 585:../main.c     **** 0.427555f,
 586:../main.c     **** 0.449611f,
 587:../main.c     **** 0.471397f,
 588:../main.c     **** 0.492898f,
 589:../main.c     **** 0.514103f,
 590:../main.c     **** 0.534998f,
 591:../main.c     **** 0.55557f,
 592:../main.c     **** 0.575808f,
 593:../main.c     **** 0.595699f,
 594:../main.c     **** 0.615232f,
 595:../main.c     **** 0.634393f,
 596:../main.c     **** 0.653173f,
 597:../main.c     **** 0.671559f,
 598:../main.c     **** 0.689541f,
 599:../main.c     **** 0.707107f,
 600:../main.c     **** 0.724247f,
 601:../main.c     **** 0.740951f,
 602:../main.c     **** 0.757209f,
 603:../main.c     **** 0.77301f,
 604:../main.c     **** 0.788346f,
 605:../main.c     **** 0.803208f,
 606:../main.c     **** 0.817585f,
 607:../main.c     **** 0.83147f,
 608:../main.c     **** 0.844854f,
 609:../main.c     **** 0.857729f,
 610:../main.c     **** 0.870087f,
 611:../main.c     **** 0.881921f,
 612:../main.c     **** 0.893224f,
 613:../main.c     **** 0.903989f,
 614:../main.c     **** 0.91421f,
 615:../main.c     **** 0.92388f,
 616:../main.c     **** 0.932993f,
 617:../main.c     **** 0.941544f,
 618:../main.c     **** 0.949528f,
 619:../main.c     **** 0.95694f,
 620:../main.c     **** 0.963776f,
 621:../main.c     **** 0.970031f,
 622:../main.c     **** 0.975702f,
 623:../main.c     **** 0.980785f,
 624:../main.c     **** 0.985278f,
 625:../main.c     **** 0.989177f,
 626:../main.c     **** 0.99248f,
 627:../main.c     **** 0.995185f,
 628:../main.c     **** 0.99729f,
 629:../main.c     **** 0.998795f,
 630:../main.c     **** 0.999699f
 631:../main.c     **** };
 632:../main.c     **** 
 633:../main.c     **** int main(void)
 634:../main.c     **** {
 1099              	 .loc 1 634 0
 1100              	 .cfi_startproc
 1101 0000 90B5     	 push {r4,r7,lr}
 1102              	.LCFI0:
 1103              	 .cfi_def_cfa_offset 12
 1104              	 .cfi_offset 4,-12
 1105              	 .cfi_offset 7,-8
 1106              	 .cfi_offset 14,-4
 1107 0002 83B0     	 sub sp,sp,#12
 1108              	.LCFI1:
 1109              	 .cfi_def_cfa_offset 24
 1110 0004 00AF     	 add r7,sp,#0
 1111              	.LCFI2:
 1112              	 .cfi_def_cfa_register 7
 635:../main.c     ****   DAVE_STATUS_t status;
 636:../main.c     **** 
 637:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1113              	 .loc 1 637 0
 1114 0006 FC1D     	 add r4,r7,#7
 1115 0008 FFF7FEFF 	 bl DAVE_Init
 1116 000c 031C     	 mov r3,r0
 1117 000e 2370     	 strb r3,[r4]
 638:../main.c     **** 
 639:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 1118              	 .loc 1 639 0
 1119 0010 FB1D     	 add r3,r7,#7
 1120 0012 1B78     	 ldrb r3,[r3]
 1121 0014 002B     	 cmp r3,#0
 1122 0016 00D0     	 beq .L2
 1123              	.L3:
 640:../main.c     ****   {
 641:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 642:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 643:../main.c     **** 
 644:../main.c     ****     while(1U)
 645:../main.c     ****     {
 646:../main.c     **** 
 647:../main.c     ****     }
 1124              	 .loc 1 647 0 discriminator 1
 1125 0018 FEE7     	 b .L3
 1126              	.L2:
 648:../main.c     ****   }
 649:../main.c     **** 
 650:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 651:../main.c     ****   while(1U)
 652:../main.c     ****   {
 653:../main.c     **** 
 654:../main.c     ****   }
 1127              	 .loc 1 654 0 discriminator 2
 1128 001a FEE7     	 b .L2
 1129              	 .cfi_endproc
 1130              	.LFE463:
 1132              	 .section .text.InterruptHandler,"ax",%progbits
 1133              	 .align 2
 1134              	 .global InterruptHandler
 1135              	 .code 16
 1136              	 .thumb_func
 1138              	InterruptHandler:
 1139              	.LFB464:
 655:../main.c     **** }
 656:../main.c     **** 
 657:../main.c     **** 
 658:../main.c     **** /*
 659:../main.c     ****  TIMER_0->INTERRUPT_0->50us (1/20000)
 660:../main.c     ****  Function:vong lap 50us tinh toan 1 lan, thuat toan FOC
 661:../main.c     ****  */
 662:../main.c     **** void InterruptHandler(){
 1140              	 .loc 1 662 0
 1141              	 .cfi_startproc
 1142 0000 80B5     	 push {r7,lr}
 1143              	.LCFI3:
 1144              	 .cfi_def_cfa_offset 8
 1145              	 .cfi_offset 7,-8
 1146              	 .cfi_offset 14,-4
 1147 0002 00AF     	 add r7,sp,#0
 1148              	.LCFI4:
 1149              	 .cfi_def_cfa_register 7
 663:../main.c     **** 	CurrentCoeffCal();
 1150              	 .loc 1 663 0
 1151 0004 FFF7FEFF 	 bl CurrentCoeffCal
 664:../main.c     **** 	AlphaBetaTrans_Current();
 1152              	 .loc 1 664 0
 1153 0008 FFF7FEFF 	 bl AlphaBetaTrans_Current
 665:../main.c     **** 	motionEstimator();
 1154              	 .loc 1 665 0
 1155 000c FFF7FEFF 	 bl motionEstimator
 666:../main.c     **** 	ThetaLoopControl();
 1156              	 .loc 1 666 0
 1157 0010 FFF7FEFF 	 bl ThetaLoopControl
 667:../main.c     **** 	Theta=finalTHI;
 1158              	 .loc 1 667 0
 1159 0014 0C4B     	 ldr r3,.L5
 1160 0016 1A68     	 ldr r2,[r3]
 1161 0018 0C4B     	 ldr r3,.L5+4
 1162 001a 1A60     	 str r2,[r3]
 668:../main.c     **** 	SinCosCheck();
 1163              	 .loc 1 668 0
 1164 001c FFF7FEFF 	 bl SinCosCheck
 669:../main.c     **** 	DQTrans_Current();
 1165              	 .loc 1 669 0
 1166 0020 FFF7FEFF 	 bl DQTrans_Current
 670:../main.c     **** 	LoopcontrolTask();
 1167              	 .loc 1 670 0
 1168 0024 FFF7FEFF 	 bl LoopcontrolTask
 671:../main.c     **** 	Theta=finalTHO;
 1169              	 .loc 1 671 0
 1170 0028 094B     	 ldr r3,.L5+8
 1171 002a 1A68     	 ldr r2,[r3]
 1172 002c 074B     	 ldr r3,.L5+4
 1173 002e 1A60     	 str r2,[r3]
 672:../main.c     **** 	SinCosCheck();
 1174              	 .loc 1 672 0
 1175 0030 FFF7FEFF 	 bl SinCosCheck
 673:../main.c     **** 	UsdqtoUsalphabeta();
 1176              	 .loc 1 673 0
 1177 0034 FFF7FEFF 	 bl UsdqtoUsalphabeta
 674:../main.c     **** 	UsalphabetatoUsabc();
 1178              	 .loc 1 674 0
 1179 0038 FFF7FEFF 	 bl UsalphabetatoUsabc
 675:../main.c     **** 	SVMAlgorithm();
 1180              	 .loc 1 675 0
 1181 003c FFF7FEFF 	 bl SVMAlgorithm
 676:../main.c     **** 	UpdatePWMDutyCycle();
 1182              	 .loc 1 676 0
 1183 0040 FFF7FEFF 	 bl UpdatePWMDutyCycle
 677:../main.c     **** }
 1184              	 .loc 1 677 0
 1185 0044 BD46     	 mov sp,r7
 1186              	 
 1187 0046 80BD     	 pop {r7,pc}
 1188              	.L6:
 1189              	 .align 2
 1190              	.L5:
 1191 0048 00000000 	 .word finalTHI
 1192 004c 00000000 	 .word Theta
 1193 0050 00000000 	 .word finalTHO
 1194              	 .cfi_endproc
 1195              	.LFE464:
 1197              	 .global __aeabi_i2f
 1198              	 .global __aeabi_fmul
 1199              	 .section .text.IRQ15_Handler,"ax",%progbits
 1200              	 .align 2
 1201              	 .global IRQ15_Handler
 1202              	 .code 16
 1203              	 .thumb_func
 1205              	IRQ15_Handler:
 1206              	.LFB465:
 678:../main.c     **** /*
 679:../main.c     ****  Function: Doc ADC dong do ve tren dai 4095 bit qua bo loc moving average filter, tra ve gia tri th
 680:../main.c     ****  Input:current_phaseU, current_phaseV
 681:../main.c     ****  Output:current_u, current_v
 682:../main.c     ****  */
 683:../main.c     **** void Adc_Measurement_Handler(){
 1207              	 .loc 1 683 0
 1208              	 .cfi_startproc
 1209 0000 80B5     	 push {r7,lr}
 1210              	.LCFI5:
 1211              	 .cfi_def_cfa_offset 8
 1212              	 .cfi_offset 7,-8
 1213              	 .cfi_offset 14,-4
 1214 0002 00AF     	 add r7,sp,#0
 1215              	.LCFI6:
 1216              	 .cfi_def_cfa_register 7
 684:../main.c     **** 	current_phaseU=ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Current_PhaseU);
 1217              	 .loc 1 684 0
 1218 0004 414B     	 ldr r3,.L12
 1219 0006 181C     	 mov r0,r3
 1220 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 1221 000c 031C     	 mov r3,r0
 1222 000e 1A1C     	 mov r2,r3
 1223 0010 3F4B     	 ldr r3,.L12+4
 1224 0012 1A80     	 strh r2,[r3]
 685:../main.c     **** 	current_phaseV=ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Current_PhaseV);
 1225              	 .loc 1 685 0
 1226 0014 3F4B     	 ldr r3,.L12+8
 1227 0016 181C     	 mov r0,r3
 1228 0018 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 1229 001c 031C     	 mov r3,r0
 1230 001e 1A1C     	 mov r2,r3
 1231 0020 3D4B     	 ldr r3,.L12+12
 1232 0022 1A80     	 strh r2,[r3]
 686:../main.c     **** 
 687:../main.c     **** 	cumulative_sum_phaseU  =  (uint32_t)((int32_t)((int32_t)cumulative_sum_phaseU + current_phaseU - m
 1233              	 .loc 1 687 0
 1234 0024 3A4B     	 ldr r3,.L12+4
 1235 0026 1B88     	 ldrh r3,[r3]
 1236 0028 1A1C     	 mov r2,r3
 1237 002a 3C4B     	 ldr r3,.L12+16
 1238 002c 1B68     	 ldr r3,[r3]
 1239 002e D218     	 add r2,r2,r3
 1240 0030 3B4B     	 ldr r3,.L12+20
 1241 0032 1B68     	 ldr r3,[r3]
 1242 0034 D31A     	 sub r3,r2,r3
 1243 0036 1A1C     	 mov r2,r3
 1244 0038 384B     	 ldr r3,.L12+16
 1245 003a 1A60     	 str r2,[r3]
 688:../main.c     **** 	moving_average_phaseU  = (int32_t)((uint32_t)(cumulative_sum_phaseU >> MOVING_AVG_WINDOW_SIZE));
 1246              	 .loc 1 688 0
 1247 003c 374B     	 ldr r3,.L12+16
 1248 003e 1B68     	 ldr r3,[r3]
 1249 0040 9B0C     	 lsr r3,r3,#18
 1250 0042 1A1C     	 mov r2,r3
 1251 0044 364B     	 ldr r3,.L12+20
 1252 0046 1A60     	 str r2,[r3]
 689:../main.c     **** 	if (moving_average_phaseU > CURRENT_OFFSET_MAX)
 1253              	 .loc 1 689 0
 1254 0048 354B     	 ldr r3,.L12+20
 1255 004a 1B68     	 ldr r3,[r3]
 1256 004c 354A     	 ldr r2,.L12+24
 1257 004e 9342     	 cmp r3,r2
 1258 0050 02DD     	 ble .L8
 690:../main.c     **** 	    {
 691:../main.c     **** 	        moving_average_phaseU = CURRENT_OFFSET_MAX;
 1259              	 .loc 1 691 0
 1260 0052 334B     	 ldr r3,.L12+20
 1261 0054 334A     	 ldr r2,.L12+24
 1262 0056 1A60     	 str r2,[r3]
 1263              	.L8:
 692:../main.c     **** 	    }
 693:../main.c     **** 	if (moving_average_phaseU < CURRENT_OFFSET_MIN)
 1264              	 .loc 1 693 0
 1265 0058 314B     	 ldr r3,.L12+20
 1266 005a 1B68     	 ldr r3,[r3]
 1267 005c 324A     	 ldr r2,.L12+28
 1268 005e 9342     	 cmp r3,r2
 1269 0060 03DC     	 bgt .L9
 694:../main.c     **** 	    {
 695:../main.c     **** 	        moving_average_phaseU = CURRENT_OFFSET_MIN;
 1270              	 .loc 1 695 0
 1271 0062 2F4B     	 ldr r3,.L12+20
 1272 0064 AD22     	 mov r2,#173
 1273 0066 D200     	 lsl r2,r2,#3
 1274 0068 1A60     	 str r2,[r3]
 1275              	.L9:
 696:../main.c     **** 	    }
 697:../main.c     **** 
 698:../main.c     **** 	cumulative_sum_phaseV  = (uint32_t)((int32_t)((int32_t)cumulative_sum_phaseV + current_phaseV - mo
 1276              	 .loc 1 698 0
 1277 006a 2B4B     	 ldr r3,.L12+12
 1278 006c 1B88     	 ldrh r3,[r3]
 1279 006e 1A1C     	 mov r2,r3
 1280 0070 2E4B     	 ldr r3,.L12+32
 1281 0072 1B68     	 ldr r3,[r3]
 1282 0074 D218     	 add r2,r2,r3
 1283 0076 2E4B     	 ldr r3,.L12+36
 1284 0078 1B68     	 ldr r3,[r3]
 1285 007a D31A     	 sub r3,r2,r3
 1286 007c 1A1C     	 mov r2,r3
 1287 007e 2B4B     	 ldr r3,.L12+32
 1288 0080 1A60     	 str r2,[r3]
 699:../main.c     **** 	moving_average_phaseV  = (int32_t)((uint32_t)(cumulative_sum_phaseV >> MOVING_AVG_WINDOW_SIZE));
 1289              	 .loc 1 699 0
 1290 0082 2A4B     	 ldr r3,.L12+32
 1291 0084 1B68     	 ldr r3,[r3]
 1292 0086 9B0C     	 lsr r3,r3,#18
 1293 0088 1A1C     	 mov r2,r3
 1294 008a 294B     	 ldr r3,.L12+36
 1295 008c 1A60     	 str r2,[r3]
 700:../main.c     **** 
 701:../main.c     **** 	if (moving_average_phaseV > CURRENT_OFFSET_MAX)
 1296              	 .loc 1 701 0
 1297 008e 284B     	 ldr r3,.L12+36
 1298 0090 1B68     	 ldr r3,[r3]
 1299 0092 244A     	 ldr r2,.L12+24
 1300 0094 9342     	 cmp r3,r2
 1301 0096 02DD     	 ble .L10
 702:../main.c     **** 	    {
 703:../main.c     **** 	        moving_average_phaseV = CURRENT_OFFSET_MAX;
 1302              	 .loc 1 703 0
 1303 0098 254B     	 ldr r3,.L12+36
 1304 009a 224A     	 ldr r2,.L12+24
 1305 009c 1A60     	 str r2,[r3]
 1306              	.L10:
 704:../main.c     **** 	    }
 705:../main.c     **** 	if (moving_average_phaseV < CURRENT_OFFSET_MIN)
 1307              	 .loc 1 705 0
 1308 009e 244B     	 ldr r3,.L12+36
 1309 00a0 1B68     	 ldr r3,[r3]
 1310 00a2 214A     	 ldr r2,.L12+28
 1311 00a4 9342     	 cmp r3,r2
 1312 00a6 03DC     	 bgt .L11
 706:../main.c     **** 	    {
 707:../main.c     **** 	        moving_average_phaseV = CURRENT_OFFSET_MIN;
 1313              	 .loc 1 707 0
 1314 00a8 214B     	 ldr r3,.L12+36
 1315 00aa AD22     	 mov r2,#173
 1316 00ac D200     	 lsl r2,r2,#3
 1317 00ae 1A60     	 str r2,[r3]
 1318              	.L11:
 708:../main.c     **** 	    }
 709:../main.c     ****     current_u = ((current_phaseU - (int16_t)moving_average_phaseU)*ADC_scale);
 1319              	 .loc 1 709 0
 1320 00b0 174B     	 ldr r3,.L12+4
 1321 00b2 1B88     	 ldrh r3,[r3]
 1322 00b4 1A1C     	 mov r2,r3
 1323 00b6 1A4B     	 ldr r3,.L12+20
 1324 00b8 1B68     	 ldr r3,[r3]
 1325 00ba 9BB2     	 uxth r3,r3
 1326 00bc 1BB2     	 sxth r3,r3
 1327 00be D31A     	 sub r3,r2,r3
 1328 00c0 181C     	 mov r0,r3
 1329 00c2 FFF7FEFF 	 bl __aeabi_i2f
 1330 00c6 021C     	 add r2,r0,#0
 1331 00c8 1A4B     	 ldr r3,.L12+40
 1332 00ca 1B68     	 ldr r3,[r3]
 1333 00cc 101C     	 add r0,r2,#0
 1334 00ce 191C     	 add r1,r3,#0
 1335 00d0 FFF7FEFF 	 bl __aeabi_fmul
 1336 00d4 031C     	 add r3,r0,#0
 1337 00d6 1A1C     	 add r2,r3,#0
 1338 00d8 174B     	 ldr r3,.L12+44
 1339 00da 1A60     	 str r2,[r3]
 710:../main.c     ****     current_v = ((current_phaseV - (int16_t)moving_average_phaseV)*ADC_scale);
 1340              	 .loc 1 710 0
 1341 00dc 0E4B     	 ldr r3,.L12+12
 1342 00de 1B88     	 ldrh r3,[r3]
 1343 00e0 1A1C     	 mov r2,r3
 1344 00e2 134B     	 ldr r3,.L12+36
 1345 00e4 1B68     	 ldr r3,[r3]
 1346 00e6 9BB2     	 uxth r3,r3
 1347 00e8 1BB2     	 sxth r3,r3
 1348 00ea D31A     	 sub r3,r2,r3
 1349 00ec 181C     	 mov r0,r3
 1350 00ee FFF7FEFF 	 bl __aeabi_i2f
 1351 00f2 021C     	 add r2,r0,#0
 1352 00f4 0F4B     	 ldr r3,.L12+40
 1353 00f6 1B68     	 ldr r3,[r3]
 1354 00f8 101C     	 add r0,r2,#0
 1355 00fa 191C     	 add r1,r3,#0
 1356 00fc FFF7FEFF 	 bl __aeabi_fmul
 1357 0100 031C     	 add r3,r0,#0
 1358 0102 1A1C     	 add r2,r3,#0
 1359 0104 0D4B     	 ldr r3,.L12+48
 1360 0106 1A60     	 str r2,[r3]
 711:../main.c     **** }
 1361              	 .loc 1 711 0
 1362 0108 BD46     	 mov sp,r7
 1363              	 
 1364 010a 80BD     	 pop {r7,pc}
 1365              	.L13:
 1366              	 .align 2
 1367              	.L12:
 1368 010c 00000000 	 .word ADC_MEASUREMENT_Current_PhaseU_handle
 1369 0110 00000000 	 .word current_phaseU
 1370 0114 00000000 	 .word ADC_MEASUREMENT_Current_PhaseV_handle
 1371 0118 00000000 	 .word current_phaseV
 1372 011c 00000000 	 .word cumulative_sum_phaseU
 1373 0120 00000000 	 .word moving_average_phaseU
 1374 0124 CA050000 	 .word 1482
 1375 0128 67050000 	 .word 1383
 1376 012c 00000000 	 .word cumulative_sum_phaseV
 1377 0130 00000000 	 .word moving_average_phaseV
 1378 0134 00000000 	 .word ADC_scale
 1379 0138 00000000 	 .word current_u
 1380 013c 00000000 	 .word current_v
 1381              	 .cfi_endproc
 1382              	.LFE465:
 1384              	 .section .text.UpdatePWMDutyCycle,"ax",%progbits
 1385              	 .align 2
 1386              	 .global UpdatePWMDutyCycle
 1387              	 .code 16
 1388              	 .thumb_func
 1390              	UpdatePWMDutyCycle:
 1391              	.LFB466:
 712:../main.c     **** /*
 713:../main.c     ****  Function:Cap nhat duty cycle o tung nhanh van
 714:../main.c     ****  Input:da, db, dc
 715:../main.c     ****  Output:Duty cycle nhanh van pha U,V,W
 716:../main.c     ****  */
 717:../main.c     **** void UpdatePWMDutyCycle(void){
 1392              	 .loc 1 717 0
 1393              	 .cfi_startproc
 1394 0000 80B5     	 push {r7,lr}
 1395              	.LCFI7:
 1396              	 .cfi_def_cfa_offset 8
 1397              	 .cfi_offset 7,-8
 1398              	 .cfi_offset 14,-4
 1399 0002 00AF     	 add r7,sp,#0
 1400              	.LCFI8:
 1401              	 .cfi_def_cfa_register 7
 718:../main.c     **** 	PWM_CCU8_Start(&PWM_CCU8_0);
 1402              	 .loc 1 718 0
 1403 0004 124B     	 ldr r3,.L15
 1404 0006 181C     	 mov r0,r3
 1405 0008 FFF7FEFF 	 bl PWM_CCU8_Start
 719:../main.c     **** 	PWM_CCU8_Start(&PWM_CCU8_1);
 1406              	 .loc 1 719 0
 1407 000c 114B     	 ldr r3,.L15+4
 1408 000e 181C     	 mov r0,r3
 1409 0010 FFF7FEFF 	 bl PWM_CCU8_Start
 720:../main.c     **** 	PWM_CCU8_Start(&PWM_CCU8_2);
 1410              	 .loc 1 720 0
 1411 0014 104B     	 ldr r3,.L15+8
 1412 0016 181C     	 mov r0,r3
 1413 0018 FFF7FEFF 	 bl PWM_CCU8_Start
 721:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_0, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, da);
 1414              	 .loc 1 721 0
 1415 001c 0F4B     	 ldr r3,.L15+12
 1416 001e 1B88     	 ldrh r3,[r3]
 1417 0020 1A1C     	 mov r2,r3
 1418 0022 0B4B     	 ldr r3,.L15
 1419 0024 181C     	 mov r0,r3
 1420 0026 0021     	 mov r1,#0
 1421 0028 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 722:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_1, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, db);
 1422              	 .loc 1 722 0
 1423 002c 0C4B     	 ldr r3,.L15+16
 1424 002e 1B88     	 ldrh r3,[r3]
 1425 0030 1A1C     	 mov r2,r3
 1426 0032 084B     	 ldr r3,.L15+4
 1427 0034 181C     	 mov r0,r3
 1428 0036 0021     	 mov r1,#0
 1429 0038 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 723:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_2, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, dc);
 1430              	 .loc 1 723 0
 1431 003c 094B     	 ldr r3,.L15+20
 1432 003e 1B88     	 ldrh r3,[r3]
 1433 0040 1A1C     	 mov r2,r3
 1434 0042 054B     	 ldr r3,.L15+8
 1435 0044 181C     	 mov r0,r3
 1436 0046 0021     	 mov r1,#0
 1437 0048 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 724:../main.c     **** }
 1438              	 .loc 1 724 0
 1439 004c BD46     	 mov sp,r7
 1440              	 
 1441 004e 80BD     	 pop {r7,pc}
 1442              	.L16:
 1443              	 .align 2
 1444              	.L15:
 1445 0050 00000000 	 .word PWM_CCU8_0
 1446 0054 00000000 	 .word PWM_CCU8_1
 1447 0058 00000000 	 .word PWM_CCU8_2
 1448 005c 00000000 	 .word da
 1449 0060 00000000 	 .word db
 1450 0064 00000000 	 .word dc
 1451              	 .cfi_endproc
 1452              	.LFE466:
 1454              	 .global __aeabi_fadd
 1455              	 .section .text.AlphaBetaTrans_Current,"ax",%progbits
 1456              	 .align 2
 1457              	 .global AlphaBetaTrans_Current
 1458              	 .code 16
 1459              	 .thumb_func
 1461              	AlphaBetaTrans_Current:
 1462              	.LFB467:
 725:../main.c     **** /*
 726:../main.c     ****  Function:Chuyen he toa dong dien do abc sang alpha-beta
 727:../main.c     ****  Input:current_u, current_v
 728:../main.c     ****  Output:current_alpha, current_beta
 729:../main.c     ****  */
 730:../main.c     **** void AlphaBetaTrans_Current(void){
 1463              	 .loc 1 730 0
 1464              	 .cfi_startproc
 1465 0000 80B5     	 push {r7,lr}
 1466              	.LCFI9:
 1467              	 .cfi_def_cfa_offset 8
 1468              	 .cfi_offset 7,-8
 1469              	 .cfi_offset 14,-4
 1470 0002 00AF     	 add r7,sp,#0
 1471              	.LCFI10:
 1472              	 .cfi_def_cfa_register 7
 731:../main.c     **** 	current_alpha=current_u;
 1473              	 .loc 1 731 0
 1474 0004 0E4B     	 ldr r3,.L18
 1475 0006 1A68     	 ldr r2,[r3]
 1476 0008 0E4B     	 ldr r3,.L18+4
 1477 000a 1A60     	 str r2,[r3]
 732:../main.c     **** 	current_beta=one_on_sqrt_3*(current_u+2*current_v);
 1478              	 .loc 1 732 0
 1479 000c 0E4B     	 ldr r3,.L18+8
 1480 000e 1B68     	 ldr r3,[r3]
 1481 0010 181C     	 add r0,r3,#0
 1482 0012 191C     	 add r1,r3,#0
 1483 0014 FFF7FEFF 	 bl __aeabi_fadd
 1484 0018 031C     	 add r3,r0,#0
 1485 001a 1A1C     	 add r2,r3,#0
 1486 001c 084B     	 ldr r3,.L18
 1487 001e 1B68     	 ldr r3,[r3]
 1488 0020 101C     	 add r0,r2,#0
 1489 0022 191C     	 add r1,r3,#0
 1490 0024 FFF7FEFF 	 bl __aeabi_fadd
 1491 0028 031C     	 add r3,r0,#0
 1492 002a 181C     	 add r0,r3,#0
 1493 002c 0749     	 ldr r1,.L18+12
 1494 002e FFF7FEFF 	 bl __aeabi_fmul
 1495 0032 031C     	 add r3,r0,#0
 1496 0034 1A1C     	 add r2,r3,#0
 1497 0036 064B     	 ldr r3,.L18+16
 1498 0038 1A60     	 str r2,[r3]
 733:../main.c     **** }
 1499              	 .loc 1 733 0
 1500 003a BD46     	 mov sp,r7
 1501              	 
 1502 003c 80BD     	 pop {r7,pc}
 1503              	.L19:
 1504 003e C046     	 .align 2
 1505              	.L18:
 1506 0040 00000000 	 .word current_u
 1507 0044 00000000 	 .word current_alpha
 1508 0048 00000000 	 .word current_v
 1509 004c 36CD133F 	 .word 1058262326
 1510 0050 00000000 	 .word current_beta
 1511              	 .cfi_endproc
 1512              	.LFE467:
 1514              	 .section .text.DQTrans_Current,"ax",%progbits
 1515              	 .align 2
 1516              	 .global DQTrans_Current
 1517              	 .code 16
 1518              	 .thumb_func
 1520              	DQTrans_Current:
 1521              	.LFB468:
 734:../main.c     **** /*
 735:../main.c     ****  Function:Chuyen he toa do dong dien alpha-beta sang he toa do dq
 736:../main.c     ****  Input:current_alpha, current_beta
 737:../main.c     ****  Output:current_sd, current_sq
 738:../main.c     ****  */
 739:../main.c     **** void DQTrans_Current(void){
 1522              	 .loc 1 739 0
 1523              	 .cfi_startproc
 1524 0000 98B5     	 push {r3,r4,r7,lr}
 1525              	.LCFI11:
 1526              	 .cfi_def_cfa_offset 16
 1527              	 .cfi_offset 3,-16
 1528              	 .cfi_offset 4,-12
 1529              	 .cfi_offset 7,-8
 1530              	 .cfi_offset 14,-4
 1531 0002 00AF     	 add r7,sp,#0
 1532              	.LCFI12:
 1533              	 .cfi_def_cfa_register 7
 740:../main.c     **** 	current_sd=current_alpha*CosineTheta+current_beta*SineTheta;
 1534              	 .loc 1 740 0
 1535 0004 1D4B     	 ldr r3,.L21
 1536 0006 1A68     	 ldr r2,[r3]
 1537 0008 1D4B     	 ldr r3,.L21+4
 1538 000a 1B68     	 ldr r3,[r3]
 1539 000c 101C     	 add r0,r2,#0
 1540 000e 191C     	 add r1,r3,#0
 1541 0010 FFF7FEFF 	 bl __aeabi_fmul
 1542 0014 031C     	 add r3,r0,#0
 1543 0016 1C1C     	 add r4,r3,#0
 1544 0018 1A4B     	 ldr r3,.L21+8
 1545 001a 1A68     	 ldr r2,[r3]
 1546 001c 1A4B     	 ldr r3,.L21+12
 1547 001e 1B68     	 ldr r3,[r3]
 1548 0020 101C     	 add r0,r2,#0
 1549 0022 191C     	 add r1,r3,#0
 1550 0024 FFF7FEFF 	 bl __aeabi_fmul
 1551 0028 031C     	 add r3,r0,#0
 1552 002a 201C     	 add r0,r4,#0
 1553 002c 191C     	 add r1,r3,#0
 1554 002e FFF7FEFF 	 bl __aeabi_fadd
 1555 0032 031C     	 add r3,r0,#0
 1556 0034 1A1C     	 add r2,r3,#0
 1557 0036 154B     	 ldr r3,.L21+16
 1558 0038 1A60     	 str r2,[r3]
 741:../main.c     ****     current_sq=(-1)*current_alpha*SineTheta+current_beta*CosineTheta;
 1559              	 .loc 1 741 0
 1560 003a 104B     	 ldr r3,.L21
 1561 003c 1B68     	 ldr r3,[r3]
 1562 003e 8022     	 mov r2,#128
 1563 0040 1206     	 lsl r2,r2,#24
 1564 0042 5A40     	 eor r2,r3
 1565 0044 104B     	 ldr r3,.L21+12
 1566 0046 1B68     	 ldr r3,[r3]
 1567 0048 101C     	 add r0,r2,#0
 1568 004a 191C     	 add r1,r3,#0
 1569 004c FFF7FEFF 	 bl __aeabi_fmul
 1570 0050 031C     	 add r3,r0,#0
 1571 0052 1C1C     	 add r4,r3,#0
 1572 0054 0B4B     	 ldr r3,.L21+8
 1573 0056 1A68     	 ldr r2,[r3]
 1574 0058 094B     	 ldr r3,.L21+4
 1575 005a 1B68     	 ldr r3,[r3]
 1576 005c 101C     	 add r0,r2,#0
 1577 005e 191C     	 add r1,r3,#0
 1578 0060 FFF7FEFF 	 bl __aeabi_fmul
 1579 0064 031C     	 add r3,r0,#0
 1580 0066 201C     	 add r0,r4,#0
 1581 0068 191C     	 add r1,r3,#0
 1582 006a FFF7FEFF 	 bl __aeabi_fadd
 1583 006e 031C     	 add r3,r0,#0
 1584 0070 1A1C     	 add r2,r3,#0
 1585 0072 074B     	 ldr r3,.L21+20
 1586 0074 1A60     	 str r2,[r3]
 742:../main.c     **** }
 1587              	 .loc 1 742 0
 1588 0076 BD46     	 mov sp,r7
 1589              	 
 1590 0078 98BD     	 pop {r3,r4,r7,pc}
 1591              	.L22:
 1592 007a C046     	 .align 2
 1593              	.L21:
 1594 007c 00000000 	 .word current_alpha
 1595 0080 00000000 	 .word CosineTheta
 1596 0084 00000000 	 .word current_beta
 1597 0088 00000000 	 .word SineTheta
 1598 008c 00000000 	 .word current_sd
 1599 0090 00000000 	 .word current_sq
 1600              	 .cfi_endproc
 1601              	.LFE468:
 1603              	 .global __aeabi_fsub
 1604              	 .section .text.IsqRefCal,"ax",%progbits
 1605              	 .align 2
 1606              	 .global IsqRefCal
 1607              	 .code 16
 1608              	 .thumb_func
 1610              	IsqRefCal:
 1611              	.LFB469:
 743:../main.c     **** /*
 744:../main.c     ****  Function:Tinh toan gia tri q axis stator current reference su dung bdk PI
 745:../main.c     ****  Input:SpeedRef(toc do dat), SpeedMea(toc do do ve),Ts(chu ky trich mau), Kp_IsqRef, Ki_IsqRef
 746:../main.c     ****  Output:IsqRef
 747:../main.c     ****  */
 748:../main.c     **** void IsqRefCal(void){
 1612              	 .loc 1 748 0
 1613              	 .cfi_startproc
 1614 0000 98B5     	 push {r3,r4,r7,lr}
 1615              	.LCFI13:
 1616              	 .cfi_def_cfa_offset 16
 1617              	 .cfi_offset 3,-16
 1618              	 .cfi_offset 4,-12
 1619              	 .cfi_offset 7,-8
 1620              	 .cfi_offset 14,-4
 1621 0002 00AF     	 add r7,sp,#0
 1622              	.LCFI14:
 1623              	 .cfi_def_cfa_register 7
 749:../main.c     **** 	SpeedError=SpeedRef-SpeedMea;
 1624              	 .loc 1 749 0
 1625 0004 234B     	 ldr r3,.L24
 1626 0006 1A68     	 ldr r2,[r3]
 1627 0008 234B     	 ldr r3,.L24+4
 1628 000a 1B68     	 ldr r3,[r3]
 1629 000c 101C     	 add r0,r2,#0
 1630 000e 191C     	 add r1,r3,#0
 1631 0010 FFF7FEFF 	 bl __aeabi_fsub
 1632 0014 031C     	 add r3,r0,#0
 1633 0016 1A1C     	 add r2,r3,#0
 1634 0018 204B     	 ldr r3,.L24+8
 1635 001a 1A60     	 str r2,[r3]
 750:../main.c     **** 	sum_IsqRef=sum_IsqRef+SpeedError*Ts;
 1636              	 .loc 1 750 0
 1637 001c 1F4B     	 ldr r3,.L24+8
 1638 001e 1B68     	 ldr r3,[r3]
 1639 0020 181C     	 add r0,r3,#0
 1640 0022 0021     	 mov r1,#0
 1641 0024 FFF7FEFF 	 bl __aeabi_fmul
 1642 0028 031C     	 add r3,r0,#0
 1643 002a 1A1C     	 add r2,r3,#0
 1644 002c 1C4B     	 ldr r3,.L24+12
 1645 002e 1B68     	 ldr r3,[r3]
 1646 0030 101C     	 add r0,r2,#0
 1647 0032 191C     	 add r1,r3,#0
 1648 0034 FFF7FEFF 	 bl __aeabi_fadd
 1649 0038 031C     	 add r3,r0,#0
 1650 003a 1A1C     	 add r2,r3,#0
 1651 003c 184B     	 ldr r3,.L24+12
 1652 003e 1A60     	 str r2,[r3]
 751:../main.c     **** 	IsqRef1=Kp_IsqRef*SpeedError+Ki_IsqRef*sum_IsqRef;
 1653              	 .loc 1 751 0
 1654 0040 184B     	 ldr r3,.L24+16
 1655 0042 1A68     	 ldr r2,[r3]
 1656 0044 154B     	 ldr r3,.L24+8
 1657 0046 1B68     	 ldr r3,[r3]
 1658 0048 101C     	 add r0,r2,#0
 1659 004a 191C     	 add r1,r3,#0
 1660 004c FFF7FEFF 	 bl __aeabi_fmul
 1661 0050 031C     	 add r3,r0,#0
 1662 0052 1C1C     	 add r4,r3,#0
 1663 0054 144B     	 ldr r3,.L24+20
 1664 0056 1A68     	 ldr r2,[r3]
 1665 0058 114B     	 ldr r3,.L24+12
 1666 005a 1B68     	 ldr r3,[r3]
 1667 005c 101C     	 add r0,r2,#0
 1668 005e 191C     	 add r1,r3,#0
 1669 0060 FFF7FEFF 	 bl __aeabi_fmul
 1670 0064 031C     	 add r3,r0,#0
 1671 0066 201C     	 add r0,r4,#0
 1672 0068 191C     	 add r1,r3,#0
 1673 006a FFF7FEFF 	 bl __aeabi_fadd
 1674 006e 031C     	 add r3,r0,#0
 1675 0070 1A1C     	 add r2,r3,#0
 1676 0072 0E4B     	 ldr r3,.L24+24
 1677 0074 1A60     	 str r2,[r3]
 752:../main.c     ****     IsqRef=IsqRef+IsqRef1;
 1678              	 .loc 1 752 0
 1679 0076 0E4B     	 ldr r3,.L24+28
 1680 0078 1A68     	 ldr r2,[r3]
 1681 007a 0C4B     	 ldr r3,.L24+24
 1682 007c 1B68     	 ldr r3,[r3]
 1683 007e 101C     	 add r0,r2,#0
 1684 0080 191C     	 add r1,r3,#0
 1685 0082 FFF7FEFF 	 bl __aeabi_fadd
 1686 0086 031C     	 add r3,r0,#0
 1687 0088 1A1C     	 add r2,r3,#0
 1688 008a 094B     	 ldr r3,.L24+28
 1689 008c 1A60     	 str r2,[r3]
 753:../main.c     **** }
 1690              	 .loc 1 753 0
 1691 008e BD46     	 mov sp,r7
 1692              	 
 1693 0090 98BD     	 pop {r3,r4,r7,pc}
 1694              	.L25:
 1695 0092 C046     	 .align 2
 1696              	.L24:
 1697 0094 00000000 	 .word SpeedRef
 1698 0098 00000000 	 .word SpeedMea
 1699 009c 00000000 	 .word SpeedError
 1700 00a0 00000000 	 .word sum_IsqRef
 1701 00a4 00000000 	 .word Kp_IsqRef
 1702 00a8 00000000 	 .word Ki_IsqRef
 1703 00ac 00000000 	 .word IsqRef1
 1704 00b0 00000000 	 .word IsqRef
 1705              	 .cfi_endproc
 1706              	.LFE469:
 1708              	 .section .text.UsdCal,"ax",%progbits
 1709              	 .align 2
 1710              	 .global UsdCal
 1711              	 .code 16
 1712              	 .thumb_func
 1714              	UsdCal:
 1715              	.LFB470:
 754:../main.c     **** /*
 755:../main.c     ****  Function:Tinh toan gia tri d axis stator voltage su dung bdk PI
 756:../main.c     ****  Input:current_sd, Ts, Kp_Usd, Ki_Usd
 757:../main.c     ****  Output:Usd
 758:../main.c     ****  */
 759:../main.c     **** void UsdCal(void){
 1716              	 .loc 1 759 0
 1717              	 .cfi_startproc
 1718 0000 98B5     	 push {r3,r4,r7,lr}
 1719              	.LCFI15:
 1720              	 .cfi_def_cfa_offset 16
 1721              	 .cfi_offset 3,-16
 1722              	 .cfi_offset 4,-12
 1723              	 .cfi_offset 7,-8
 1724              	 .cfi_offset 14,-4
 1725 0002 00AF     	 add r7,sp,#0
 1726              	.LCFI16:
 1727              	 .cfi_def_cfa_register 7
 760:../main.c     ****     IsdError=0-current_sd;
 1728              	 .loc 1 760 0
 1729 0004 224B     	 ldr r3,.L27
 1730 0006 1B68     	 ldr r3,[r3]
 1731 0008 0020     	 mov r0,#0
 1732 000a 191C     	 add r1,r3,#0
 1733 000c FFF7FEFF 	 bl __aeabi_fsub
 1734 0010 031C     	 add r3,r0,#0
 1735 0012 1A1C     	 add r2,r3,#0
 1736 0014 1F4B     	 ldr r3,.L27+4
 1737 0016 1A60     	 str r2,[r3]
 761:../main.c     ****     sum_Usd=sum_Usd+IsdError*Ts;
 1738              	 .loc 1 761 0
 1739 0018 1E4B     	 ldr r3,.L27+4
 1740 001a 1B68     	 ldr r3,[r3]
 1741 001c 181C     	 add r0,r3,#0
 1742 001e 0021     	 mov r1,#0
 1743 0020 FFF7FEFF 	 bl __aeabi_fmul
 1744 0024 031C     	 add r3,r0,#0
 1745 0026 1A1C     	 add r2,r3,#0
 1746 0028 1B4B     	 ldr r3,.L27+8
 1747 002a 1B68     	 ldr r3,[r3]
 1748 002c 101C     	 add r0,r2,#0
 1749 002e 191C     	 add r1,r3,#0
 1750 0030 FFF7FEFF 	 bl __aeabi_fadd
 1751 0034 031C     	 add r3,r0,#0
 1752 0036 1A1C     	 add r2,r3,#0
 1753 0038 174B     	 ldr r3,.L27+8
 1754 003a 1A60     	 str r2,[r3]
 762:../main.c     ****     Usd1=Kp_Usd*IsdError+Ki_Usd*sum_Usd;
 1755              	 .loc 1 762 0
 1756 003c 174B     	 ldr r3,.L27+12
 1757 003e 1A68     	 ldr r2,[r3]
 1758 0040 144B     	 ldr r3,.L27+4
 1759 0042 1B68     	 ldr r3,[r3]
 1760 0044 101C     	 add r0,r2,#0
 1761 0046 191C     	 add r1,r3,#0
 1762 0048 FFF7FEFF 	 bl __aeabi_fmul
 1763 004c 031C     	 add r3,r0,#0
 1764 004e 1C1C     	 add r4,r3,#0
 1765 0050 134B     	 ldr r3,.L27+16
 1766 0052 1A68     	 ldr r2,[r3]
 1767 0054 104B     	 ldr r3,.L27+8
 1768 0056 1B68     	 ldr r3,[r3]
 1769 0058 101C     	 add r0,r2,#0
 1770 005a 191C     	 add r1,r3,#0
 1771 005c FFF7FEFF 	 bl __aeabi_fmul
 1772 0060 031C     	 add r3,r0,#0
 1773 0062 201C     	 add r0,r4,#0
 1774 0064 191C     	 add r1,r3,#0
 1775 0066 FFF7FEFF 	 bl __aeabi_fadd
 1776 006a 031C     	 add r3,r0,#0
 1777 006c 1A1C     	 add r2,r3,#0
 1778 006e 0D4B     	 ldr r3,.L27+20
 1779 0070 1A60     	 str r2,[r3]
 763:../main.c     ****     Usd=Usd+Usd1;
 1780              	 .loc 1 763 0
 1781 0072 0D4B     	 ldr r3,.L27+24
 1782 0074 1A68     	 ldr r2,[r3]
 1783 0076 0B4B     	 ldr r3,.L27+20
 1784 0078 1B68     	 ldr r3,[r3]
 1785 007a 101C     	 add r0,r2,#0
 1786 007c 191C     	 add r1,r3,#0
 1787 007e FFF7FEFF 	 bl __aeabi_fadd
 1788 0082 031C     	 add r3,r0,#0
 1789 0084 1A1C     	 add r2,r3,#0
 1790 0086 084B     	 ldr r3,.L27+24
 1791 0088 1A60     	 str r2,[r3]
 764:../main.c     **** }
 1792              	 .loc 1 764 0
 1793 008a BD46     	 mov sp,r7
 1794              	 
 1795 008c 98BD     	 pop {r3,r4,r7,pc}
 1796              	.L28:
 1797 008e C046     	 .align 2
 1798              	.L27:
 1799 0090 00000000 	 .word current_sd
 1800 0094 00000000 	 .word IsdError
 1801 0098 00000000 	 .word sum_Usd
 1802 009c 00000000 	 .word Kp_Usd
 1803 00a0 00000000 	 .word Ki_Usd
 1804 00a4 00000000 	 .word Usd1
 1805 00a8 00000000 	 .word Usd
 1806              	 .cfi_endproc
 1807              	.LFE470:
 1809              	 .section .text.UsqCal,"ax",%progbits
 1810              	 .align 2
 1811              	 .global UsqCal
 1812              	 .code 16
 1813              	 .thumb_func
 1815              	UsqCal:
 1816              	.LFB471:
 765:../main.c     **** /*
 766:../main.c     ****  Function:Tinh toan gia tri q axis stator voltage su dung bdk PI
 767:../main.c     ****  Input:IsqRef, current_sq, Ts, Kp_Usq, Ki_Usq
 768:../main.c     ****  Output:Usq
 769:../main.c     ****  */
 770:../main.c     **** void UsqCal(void){
 1817              	 .loc 1 770 0
 1818              	 .cfi_startproc
 1819 0000 98B5     	 push {r3,r4,r7,lr}
 1820              	.LCFI17:
 1821              	 .cfi_def_cfa_offset 16
 1822              	 .cfi_offset 3,-16
 1823              	 .cfi_offset 4,-12
 1824              	 .cfi_offset 7,-8
 1825              	 .cfi_offset 14,-4
 1826 0002 00AF     	 add r7,sp,#0
 1827              	.LCFI18:
 1828              	 .cfi_def_cfa_register 7
 771:../main.c     ****     IsqError=IsqRef-current_sq;
 1829              	 .loc 1 771 0
 1830 0004 234B     	 ldr r3,.L30
 1831 0006 1A68     	 ldr r2,[r3]
 1832 0008 234B     	 ldr r3,.L30+4
 1833 000a 1B68     	 ldr r3,[r3]
 1834 000c 101C     	 add r0,r2,#0
 1835 000e 191C     	 add r1,r3,#0
 1836 0010 FFF7FEFF 	 bl __aeabi_fsub
 1837 0014 031C     	 add r3,r0,#0
 1838 0016 1A1C     	 add r2,r3,#0
 1839 0018 204B     	 ldr r3,.L30+8
 1840 001a 1A60     	 str r2,[r3]
 772:../main.c     ****     sum_Usq=sum_Usq+IsqError*Ts;
 1841              	 .loc 1 772 0
 1842 001c 1F4B     	 ldr r3,.L30+8
 1843 001e 1B68     	 ldr r3,[r3]
 1844 0020 181C     	 add r0,r3,#0
 1845 0022 0021     	 mov r1,#0
 1846 0024 FFF7FEFF 	 bl __aeabi_fmul
 1847 0028 031C     	 add r3,r0,#0
 1848 002a 1A1C     	 add r2,r3,#0
 1849 002c 1C4B     	 ldr r3,.L30+12
 1850 002e 1B68     	 ldr r3,[r3]
 1851 0030 101C     	 add r0,r2,#0
 1852 0032 191C     	 add r1,r3,#0
 1853 0034 FFF7FEFF 	 bl __aeabi_fadd
 1854 0038 031C     	 add r3,r0,#0
 1855 003a 1A1C     	 add r2,r3,#0
 1856 003c 184B     	 ldr r3,.L30+12
 1857 003e 1A60     	 str r2,[r3]
 773:../main.c     ****     Usq1=Kp_Usq*IsqError+Ki_Usq*sum_Usq;
 1858              	 .loc 1 773 0
 1859 0040 184B     	 ldr r3,.L30+16
 1860 0042 1A68     	 ldr r2,[r3]
 1861 0044 154B     	 ldr r3,.L30+8
 1862 0046 1B68     	 ldr r3,[r3]
 1863 0048 101C     	 add r0,r2,#0
 1864 004a 191C     	 add r1,r3,#0
 1865 004c FFF7FEFF 	 bl __aeabi_fmul
 1866 0050 031C     	 add r3,r0,#0
 1867 0052 1C1C     	 add r4,r3,#0
 1868 0054 144B     	 ldr r3,.L30+20
 1869 0056 1A68     	 ldr r2,[r3]
 1870 0058 114B     	 ldr r3,.L30+12
 1871 005a 1B68     	 ldr r3,[r3]
 1872 005c 101C     	 add r0,r2,#0
 1873 005e 191C     	 add r1,r3,#0
 1874 0060 FFF7FEFF 	 bl __aeabi_fmul
 1875 0064 031C     	 add r3,r0,#0
 1876 0066 201C     	 add r0,r4,#0
 1877 0068 191C     	 add r1,r3,#0
 1878 006a FFF7FEFF 	 bl __aeabi_fadd
 1879 006e 031C     	 add r3,r0,#0
 1880 0070 1A1C     	 add r2,r3,#0
 1881 0072 0E4B     	 ldr r3,.L30+24
 1882 0074 1A60     	 str r2,[r3]
 774:../main.c     ****     Usq=Usq+Usq1;
 1883              	 .loc 1 774 0
 1884 0076 0E4B     	 ldr r3,.L30+28
 1885 0078 1A68     	 ldr r2,[r3]
 1886 007a 0C4B     	 ldr r3,.L30+24
 1887 007c 1B68     	 ldr r3,[r3]
 1888 007e 101C     	 add r0,r2,#0
 1889 0080 191C     	 add r1,r3,#0
 1890 0082 FFF7FEFF 	 bl __aeabi_fadd
 1891 0086 031C     	 add r3,r0,#0
 1892 0088 1A1C     	 add r2,r3,#0
 1893 008a 094B     	 ldr r3,.L30+28
 1894 008c 1A60     	 str r2,[r3]
 775:../main.c     **** }
 1895              	 .loc 1 775 0
 1896 008e BD46     	 mov sp,r7
 1897              	 
 1898 0090 98BD     	 pop {r3,r4,r7,pc}
 1899              	.L31:
 1900 0092 C046     	 .align 2
 1901              	.L30:
 1902 0094 00000000 	 .word IsqRef
 1903 0098 00000000 	 .word current_sq
 1904 009c 00000000 	 .word IsqError
 1905 00a0 00000000 	 .word sum_Usq
 1906 00a4 00000000 	 .word Kp_Usq
 1907 00a8 00000000 	 .word Ki_Usq
 1908 00ac 00000000 	 .word Usq1
 1909 00b0 00000000 	 .word Usq
 1910              	 .cfi_endproc
 1911              	.LFE471:
 1913              	 .section .text.UsdqtoUsalphabeta,"ax",%progbits
 1914              	 .align 2
 1915              	 .global UsdqtoUsalphabeta
 1916              	 .code 16
 1917              	 .thumb_func
 1919              	UsdqtoUsalphabeta:
 1920              	.LFB472:
 776:../main.c     **** /*
 777:../main.c     ****  Function:Chuyen he toa do dien ap dq sang alpha-beta
 778:../main.c     ****  Input:Usd, Usq
 779:../main.c     ****  Output:Usalpha, Usbeta
 780:../main.c     ****  */
 781:../main.c     **** void UsdqtoUsalphabeta(void){
 1921              	 .loc 1 781 0
 1922              	 .cfi_startproc
 1923 0000 98B5     	 push {r3,r4,r7,lr}
 1924              	.LCFI19:
 1925              	 .cfi_def_cfa_offset 16
 1926              	 .cfi_offset 3,-16
 1927              	 .cfi_offset 4,-12
 1928              	 .cfi_offset 7,-8
 1929              	 .cfi_offset 14,-4
 1930 0002 00AF     	 add r7,sp,#0
 1931              	.LCFI20:
 1932              	 .cfi_def_cfa_register 7
 782:../main.c     **** 	Usalpha=Usd*CosineTheta-Usq*SineTheta;
 1933              	 .loc 1 782 0
 1934 0004 1B4B     	 ldr r3,.L33
 1935 0006 1A68     	 ldr r2,[r3]
 1936 0008 1B4B     	 ldr r3,.L33+4
 1937 000a 1B68     	 ldr r3,[r3]
 1938 000c 101C     	 add r0,r2,#0
 1939 000e 191C     	 add r1,r3,#0
 1940 0010 FFF7FEFF 	 bl __aeabi_fmul
 1941 0014 031C     	 add r3,r0,#0
 1942 0016 1C1C     	 add r4,r3,#0
 1943 0018 184B     	 ldr r3,.L33+8
 1944 001a 1A68     	 ldr r2,[r3]
 1945 001c 184B     	 ldr r3,.L33+12
 1946 001e 1B68     	 ldr r3,[r3]
 1947 0020 101C     	 add r0,r2,#0
 1948 0022 191C     	 add r1,r3,#0
 1949 0024 FFF7FEFF 	 bl __aeabi_fmul
 1950 0028 031C     	 add r3,r0,#0
 1951 002a 201C     	 add r0,r4,#0
 1952 002c 191C     	 add r1,r3,#0
 1953 002e FFF7FEFF 	 bl __aeabi_fsub
 1954 0032 031C     	 add r3,r0,#0
 1955 0034 1A1C     	 add r2,r3,#0
 1956 0036 134B     	 ldr r3,.L33+16
 1957 0038 1A60     	 str r2,[r3]
 783:../main.c     **** 	Usbeta=Usq*CosineTheta+Usd*SineTheta;
 1958              	 .loc 1 783 0
 1959 003a 104B     	 ldr r3,.L33+8
 1960 003c 1A68     	 ldr r2,[r3]
 1961 003e 0E4B     	 ldr r3,.L33+4
 1962 0040 1B68     	 ldr r3,[r3]
 1963 0042 101C     	 add r0,r2,#0
 1964 0044 191C     	 add r1,r3,#0
 1965 0046 FFF7FEFF 	 bl __aeabi_fmul
 1966 004a 031C     	 add r3,r0,#0
 1967 004c 1C1C     	 add r4,r3,#0
 1968 004e 094B     	 ldr r3,.L33
 1969 0050 1A68     	 ldr r2,[r3]
 1970 0052 0B4B     	 ldr r3,.L33+12
 1971 0054 1B68     	 ldr r3,[r3]
 1972 0056 101C     	 add r0,r2,#0
 1973 0058 191C     	 add r1,r3,#0
 1974 005a FFF7FEFF 	 bl __aeabi_fmul
 1975 005e 031C     	 add r3,r0,#0
 1976 0060 201C     	 add r0,r4,#0
 1977 0062 191C     	 add r1,r3,#0
 1978 0064 FFF7FEFF 	 bl __aeabi_fadd
 1979 0068 031C     	 add r3,r0,#0
 1980 006a 1A1C     	 add r2,r3,#0
 1981 006c 064B     	 ldr r3,.L33+20
 1982 006e 1A60     	 str r2,[r3]
 784:../main.c     **** }
 1983              	 .loc 1 784 0
 1984 0070 BD46     	 mov sp,r7
 1985              	 
 1986 0072 98BD     	 pop {r3,r4,r7,pc}
 1987              	.L34:
 1988              	 .align 2
 1989              	.L33:
 1990 0074 00000000 	 .word Usd
 1991 0078 00000000 	 .word CosineTheta
 1992 007c 00000000 	 .word Usq
 1993 0080 00000000 	 .word SineTheta
 1994 0084 00000000 	 .word Usalpha
 1995 0088 00000000 	 .word Usbeta
 1996              	 .cfi_endproc
 1997              	.LFE472:
 1999              	 .global __aeabi_fdiv
 2000              	 .section .text.UsalphabetatoUsabc,"ax",%progbits
 2001              	 .align 2
 2002              	 .global UsalphabetatoUsabc
 2003              	 .code 16
 2004              	 .thumb_func
 2006              	UsalphabetatoUsabc:
 2007              	.LFB473:
 785:../main.c     **** /*
 786:../main.c     ****  Function:Chuyen he toa do dien ap alpha-beta sang abc
 787:../main.c     ****  Input:Usalpha, Usbeta
 788:../main.c     ****  Output:Usa, Usb, Usc
 789:../main.c     ****  */
 790:../main.c     **** void UsalphabetatoUsabc(void){
 2008              	 .loc 1 790 0
 2009              	 .cfi_startproc
 2010 0000 98B5     	 push {r3,r4,r7,lr}
 2011              	.LCFI21:
 2012              	 .cfi_def_cfa_offset 16
 2013              	 .cfi_offset 3,-16
 2014              	 .cfi_offset 4,-12
 2015              	 .cfi_offset 7,-8
 2016              	 .cfi_offset 14,-4
 2017 0002 00AF     	 add r7,sp,#0
 2018              	.LCFI22:
 2019              	 .cfi_def_cfa_register 7
 791:../main.c     **** 	Usa=Usalpha;
 2020              	 .loc 1 791 0
 2021 0004 1D4B     	 ldr r3,.L36
 2022 0006 1A68     	 ldr r2,[r3]
 2023 0008 1D4B     	 ldr r3,.L36+4
 2024 000a 1A60     	 str r2,[r3]
 792:../main.c     **** 	Usb=(-Usalpha/2)+(sqrt_3/2)*Usbeta;
 2025              	 .loc 1 792 0
 2026 000c 1B4B     	 ldr r3,.L36
 2027 000e 1B68     	 ldr r3,[r3]
 2028 0010 8022     	 mov r2,#128
 2029 0012 1206     	 lsl r2,r2,#24
 2030 0014 5340     	 eor r3,r2
 2031 0016 181C     	 add r0,r3,#0
 2032 0018 8021     	 mov r1,#128
 2033 001a C905     	 lsl r1,r1,#23
 2034 001c FFF7FEFF 	 bl __aeabi_fdiv
 2035 0020 031C     	 add r3,r0,#0
 2036 0022 1C1C     	 add r4,r3,#0
 2037 0024 174B     	 ldr r3,.L36+8
 2038 0026 1B68     	 ldr r3,[r3]
 2039 0028 181C     	 add r0,r3,#0
 2040 002a 1749     	 ldr r1,.L36+12
 2041 002c FFF7FEFF 	 bl __aeabi_fmul
 2042 0030 031C     	 add r3,r0,#0
 2043 0032 201C     	 add r0,r4,#0
 2044 0034 191C     	 add r1,r3,#0
 2045 0036 FFF7FEFF 	 bl __aeabi_fadd
 2046 003a 031C     	 add r3,r0,#0
 2047 003c 1A1C     	 add r2,r3,#0
 2048 003e 134B     	 ldr r3,.L36+16
 2049 0040 1A60     	 str r2,[r3]
 793:../main.c     ****     Usc=(-Usalpha/2)-(sqrt_3/2)*Usbeta;
 2050              	 .loc 1 793 0
 2051 0042 0E4B     	 ldr r3,.L36
 2052 0044 1B68     	 ldr r3,[r3]
 2053 0046 8022     	 mov r2,#128
 2054 0048 1206     	 lsl r2,r2,#24
 2055 004a 5340     	 eor r3,r2
 2056 004c 181C     	 add r0,r3,#0
 2057 004e 8021     	 mov r1,#128
 2058 0050 C905     	 lsl r1,r1,#23
 2059 0052 FFF7FEFF 	 bl __aeabi_fdiv
 2060 0056 031C     	 add r3,r0,#0
 2061 0058 1C1C     	 add r4,r3,#0
 2062 005a 0A4B     	 ldr r3,.L36+8
 2063 005c 1B68     	 ldr r3,[r3]
 2064 005e 181C     	 add r0,r3,#0
 2065 0060 0949     	 ldr r1,.L36+12
 2066 0062 FFF7FEFF 	 bl __aeabi_fmul
 2067 0066 031C     	 add r3,r0,#0
 2068 0068 201C     	 add r0,r4,#0
 2069 006a 191C     	 add r1,r3,#0
 2070 006c FFF7FEFF 	 bl __aeabi_fsub
 2071 0070 031C     	 add r3,r0,#0
 2072 0072 1A1C     	 add r2,r3,#0
 2073 0074 064B     	 ldr r3,.L36+20
 2074 0076 1A60     	 str r2,[r3]
 794:../main.c     **** }
 2075              	 .loc 1 794 0
 2076 0078 BD46     	 mov sp,r7
 2077              	 
 2078 007a 98BD     	 pop {r3,r4,r7,pc}
 2079              	.L37:
 2080              	 .align 2
 2081              	.L36:
 2082 007c 00000000 	 .word Usalpha
 2083 0080 00000000 	 .word Usa
 2084 0084 00000000 	 .word Usbeta
 2085 0088 D0B35D3F 	 .word 1063105488
 2086 008c 00000000 	 .word Usb
 2087 0090 00000000 	 .word Usc
 2088              	 .cfi_endproc
 2089              	.LFE473:
 2091              	 .global __aeabi_fcmpge
 2092              	 .global __aeabi_f2uiz
 2093              	 .section .text.SVMAlgorithm,"ax",%progbits
 2094              	 .align 2
 2095              	 .global SVMAlgorithm
 2096              	 .code 16
 2097              	 .thumb_func
 2099              	SVMAlgorithm:
 2100              	.LFB474:
 795:../main.c     **** /*
 796:../main.c     ****  Function:Thuat toan SVM tinh toan duty cycle cho 3 nhanh van, nhanh van direct tuong ung voi da, d
 797:../main.c     ****  Input:Usa, Usb, Usc, Usalpha, Usbeta, VDC
 798:../main.c     ****  Output:da, db, dc
 799:../main.c     ****  */
 800:../main.c     **** void SVMAlgorithm(void){
 2101              	 .loc 1 800 0
 2102              	 .cfi_startproc
 2103 0000 90B5     	 push {r4,r7,lr}
 2104              	.LCFI23:
 2105              	 .cfi_def_cfa_offset 12
 2106              	 .cfi_offset 4,-12
 2107              	 .cfi_offset 7,-8
 2108              	 .cfi_offset 14,-4
 2109 0002 85B0     	 sub sp,sp,#20
 2110              	.LCFI24:
 2111              	 .cfi_def_cfa_offset 32
 2112 0004 00AF     	 add r7,sp,#0
 2113              	.LCFI25:
 2114              	 .cfi_def_cfa_register 7
 801:../main.c     **** 	int16_t sector_a, sector_b, sector_c, sector, k;
 802:../main.c     **** 	if (Usa>=Usb){
 2115              	 .loc 1 802 0
 2116 0006 DC4B     	 ldr r3,.L72
 2117 0008 1A68     	 ldr r2,[r3]
 2118 000a DC4B     	 ldr r3,.L72+4
 2119 000c 1B68     	 ldr r3,[r3]
 2120 000e 101C     	 add r0,r2,#0
 2121 0010 191C     	 add r1,r3,#0
 2122 0012 FFF7FEFF 	 bl __aeabi_fcmpge
 2123 0016 031E     	 sub r3,r0,#0
 2124 0018 04D0     	 beq .L69
 803:../main.c     **** 		sector_a=4;
 2125              	 .loc 1 803 0
 2126 001a 0E23     	 mov r3,#14
 2127 001c FB18     	 add r3,r7,r3
 2128 001e 0422     	 mov r2,#4
 2129 0020 1A80     	 strh r2,[r3]
 2130 0022 03E0     	 b .L41
 2131              	.L69:
 804:../main.c     **** 	}
 805:../main.c     **** 	else{
 806:../main.c     **** 		sector_a=0;
 2132              	 .loc 1 806 0
 2133 0024 0E23     	 mov r3,#14
 2134 0026 FB18     	 add r3,r7,r3
 2135 0028 0022     	 mov r2,#0
 2136 002a 1A80     	 strh r2,[r3]
 2137              	.L41:
 807:../main.c     **** 	}
 808:../main.c     **** 	if (Usb>=Usc){
 2138              	 .loc 1 808 0
 2139 002c D34B     	 ldr r3,.L72+4
 2140 002e 1A68     	 ldr r2,[r3]
 2141 0030 D34B     	 ldr r3,.L72+8
 2142 0032 1B68     	 ldr r3,[r3]
 2143 0034 101C     	 add r0,r2,#0
 2144 0036 191C     	 add r1,r3,#0
 2145 0038 FFF7FEFF 	 bl __aeabi_fcmpge
 2146 003c 031E     	 sub r3,r0,#0
 2147 003e 04D0     	 beq .L70
 809:../main.c     **** 		sector_b=2;
 2148              	 .loc 1 809 0
 2149 0040 0C23     	 mov r3,#12
 2150 0042 FB18     	 add r3,r7,r3
 2151 0044 0222     	 mov r2,#2
 2152 0046 1A80     	 strh r2,[r3]
 2153 0048 03E0     	 b .L44
 2154              	.L70:
 810:../main.c     **** 	}
 811:../main.c     **** 	else{
 812:../main.c     **** 		sector_b=0;
 2155              	 .loc 1 812 0
 2156 004a 0C23     	 mov r3,#12
 2157 004c FB18     	 add r3,r7,r3
 2158 004e 0022     	 mov r2,#0
 2159 0050 1A80     	 strh r2,[r3]
 2160              	.L44:
 813:../main.c     **** 	}
 814:../main.c     **** 	if (Usc>=Usa){
 2161              	 .loc 1 814 0
 2162 0052 CB4B     	 ldr r3,.L72+8
 2163 0054 1A68     	 ldr r2,[r3]
 2164 0056 C84B     	 ldr r3,.L72
 2165 0058 1B68     	 ldr r3,[r3]
 2166 005a 101C     	 add r0,r2,#0
 2167 005c 191C     	 add r1,r3,#0
 2168 005e FFF7FEFF 	 bl __aeabi_fcmpge
 2169 0062 031E     	 sub r3,r0,#0
 2170 0064 04D0     	 beq .L71
 815:../main.c     **** 		sector_c=1;
 2171              	 .loc 1 815 0
 2172 0066 0A23     	 mov r3,#10
 2173 0068 FB18     	 add r3,r7,r3
 2174 006a 0122     	 mov r2,#1
 2175 006c 1A80     	 strh r2,[r3]
 2176 006e 03E0     	 b .L47
 2177              	.L71:
 816:../main.c     **** 	}
 817:../main.c     **** 	else{
 818:../main.c     **** 		sector_c=0;
 2178              	 .loc 1 818 0
 2179 0070 0A23     	 mov r3,#10
 2180 0072 FB18     	 add r3,r7,r3
 2181 0074 0022     	 mov r2,#0
 2182 0076 1A80     	 strh r2,[r3]
 2183              	.L47:
 819:../main.c     **** 	}
 820:../main.c     **** 	k=sector_a+sector_b+sector_c;
 2184              	 .loc 1 820 0
 2185 0078 0E23     	 mov r3,#14
 2186 007a FB18     	 add r3,r7,r3
 2187 007c 1A88     	 ldrh r2,[r3]
 2188 007e 0C23     	 mov r3,#12
 2189 0080 FB18     	 add r3,r7,r3
 2190 0082 1B88     	 ldrh r3,[r3]
 2191 0084 D318     	 add r3,r2,r3
 2192 0086 9AB2     	 uxth r2,r3
 2193 0088 0A23     	 mov r3,#10
 2194 008a FB18     	 add r3,r7,r3
 2195 008c 1B88     	 ldrh r3,[r3]
 2196 008e D318     	 add r3,r2,r3
 2197 0090 9AB2     	 uxth r2,r3
 2198 0092 BB1D     	 add r3,r7,#6
 2199 0094 1A80     	 strh r2,[r3]
 821:../main.c     ****     switch (k){
 2200              	 .loc 1 821 0
 2201 0096 BB1D     	 add r3,r7,#6
 2202 0098 0022     	 mov r2,#0
 2203 009a 9B5E     	 ldrsh r3,[r3,r2]
 2204 009c 072B     	 cmp r3,#7
 2205 009e 2CD8     	 bhi .L48
 2206 00a0 9A00     	 lsl r2,r3,#2
 2207 00a2 B84B     	 ldr r3,.L72+12
 2208 00a4 D318     	 add r3,r2,r3
 2209 00a6 1B68     	 ldr r3,[r3]
 2210 00a8 9F46     	 mov pc,r3
 2211              	 .section .rodata.SVMAlgorithm,"a",%progbits
 2212              	 .align 2
 2213              	.L50:
 2214 0000 AA000000 	 .word .L49
 2215 0004 B4000000 	 .word .L51
 2216 0008 BE000000 	 .word .L52
 2217 000c C8000000 	 .word .L53
 2218 0010 D2000000 	 .word .L54
 2219 0014 DC000000 	 .word .L55
 2220 0018 E6000000 	 .word .L56
 2221 001c F0000000 	 .word .L57
 2222              	 .section .text.SVMAlgorithm
 2223              	.L49:
 822:../main.c     ****     case 0:
 823:../main.c     ****     	sector=4;
 2224              	 .loc 1 823 0
 2225 00aa 0823     	 mov r3,#8
 2226 00ac FB18     	 add r3,r7,r3
 2227 00ae 0422     	 mov r2,#4
 2228 00b0 1A80     	 strh r2,[r3]
 824:../main.c     ****     	break;
 2229              	 .loc 1 824 0
 2230 00b2 22E0     	 b .L48
 2231              	.L51:
 825:../main.c     ****     case 1:
 826:../main.c     ****     	sector=4;
 2232              	 .loc 1 826 0
 2233 00b4 0823     	 mov r3,#8
 2234 00b6 FB18     	 add r3,r7,r3
 2235 00b8 0422     	 mov r2,#4
 2236 00ba 1A80     	 strh r2,[r3]
 827:../main.c     ****     	break;
 2237              	 .loc 1 827 0
 2238 00bc 1DE0     	 b .L48
 2239              	.L52:
 828:../main.c     ****     case 2:
 829:../main.c     ****     	sector=2;
 2240              	 .loc 1 829 0
 2241 00be 0823     	 mov r3,#8
 2242 00c0 FB18     	 add r3,r7,r3
 2243 00c2 0222     	 mov r2,#2
 2244 00c4 1A80     	 strh r2,[r3]
 830:../main.c     ****     	break;
 2245              	 .loc 1 830 0
 2246 00c6 18E0     	 b .L48
 2247              	.L53:
 831:../main.c     ****     case 3:
 832:../main.c     ****     	sector=3;
 2248              	 .loc 1 832 0
 2249 00c8 0823     	 mov r3,#8
 2250 00ca FB18     	 add r3,r7,r3
 2251 00cc 0322     	 mov r2,#3
 2252 00ce 1A80     	 strh r2,[r3]
 833:../main.c     ****     	break;
 2253              	 .loc 1 833 0
 2254 00d0 13E0     	 b .L48
 2255              	.L54:
 834:../main.c     ****     case 4:
 835:../main.c     ****     	sector=6;
 2256              	 .loc 1 835 0
 2257 00d2 0823     	 mov r3,#8
 2258 00d4 FB18     	 add r3,r7,r3
 2259 00d6 0622     	 mov r2,#6
 2260 00d8 1A80     	 strh r2,[r3]
 836:../main.c     ****     	break;
 2261              	 .loc 1 836 0
 2262 00da 0EE0     	 b .L48
 2263              	.L55:
 837:../main.c     ****     case 5:
 838:../main.c     ****     	sector=5;
 2264              	 .loc 1 838 0
 2265 00dc 0823     	 mov r3,#8
 2266 00de FB18     	 add r3,r7,r3
 2267 00e0 0522     	 mov r2,#5
 2268 00e2 1A80     	 strh r2,[r3]
 839:../main.c     ****     	break;
 2269              	 .loc 1 839 0
 2270 00e4 09E0     	 b .L48
 2271              	.L56:
 840:../main.c     ****     case 6:
 841:../main.c     ****     	sector=1;
 2272              	 .loc 1 841 0
 2273 00e6 0823     	 mov r3,#8
 2274 00e8 FB18     	 add r3,r7,r3
 2275 00ea 0122     	 mov r2,#1
 2276 00ec 1A80     	 strh r2,[r3]
 842:../main.c     ****     	break;
 2277              	 .loc 1 842 0
 2278 00ee 04E0     	 b .L48
 2279              	.L57:
 843:../main.c     ****     case 7:
 844:../main.c     ****     	sector=1;
 2280              	 .loc 1 844 0
 2281 00f0 0823     	 mov r3,#8
 2282 00f2 FB18     	 add r3,r7,r3
 2283 00f4 0122     	 mov r2,#1
 2284 00f6 1A80     	 strh r2,[r3]
 845:../main.c     ****     	break;
 2285              	 .loc 1 845 0
 2286 00f8 C046     	 mov r8,r8
 2287              	.L48:
 846:../main.c     ****     }
 847:../main.c     ****     switch (sector){
 2288              	 .loc 1 847 0
 2289 00fa 0823     	 mov r3,#8
 2290 00fc FB18     	 add r3,r7,r3
 2291 00fe 0022     	 mov r2,#0
 2292 0100 9B5E     	 ldrsh r3,[r3,r2]
 2293 0102 062B     	 cmp r3,#6
 2294 0104 00D9     	 bls .LCB1084
 2295 0106 D4E3     	 b .L38
 2296              	.LCB1084:
 2297 0108 9A00     	 lsl r2,r3,#2
 2298 010a 9F4B     	 ldr r3,.L72+16
 2299 010c D318     	 add r3,r2,r3
 2300 010e 1B68     	 ldr r3,[r3]
 2301 0110 9F46     	 mov pc,r3
 2302              	 .section .rodata.SVMAlgorithm
 2303              	 .align 2
 2304              	.L60:
 2305 0020 B2080000 	 .word .L38
 2306 0024 12010000 	 .word .L59
 2307 0028 38020000 	 .word .L61
 2308 002c C4030000 	 .word .L62
 2309 0030 EA040000 	 .word .L63
 2310 0034 10060000 	 .word .L64
 2311 0038 8C070000 	 .word .L65
 2312              	 .section .text.SVMAlgorithm
 2313              	.L59:
 848:../main.c     ****     case 1:
 849:../main.c     ****     	d1=(float)((3*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2314              	 .loc 1 849 0
 2315 0112 9E4B     	 ldr r3,.L72+20
 2316 0114 1B68     	 ldr r3,[r3]
 2317 0116 181C     	 add r0,r3,#0
 2318 0118 9D49     	 ldr r1,.L72+24
 2319 011a FFF7FEFF 	 bl __aeabi_fmul
 2320 011e 031C     	 add r3,r0,#0
 2321 0120 1C1C     	 add r4,r3,#0
 2322 0122 9C4B     	 ldr r3,.L72+28
 2323 0124 1B68     	 ldr r3,[r3]
 2324 0126 181C     	 add r0,r3,#0
 2325 0128 9B49     	 ldr r1,.L72+32
 2326 012a FFF7FEFF 	 bl __aeabi_fmul
 2327 012e 031C     	 add r3,r0,#0
 2328 0130 201C     	 add r0,r4,#0
 2329 0132 191C     	 add r1,r3,#0
 2330 0134 FFF7FEFF 	 bl __aeabi_fsub
 2331 0138 031C     	 add r3,r0,#0
 2332 013a 181C     	 add r0,r3,#0
 2333 013c 9749     	 ldr r1,.L72+36
 2334 013e FFF7FEFF 	 bl __aeabi_fdiv
 2335 0142 031C     	 add r3,r0,#0
 2336 0144 1A1C     	 add r2,r3,#0
 2337 0146 964B     	 ldr r3,.L72+40
 2338 0148 1A60     	 str r2,[r3]
 850:../main.c     ****     	d2=(float)((sqrt_3*Usbeta)/VDC);
 2339              	 .loc 1 850 0
 2340 014a 924B     	 ldr r3,.L72+28
 2341 014c 1B68     	 ldr r3,[r3]
 2342 014e 181C     	 add r0,r3,#0
 2343 0150 9149     	 ldr r1,.L72+32
 2344 0152 FFF7FEFF 	 bl __aeabi_fmul
 2345 0156 031C     	 add r3,r0,#0
 2346 0158 181C     	 add r0,r3,#0
 2347 015a 9249     	 ldr r1,.L72+44
 2348 015c FFF7FEFF 	 bl __aeabi_fdiv
 2349 0160 031C     	 add r3,r0,#0
 2350 0162 1A1C     	 add r2,r3,#0
 2351 0164 904B     	 ldr r3,.L72+48
 2352 0166 1A60     	 str r2,[r3]
 851:../main.c     ****     	d0=1-d1-d2;
 2353              	 .loc 1 851 0
 2354 0168 8D4B     	 ldr r3,.L72+40
 2355 016a 1B68     	 ldr r3,[r3]
 2356 016c FE20     	 mov r0,#254
 2357 016e 8005     	 lsl r0,r0,#22
 2358 0170 191C     	 add r1,r3,#0
 2359 0172 FFF7FEFF 	 bl __aeabi_fsub
 2360 0176 031C     	 add r3,r0,#0
 2361 0178 1A1C     	 add r2,r3,#0
 2362 017a 8B4B     	 ldr r3,.L72+48
 2363 017c 1B68     	 ldr r3,[r3]
 2364 017e 101C     	 add r0,r2,#0
 2365 0180 191C     	 add r1,r3,#0
 2366 0182 FFF7FEFF 	 bl __aeabi_fsub
 2367 0186 031C     	 add r3,r0,#0
 2368 0188 1A1C     	 add r2,r3,#0
 2369 018a 884B     	 ldr r3,.L72+52
 2370 018c 1A60     	 str r2,[r3]
 852:../main.c     ****     	da=(uint16_t)((d0/2)*10000);
 2371              	 .loc 1 852 0
 2372 018e 874B     	 ldr r3,.L72+52
 2373 0190 1B68     	 ldr r3,[r3]
 2374 0192 181C     	 add r0,r3,#0
 2375 0194 8021     	 mov r1,#128
 2376 0196 C905     	 lsl r1,r1,#23
 2377 0198 FFF7FEFF 	 bl __aeabi_fdiv
 2378 019c 031C     	 add r3,r0,#0
 2379 019e 181C     	 add r0,r3,#0
 2380 01a0 8349     	 ldr r1,.L72+56
 2381 01a2 FFF7FEFF 	 bl __aeabi_fmul
 2382 01a6 031C     	 add r3,r0,#0
 2383 01a8 181C     	 add r0,r3,#0
 2384 01aa FFF7FEFF 	 bl __aeabi_f2uiz
 2385 01ae 031C     	 mov r3,r0
 2386 01b0 9AB2     	 uxth r2,r3
 2387 01b2 804B     	 ldr r3,.L72+60
 2388 01b4 1A80     	 strh r2,[r3]
 853:../main.c     ****     	db=(uint16_t)(((d0/2)+d1)*10000);
 2389              	 .loc 1 853 0
 2390 01b6 7D4B     	 ldr r3,.L72+52
 2391 01b8 1B68     	 ldr r3,[r3]
 2392 01ba 181C     	 add r0,r3,#0
 2393 01bc 8021     	 mov r1,#128
 2394 01be C905     	 lsl r1,r1,#23
 2395 01c0 FFF7FEFF 	 bl __aeabi_fdiv
 2396 01c4 031C     	 add r3,r0,#0
 2397 01c6 1A1C     	 add r2,r3,#0
 2398 01c8 754B     	 ldr r3,.L72+40
 2399 01ca 1B68     	 ldr r3,[r3]
 2400 01cc 101C     	 add r0,r2,#0
 2401 01ce 191C     	 add r1,r3,#0
 2402 01d0 FFF7FEFF 	 bl __aeabi_fadd
 2403 01d4 031C     	 add r3,r0,#0
 2404 01d6 181C     	 add r0,r3,#0
 2405 01d8 7549     	 ldr r1,.L72+56
 2406 01da FFF7FEFF 	 bl __aeabi_fmul
 2407 01de 031C     	 add r3,r0,#0
 2408 01e0 181C     	 add r0,r3,#0
 2409 01e2 FFF7FEFF 	 bl __aeabi_f2uiz
 2410 01e6 031C     	 mov r3,r0
 2411 01e8 9AB2     	 uxth r2,r3
 2412 01ea 734B     	 ldr r3,.L72+64
 2413 01ec 1A80     	 strh r2,[r3]
 854:../main.c     ****     	dc=(uint16_t)(((d0/2)+d1+d2)*10000);
 2414              	 .loc 1 854 0
 2415 01ee 6F4B     	 ldr r3,.L72+52
 2416 01f0 1B68     	 ldr r3,[r3]
 2417 01f2 181C     	 add r0,r3,#0
 2418 01f4 8021     	 mov r1,#128
 2419 01f6 C905     	 lsl r1,r1,#23
 2420 01f8 FFF7FEFF 	 bl __aeabi_fdiv
 2421 01fc 031C     	 add r3,r0,#0
 2422 01fe 1A1C     	 add r2,r3,#0
 2423 0200 674B     	 ldr r3,.L72+40
 2424 0202 1B68     	 ldr r3,[r3]
 2425 0204 101C     	 add r0,r2,#0
 2426 0206 191C     	 add r1,r3,#0
 2427 0208 FFF7FEFF 	 bl __aeabi_fadd
 2428 020c 031C     	 add r3,r0,#0
 2429 020e 1A1C     	 add r2,r3,#0
 2430 0210 654B     	 ldr r3,.L72+48
 2431 0212 1B68     	 ldr r3,[r3]
 2432 0214 101C     	 add r0,r2,#0
 2433 0216 191C     	 add r1,r3,#0
 2434 0218 FFF7FEFF 	 bl __aeabi_fadd
 2435 021c 031C     	 add r3,r0,#0
 2436 021e 181C     	 add r0,r3,#0
 2437 0220 6349     	 ldr r1,.L72+56
 2438 0222 FFF7FEFF 	 bl __aeabi_fmul
 2439 0226 031C     	 add r3,r0,#0
 2440 0228 181C     	 add r0,r3,#0
 2441 022a FFF7FEFF 	 bl __aeabi_f2uiz
 2442 022e 031C     	 mov r3,r0
 2443 0230 9AB2     	 uxth r2,r3
 2444 0232 624B     	 ldr r3,.L72+68
 2445 0234 1A80     	 strh r2,[r3]
 855:../main.c     ****     	break;
 2446              	 .loc 1 855 0
 2447 0236 3CE3     	 b .L38
 2448              	.L61:
 856:../main.c     ****     case 2:
 857:../main.c     ****     	d1=(float)(((-3)*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 2449              	 .loc 1 857 0
 2450 0238 544B     	 ldr r3,.L72+20
 2451 023a 1B68     	 ldr r3,[r3]
 2452 023c 181C     	 add r0,r3,#0
 2453 023e 6049     	 ldr r1,.L72+72
 2454 0240 FFF7FEFF 	 bl __aeabi_fmul
 2455 0244 031C     	 add r3,r0,#0
 2456 0246 1C1C     	 add r4,r3,#0
 2457 0248 524B     	 ldr r3,.L72+28
 2458 024a 1B68     	 ldr r3,[r3]
 2459 024c 181C     	 add r0,r3,#0
 2460 024e 5249     	 ldr r1,.L72+32
 2461 0250 FFF7FEFF 	 bl __aeabi_fmul
 2462 0254 031C     	 add r3,r0,#0
 2463 0256 201C     	 add r0,r4,#0
 2464 0258 191C     	 add r1,r3,#0
 2465 025a FFF7FEFF 	 bl __aeabi_fadd
 2466 025e 031C     	 add r3,r0,#0
 2467 0260 181C     	 add r0,r3,#0
 2468 0262 4E49     	 ldr r1,.L72+36
 2469 0264 FFF7FEFF 	 bl __aeabi_fdiv
 2470 0268 031C     	 add r3,r0,#0
 2471 026a 1A1C     	 add r2,r3,#0
 2472 026c 4C4B     	 ldr r3,.L72+40
 2473 026e 1A60     	 str r2,[r3]
 858:../main.c     ****     	d2=(float)((3*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 2474              	 .loc 1 858 0
 2475 0270 464B     	 ldr r3,.L72+20
 2476 0272 1B68     	 ldr r3,[r3]
 2477 0274 181C     	 add r0,r3,#0
 2478 0276 4649     	 ldr r1,.L72+24
 2479 0278 FFF7FEFF 	 bl __aeabi_fmul
 2480 027c 031C     	 add r3,r0,#0
 2481 027e 1C1C     	 add r4,r3,#0
 2482 0280 444B     	 ldr r3,.L72+28
 2483 0282 1B68     	 ldr r3,[r3]
 2484 0284 181C     	 add r0,r3,#0
 2485 0286 4449     	 ldr r1,.L72+32
 2486 0288 FFF7FEFF 	 bl __aeabi_fmul
 2487 028c 031C     	 add r3,r0,#0
 2488 028e 201C     	 add r0,r4,#0
 2489 0290 191C     	 add r1,r3,#0
 2490 0292 FFF7FEFF 	 bl __aeabi_fadd
 2491 0296 031C     	 add r3,r0,#0
 2492 0298 181C     	 add r0,r3,#0
 2493 029a 4049     	 ldr r1,.L72+36
 2494 029c FFF7FEFF 	 bl __aeabi_fdiv
 2495 02a0 031C     	 add r3,r0,#0
 2496 02a2 1A1C     	 add r2,r3,#0
 2497 02a4 404B     	 ldr r3,.L72+48
 2498 02a6 1A60     	 str r2,[r3]
 859:../main.c     ****     	d0=1-d1-d2;
 2499              	 .loc 1 859 0
 2500 02a8 3D4B     	 ldr r3,.L72+40
 2501 02aa 1B68     	 ldr r3,[r3]
 2502 02ac FE20     	 mov r0,#254
 2503 02ae 8005     	 lsl r0,r0,#22
 2504 02b0 191C     	 add r1,r3,#0
 2505 02b2 FFF7FEFF 	 bl __aeabi_fsub
 2506 02b6 031C     	 add r3,r0,#0
 2507 02b8 1A1C     	 add r2,r3,#0
 2508 02ba 3B4B     	 ldr r3,.L72+48
 2509 02bc 1B68     	 ldr r3,[r3]
 2510 02be 101C     	 add r0,r2,#0
 2511 02c0 191C     	 add r1,r3,#0
 2512 02c2 FFF7FEFF 	 bl __aeabi_fsub
 2513 02c6 031C     	 add r3,r0,#0
 2514 02c8 1A1C     	 add r2,r3,#0
 2515 02ca 384B     	 ldr r3,.L72+52
 2516 02cc 1A60     	 str r2,[r3]
 860:../main.c     ****     	da=(uint16_t)(((d0/2)+d1)*10000);
 2517              	 .loc 1 860 0
 2518 02ce 374B     	 ldr r3,.L72+52
 2519 02d0 1B68     	 ldr r3,[r3]
 2520 02d2 181C     	 add r0,r3,#0
 2521 02d4 8021     	 mov r1,#128
 2522 02d6 C905     	 lsl r1,r1,#23
 2523 02d8 FFF7FEFF 	 bl __aeabi_fdiv
 2524 02dc 031C     	 add r3,r0,#0
 2525 02de 1A1C     	 add r2,r3,#0
 2526 02e0 2F4B     	 ldr r3,.L72+40
 2527 02e2 1B68     	 ldr r3,[r3]
 2528 02e4 101C     	 add r0,r2,#0
 2529 02e6 191C     	 add r1,r3,#0
 2530 02e8 FFF7FEFF 	 bl __aeabi_fadd
 2531 02ec 031C     	 add r3,r0,#0
 2532 02ee 181C     	 add r0,r3,#0
 2533 02f0 2F49     	 ldr r1,.L72+56
 2534 02f2 FFF7FEFF 	 bl __aeabi_fmul
 2535 02f6 031C     	 add r3,r0,#0
 2536 02f8 181C     	 add r0,r3,#0
 2537 02fa FFF7FEFF 	 bl __aeabi_f2uiz
 2538 02fe 031C     	 mov r3,r0
 2539 0300 9AB2     	 uxth r2,r3
 2540 0302 2C4B     	 ldr r3,.L72+60
 2541 0304 1A80     	 strh r2,[r3]
 861:../main.c     ****     	db=(uint16_t)((d0/2)*10000);
 2542              	 .loc 1 861 0
 2543 0306 294B     	 ldr r3,.L72+52
 2544 0308 1B68     	 ldr r3,[r3]
 2545 030a 181C     	 add r0,r3,#0
 2546 030c 8021     	 mov r1,#128
 2547 030e C905     	 lsl r1,r1,#23
 2548 0310 FFF7FEFF 	 bl __aeabi_fdiv
 2549 0314 031C     	 add r3,r0,#0
 2550 0316 181C     	 add r0,r3,#0
 2551 0318 2549     	 ldr r1,.L72+56
 2552 031a FFF7FEFF 	 bl __aeabi_fmul
 2553 031e 031C     	 add r3,r0,#0
 2554 0320 181C     	 add r0,r3,#0
 2555 0322 FFF7FEFF 	 bl __aeabi_f2uiz
 2556 0326 031C     	 mov r3,r0
 2557 0328 9AB2     	 uxth r2,r3
 2558 032a 234B     	 ldr r3,.L72+64
 2559 032c 1A80     	 strh r2,[r3]
 862:../main.c     ****     	dc=(uint16_t)(((d0/2)+d1+d2)*10000);
 2560              	 .loc 1 862 0
 2561 032e 1F4B     	 ldr r3,.L72+52
 2562 0330 1B68     	 ldr r3,[r3]
 2563 0332 181C     	 add r0,r3,#0
 2564 0334 8021     	 mov r1,#128
 2565 0336 C905     	 lsl r1,r1,#23
 2566 0338 FFF7FEFF 	 bl __aeabi_fdiv
 2567 033c 031C     	 add r3,r0,#0
 2568 033e 1A1C     	 add r2,r3,#0
 2569 0340 174B     	 ldr r3,.L72+40
 2570 0342 1B68     	 ldr r3,[r3]
 2571 0344 101C     	 add r0,r2,#0
 2572 0346 191C     	 add r1,r3,#0
 2573 0348 FFF7FEFF 	 bl __aeabi_fadd
 2574 034c 031C     	 add r3,r0,#0
 2575 034e 1A1C     	 add r2,r3,#0
 2576 0350 154B     	 ldr r3,.L72+48
 2577 0352 1B68     	 ldr r3,[r3]
 2578 0354 101C     	 add r0,r2,#0
 2579 0356 191C     	 add r1,r3,#0
 2580 0358 FFF7FEFF 	 bl __aeabi_fadd
 2581 035c 031C     	 add r3,r0,#0
 2582 035e 181C     	 add r0,r3,#0
 2583 0360 1349     	 ldr r1,.L72+56
 2584 0362 FFF7FEFF 	 bl __aeabi_fmul
 2585 0366 031C     	 add r3,r0,#0
 2586 0368 181C     	 add r0,r3,#0
 2587 036a FFF7FEFF 	 bl __aeabi_f2uiz
 2588 036e 031C     	 mov r3,r0
 2589 0370 9AB2     	 uxth r2,r3
 2590 0372 124B     	 ldr r3,.L72+68
 2591 0374 1A80     	 strh r2,[r3]
 863:../main.c     ****     	break;
 2592              	 .loc 1 863 0
 2593 0376 9CE2     	 b .L38
 2594              	.L73:
 2595              	 .align 2
 2596              	.L72:
 2597 0378 00000000 	 .word Usa
 2598 037c 00000000 	 .word Usb
 2599 0380 00000000 	 .word Usc
 2600 0384 00000000 	 .word .L50
 2601 0388 20000000 	 .word .L60
 2602 038c 00000000 	 .word Usalpha
 2603 0390 00004040 	 .word 1077936128
 2604 0394 00000000 	 .word Usbeta
 2605 0398 D0B3DD3F 	 .word 1071494096
 2606 039c 00004042 	 .word 1111490560
 2607 03a0 00000000 	 .word d1
 2608 03a4 0000C041 	 .word 1103101952
 2609 03a8 00000000 	 .word d2
 2610 03ac 00000000 	 .word d0
 2611 03b0 00401C46 	 .word 1176256512
 2612 03b4 00000000 	 .word da
 2613 03b8 00000000 	 .word db
 2614 03bc 00000000 	 .word dc
 2615 03c0 000040C0 	 .word -1069547520
 2616              	.L62:
 864:../main.c     ****     case 3:
 865:../main.c     ****     	d1=(float)((sqrt_3*Usbeta)/VDC);
 2617              	 .loc 1 865 0
 2618 03c4 E24B     	 ldr r3,.L74
 2619 03c6 1B68     	 ldr r3,[r3]
 2620 03c8 181C     	 add r0,r3,#0
 2621 03ca E249     	 ldr r1,.L74+4
 2622 03cc FFF7FEFF 	 bl __aeabi_fmul
 2623 03d0 031C     	 add r3,r0,#0
 2624 03d2 181C     	 add r0,r3,#0
 2625 03d4 E049     	 ldr r1,.L74+8
 2626 03d6 FFF7FEFF 	 bl __aeabi_fdiv
 2627 03da 031C     	 add r3,r0,#0
 2628 03dc 1A1C     	 add r2,r3,#0
 2629 03de DF4B     	 ldr r3,.L74+12
 2630 03e0 1A60     	 str r2,[r3]
 866:../main.c     ****     	d2=(float)(((-3)*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2631              	 .loc 1 866 0
 2632 03e2 DF4B     	 ldr r3,.L74+16
 2633 03e4 1B68     	 ldr r3,[r3]
 2634 03e6 181C     	 add r0,r3,#0
 2635 03e8 DE49     	 ldr r1,.L74+20
 2636 03ea FFF7FEFF 	 bl __aeabi_fmul
 2637 03ee 031C     	 add r3,r0,#0
 2638 03f0 1C1C     	 add r4,r3,#0
 2639 03f2 D74B     	 ldr r3,.L74
 2640 03f4 1B68     	 ldr r3,[r3]
 2641 03f6 181C     	 add r0,r3,#0
 2642 03f8 D649     	 ldr r1,.L74+4
 2643 03fa FFF7FEFF 	 bl __aeabi_fmul
 2644 03fe 031C     	 add r3,r0,#0
 2645 0400 201C     	 add r0,r4,#0
 2646 0402 191C     	 add r1,r3,#0
 2647 0404 FFF7FEFF 	 bl __aeabi_fsub
 2648 0408 031C     	 add r3,r0,#0
 2649 040a 181C     	 add r0,r3,#0
 2650 040c D649     	 ldr r1,.L74+24
 2651 040e FFF7FEFF 	 bl __aeabi_fdiv
 2652 0412 031C     	 add r3,r0,#0
 2653 0414 1A1C     	 add r2,r3,#0
 2654 0416 D54B     	 ldr r3,.L74+28
 2655 0418 1A60     	 str r2,[r3]
 867:../main.c     ****     	d0=1-d1-d2;
 2656              	 .loc 1 867 0
 2657 041a D04B     	 ldr r3,.L74+12
 2658 041c 1B68     	 ldr r3,[r3]
 2659 041e FE20     	 mov r0,#254
 2660 0420 8005     	 lsl r0,r0,#22
 2661 0422 191C     	 add r1,r3,#0
 2662 0424 FFF7FEFF 	 bl __aeabi_fsub
 2663 0428 031C     	 add r3,r0,#0
 2664 042a 1A1C     	 add r2,r3,#0
 2665 042c CF4B     	 ldr r3,.L74+28
 2666 042e 1B68     	 ldr r3,[r3]
 2667 0430 101C     	 add r0,r2,#0
 2668 0432 191C     	 add r1,r3,#0
 2669 0434 FFF7FEFF 	 bl __aeabi_fsub
 2670 0438 031C     	 add r3,r0,#0
 2671 043a 1A1C     	 add r2,r3,#0
 2672 043c CC4B     	 ldr r3,.L74+32
 2673 043e 1A60     	 str r2,[r3]
 868:../main.c     ****     	da=(uint16_t)(((d0/2)+d1+d2)*10000);
 2674              	 .loc 1 868 0
 2675 0440 CB4B     	 ldr r3,.L74+32
 2676 0442 1B68     	 ldr r3,[r3]
 2677 0444 181C     	 add r0,r3,#0
 2678 0446 8021     	 mov r1,#128
 2679 0448 C905     	 lsl r1,r1,#23
 2680 044a FFF7FEFF 	 bl __aeabi_fdiv
 2681 044e 031C     	 add r3,r0,#0
 2682 0450 1A1C     	 add r2,r3,#0
 2683 0452 C24B     	 ldr r3,.L74+12
 2684 0454 1B68     	 ldr r3,[r3]
 2685 0456 101C     	 add r0,r2,#0
 2686 0458 191C     	 add r1,r3,#0
 2687 045a FFF7FEFF 	 bl __aeabi_fadd
 2688 045e 031C     	 add r3,r0,#0
 2689 0460 1A1C     	 add r2,r3,#0
 2690 0462 C24B     	 ldr r3,.L74+28
 2691 0464 1B68     	 ldr r3,[r3]
 2692 0466 101C     	 add r0,r2,#0
 2693 0468 191C     	 add r1,r3,#0
 2694 046a FFF7FEFF 	 bl __aeabi_fadd
 2695 046e 031C     	 add r3,r0,#0
 2696 0470 181C     	 add r0,r3,#0
 2697 0472 C049     	 ldr r1,.L74+36
 2698 0474 FFF7FEFF 	 bl __aeabi_fmul
 2699 0478 031C     	 add r3,r0,#0
 2700 047a 181C     	 add r0,r3,#0
 2701 047c FFF7FEFF 	 bl __aeabi_f2uiz
 2702 0480 031C     	 mov r3,r0
 2703 0482 9AB2     	 uxth r2,r3
 2704 0484 BC4B     	 ldr r3,.L74+40
 2705 0486 1A80     	 strh r2,[r3]
 869:../main.c     ****     	db=(uint16_t)((d0/2)*10000);
 2706              	 .loc 1 869 0
 2707 0488 B94B     	 ldr r3,.L74+32
 2708 048a 1B68     	 ldr r3,[r3]
 2709 048c 181C     	 add r0,r3,#0
 2710 048e 8021     	 mov r1,#128
 2711 0490 C905     	 lsl r1,r1,#23
 2712 0492 FFF7FEFF 	 bl __aeabi_fdiv
 2713 0496 031C     	 add r3,r0,#0
 2714 0498 181C     	 add r0,r3,#0
 2715 049a B649     	 ldr r1,.L74+36
 2716 049c FFF7FEFF 	 bl __aeabi_fmul
 2717 04a0 031C     	 add r3,r0,#0
 2718 04a2 181C     	 add r0,r3,#0
 2719 04a4 FFF7FEFF 	 bl __aeabi_f2uiz
 2720 04a8 031C     	 mov r3,r0
 2721 04aa 9AB2     	 uxth r2,r3
 2722 04ac B34B     	 ldr r3,.L74+44
 2723 04ae 1A80     	 strh r2,[r3]
 870:../main.c     ****     	dc=(uint16_t)(((d0/2)+d1)*10000);
 2724              	 .loc 1 870 0
 2725 04b0 AF4B     	 ldr r3,.L74+32
 2726 04b2 1B68     	 ldr r3,[r3]
 2727 04b4 181C     	 add r0,r3,#0
 2728 04b6 8021     	 mov r1,#128
 2729 04b8 C905     	 lsl r1,r1,#23
 2730 04ba FFF7FEFF 	 bl __aeabi_fdiv
 2731 04be 031C     	 add r3,r0,#0
 2732 04c0 1A1C     	 add r2,r3,#0
 2733 04c2 A64B     	 ldr r3,.L74+12
 2734 04c4 1B68     	 ldr r3,[r3]
 2735 04c6 101C     	 add r0,r2,#0
 2736 04c8 191C     	 add r1,r3,#0
 2737 04ca FFF7FEFF 	 bl __aeabi_fadd
 2738 04ce 031C     	 add r3,r0,#0
 2739 04d0 181C     	 add r0,r3,#0
 2740 04d2 A849     	 ldr r1,.L74+36
 2741 04d4 FFF7FEFF 	 bl __aeabi_fmul
 2742 04d8 031C     	 add r3,r0,#0
 2743 04da 181C     	 add r0,r3,#0
 2744 04dc FFF7FEFF 	 bl __aeabi_f2uiz
 2745 04e0 031C     	 mov r3,r0
 2746 04e2 9AB2     	 uxth r2,r3
 2747 04e4 A64B     	 ldr r3,.L74+48
 2748 04e6 1A80     	 strh r2,[r3]
 871:../main.c     ****     	break;
 2749              	 .loc 1 871 0
 2750 04e8 E3E1     	 b .L38
 2751              	.L63:
 872:../main.c     ****     case 4:
 873:../main.c     ****     	d1=(float)(((-sqrt_3)*Usbeta)/VDC);
 2752              	 .loc 1 873 0
 2753 04ea 994B     	 ldr r3,.L74
 2754 04ec 1B68     	 ldr r3,[r3]
 2755 04ee 181C     	 add r0,r3,#0
 2756 04f0 A449     	 ldr r1,.L74+52
 2757 04f2 FFF7FEFF 	 bl __aeabi_fmul
 2758 04f6 031C     	 add r3,r0,#0
 2759 04f8 181C     	 add r0,r3,#0
 2760 04fa 9749     	 ldr r1,.L74+8
 2761 04fc FFF7FEFF 	 bl __aeabi_fdiv
 2762 0500 031C     	 add r3,r0,#0
 2763 0502 1A1C     	 add r2,r3,#0
 2764 0504 954B     	 ldr r3,.L74+12
 2765 0506 1A60     	 str r2,[r3]
 874:../main.c     ****     	d2=(float)(((-3)*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 2766              	 .loc 1 874 0
 2767 0508 954B     	 ldr r3,.L74+16
 2768 050a 1B68     	 ldr r3,[r3]
 2769 050c 181C     	 add r0,r3,#0
 2770 050e 9549     	 ldr r1,.L74+20
 2771 0510 FFF7FEFF 	 bl __aeabi_fmul
 2772 0514 031C     	 add r3,r0,#0
 2773 0516 1C1C     	 add r4,r3,#0
 2774 0518 8D4B     	 ldr r3,.L74
 2775 051a 1B68     	 ldr r3,[r3]
 2776 051c 181C     	 add r0,r3,#0
 2777 051e 8D49     	 ldr r1,.L74+4
 2778 0520 FFF7FEFF 	 bl __aeabi_fmul
 2779 0524 031C     	 add r3,r0,#0
 2780 0526 201C     	 add r0,r4,#0
 2781 0528 191C     	 add r1,r3,#0
 2782 052a FFF7FEFF 	 bl __aeabi_fadd
 2783 052e 031C     	 add r3,r0,#0
 2784 0530 181C     	 add r0,r3,#0
 2785 0532 8D49     	 ldr r1,.L74+24
 2786 0534 FFF7FEFF 	 bl __aeabi_fdiv
 2787 0538 031C     	 add r3,r0,#0
 2788 053a 1A1C     	 add r2,r3,#0
 2789 053c 8B4B     	 ldr r3,.L74+28
 2790 053e 1A60     	 str r2,[r3]
 875:../main.c     ****     	d0=1-d1-d2;
 2791              	 .loc 1 875 0
 2792 0540 864B     	 ldr r3,.L74+12
 2793 0542 1B68     	 ldr r3,[r3]
 2794 0544 FE20     	 mov r0,#254
 2795 0546 8005     	 lsl r0,r0,#22
 2796 0548 191C     	 add r1,r3,#0
 2797 054a FFF7FEFF 	 bl __aeabi_fsub
 2798 054e 031C     	 add r3,r0,#0
 2799 0550 1A1C     	 add r2,r3,#0
 2800 0552 864B     	 ldr r3,.L74+28
 2801 0554 1B68     	 ldr r3,[r3]
 2802 0556 101C     	 add r0,r2,#0
 2803 0558 191C     	 add r1,r3,#0
 2804 055a FFF7FEFF 	 bl __aeabi_fsub
 2805 055e 031C     	 add r3,r0,#0
 2806 0560 1A1C     	 add r2,r3,#0
 2807 0562 834B     	 ldr r3,.L74+32
 2808 0564 1A60     	 str r2,[r3]
 876:../main.c     ****     	da=(uint16_t)(((d0/2)+d1+d2)*10000);
 2809              	 .loc 1 876 0
 2810 0566 824B     	 ldr r3,.L74+32
 2811 0568 1B68     	 ldr r3,[r3]
 2812 056a 181C     	 add r0,r3,#0
 2813 056c 8021     	 mov r1,#128
 2814 056e C905     	 lsl r1,r1,#23
 2815 0570 FFF7FEFF 	 bl __aeabi_fdiv
 2816 0574 031C     	 add r3,r0,#0
 2817 0576 1A1C     	 add r2,r3,#0
 2818 0578 784B     	 ldr r3,.L74+12
 2819 057a 1B68     	 ldr r3,[r3]
 2820 057c 101C     	 add r0,r2,#0
 2821 057e 191C     	 add r1,r3,#0
 2822 0580 FFF7FEFF 	 bl __aeabi_fadd
 2823 0584 031C     	 add r3,r0,#0
 2824 0586 1A1C     	 add r2,r3,#0
 2825 0588 784B     	 ldr r3,.L74+28
 2826 058a 1B68     	 ldr r3,[r3]
 2827 058c 101C     	 add r0,r2,#0
 2828 058e 191C     	 add r1,r3,#0
 2829 0590 FFF7FEFF 	 bl __aeabi_fadd
 2830 0594 031C     	 add r3,r0,#0
 2831 0596 181C     	 add r0,r3,#0
 2832 0598 7649     	 ldr r1,.L74+36
 2833 059a FFF7FEFF 	 bl __aeabi_fmul
 2834 059e 031C     	 add r3,r0,#0
 2835 05a0 181C     	 add r0,r3,#0
 2836 05a2 FFF7FEFF 	 bl __aeabi_f2uiz
 2837 05a6 031C     	 mov r3,r0
 2838 05a8 9AB2     	 uxth r2,r3
 2839 05aa 734B     	 ldr r3,.L74+40
 2840 05ac 1A80     	 strh r2,[r3]
 877:../main.c     ****     	db=(uint16_t)(((d0/2)+d1)*10000);
 2841              	 .loc 1 877 0
 2842 05ae 704B     	 ldr r3,.L74+32
 2843 05b0 1B68     	 ldr r3,[r3]
 2844 05b2 181C     	 add r0,r3,#0
 2845 05b4 8021     	 mov r1,#128
 2846 05b6 C905     	 lsl r1,r1,#23
 2847 05b8 FFF7FEFF 	 bl __aeabi_fdiv
 2848 05bc 031C     	 add r3,r0,#0
 2849 05be 1A1C     	 add r2,r3,#0
 2850 05c0 664B     	 ldr r3,.L74+12
 2851 05c2 1B68     	 ldr r3,[r3]
 2852 05c4 101C     	 add r0,r2,#0
 2853 05c6 191C     	 add r1,r3,#0
 2854 05c8 FFF7FEFF 	 bl __aeabi_fadd
 2855 05cc 031C     	 add r3,r0,#0
 2856 05ce 181C     	 add r0,r3,#0
 2857 05d0 6849     	 ldr r1,.L74+36
 2858 05d2 FFF7FEFF 	 bl __aeabi_fmul
 2859 05d6 031C     	 add r3,r0,#0
 2860 05d8 181C     	 add r0,r3,#0
 2861 05da FFF7FEFF 	 bl __aeabi_f2uiz
 2862 05de 031C     	 mov r3,r0
 2863 05e0 9AB2     	 uxth r2,r3
 2864 05e2 664B     	 ldr r3,.L74+44
 2865 05e4 1A80     	 strh r2,[r3]
 878:../main.c     ****     	dc=(uint16_t)((d0/2)*10000);
 2866              	 .loc 1 878 0
 2867 05e6 624B     	 ldr r3,.L74+32
 2868 05e8 1B68     	 ldr r3,[r3]
 2869 05ea 181C     	 add r0,r3,#0
 2870 05ec 8021     	 mov r1,#128
 2871 05ee C905     	 lsl r1,r1,#23
 2872 05f0 FFF7FEFF 	 bl __aeabi_fdiv
 2873 05f4 031C     	 add r3,r0,#0
 2874 05f6 181C     	 add r0,r3,#0
 2875 05f8 5E49     	 ldr r1,.L74+36
 2876 05fa FFF7FEFF 	 bl __aeabi_fmul
 2877 05fe 031C     	 add r3,r0,#0
 2878 0600 181C     	 add r0,r3,#0
 2879 0602 FFF7FEFF 	 bl __aeabi_f2uiz
 2880 0606 031C     	 mov r3,r0
 2881 0608 9AB2     	 uxth r2,r3
 2882 060a 5D4B     	 ldr r3,.L74+48
 2883 060c 1A80     	 strh r2,[r3]
 879:../main.c     ****     	break;
 2884              	 .loc 1 879 0
 2885 060e 50E1     	 b .L38
 2886              	.L64:
 880:../main.c     ****     case 5:
 881:../main.c     ****     	d1=(float)(((-3)*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2887              	 .loc 1 881 0
 2888 0610 534B     	 ldr r3,.L74+16
 2889 0612 1B68     	 ldr r3,[r3]
 2890 0614 181C     	 add r0,r3,#0
 2891 0616 5349     	 ldr r1,.L74+20
 2892 0618 FFF7FEFF 	 bl __aeabi_fmul
 2893 061c 031C     	 add r3,r0,#0
 2894 061e 1C1C     	 add r4,r3,#0
 2895 0620 4B4B     	 ldr r3,.L74
 2896 0622 1B68     	 ldr r3,[r3]
 2897 0624 181C     	 add r0,r3,#0
 2898 0626 4B49     	 ldr r1,.L74+4
 2899 0628 FFF7FEFF 	 bl __aeabi_fmul
 2900 062c 031C     	 add r3,r0,#0
 2901 062e 201C     	 add r0,r4,#0
 2902 0630 191C     	 add r1,r3,#0
 2903 0632 FFF7FEFF 	 bl __aeabi_fsub
 2904 0636 031C     	 add r3,r0,#0
 2905 0638 181C     	 add r0,r3,#0
 2906 063a 4B49     	 ldr r1,.L74+24
 2907 063c FFF7FEFF 	 bl __aeabi_fdiv
 2908 0640 031C     	 add r3,r0,#0
 2909 0642 1A1C     	 add r2,r3,#0
 2910 0644 454B     	 ldr r3,.L74+12
 2911 0646 1A60     	 str r2,[r3]
 882:../main.c     ****     	d2=(float)((3*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2912              	 .loc 1 882 0
 2913 0648 454B     	 ldr r3,.L74+16
 2914 064a 1B68     	 ldr r3,[r3]
 2915 064c 181C     	 add r0,r3,#0
 2916 064e 4E49     	 ldr r1,.L74+56
 2917 0650 FFF7FEFF 	 bl __aeabi_fmul
 2918 0654 031C     	 add r3,r0,#0
 2919 0656 1C1C     	 add r4,r3,#0
 2920 0658 3D4B     	 ldr r3,.L74
 2921 065a 1B68     	 ldr r3,[r3]
 2922 065c 181C     	 add r0,r3,#0
 2923 065e 3D49     	 ldr r1,.L74+4
 2924 0660 FFF7FEFF 	 bl __aeabi_fmul
 2925 0664 031C     	 add r3,r0,#0
 2926 0666 201C     	 add r0,r4,#0
 2927 0668 191C     	 add r1,r3,#0
 2928 066a FFF7FEFF 	 bl __aeabi_fsub
 2929 066e 031C     	 add r3,r0,#0
 2930 0670 181C     	 add r0,r3,#0
 2931 0672 3D49     	 ldr r1,.L74+24
 2932 0674 FFF7FEFF 	 bl __aeabi_fdiv
 2933 0678 031C     	 add r3,r0,#0
 2934 067a 1A1C     	 add r2,r3,#0
 2935 067c 3B4B     	 ldr r3,.L74+28
 2936 067e 1A60     	 str r2,[r3]
 883:../main.c     ****     	d0=1-d1-d2;
 2937              	 .loc 1 883 0
 2938 0680 364B     	 ldr r3,.L74+12
 2939 0682 1B68     	 ldr r3,[r3]
 2940 0684 FE20     	 mov r0,#254
 2941 0686 8005     	 lsl r0,r0,#22
 2942 0688 191C     	 add r1,r3,#0
 2943 068a FFF7FEFF 	 bl __aeabi_fsub
 2944 068e 031C     	 add r3,r0,#0
 2945 0690 1A1C     	 add r2,r3,#0
 2946 0692 364B     	 ldr r3,.L74+28
 2947 0694 1B68     	 ldr r3,[r3]
 2948 0696 101C     	 add r0,r2,#0
 2949 0698 191C     	 add r1,r3,#0
 2950 069a FFF7FEFF 	 bl __aeabi_fsub
 2951 069e 031C     	 add r3,r0,#0
 2952 06a0 1A1C     	 add r2,r3,#0
 2953 06a2 334B     	 ldr r3,.L74+32
 2954 06a4 1A60     	 str r2,[r3]
 884:../main.c     ****     	da=(uint16_t)(((d0/2)+d1)*10000);
 2955              	 .loc 1 884 0
 2956 06a6 324B     	 ldr r3,.L74+32
 2957 06a8 1B68     	 ldr r3,[r3]
 2958 06aa 181C     	 add r0,r3,#0
 2959 06ac 8021     	 mov r1,#128
 2960 06ae C905     	 lsl r1,r1,#23
 2961 06b0 FFF7FEFF 	 bl __aeabi_fdiv
 2962 06b4 031C     	 add r3,r0,#0
 2963 06b6 1A1C     	 add r2,r3,#0
 2964 06b8 284B     	 ldr r3,.L74+12
 2965 06ba 1B68     	 ldr r3,[r3]
 2966 06bc 101C     	 add r0,r2,#0
 2967 06be 191C     	 add r1,r3,#0
 2968 06c0 FFF7FEFF 	 bl __aeabi_fadd
 2969 06c4 031C     	 add r3,r0,#0
 2970 06c6 181C     	 add r0,r3,#0
 2971 06c8 2A49     	 ldr r1,.L74+36
 2972 06ca FFF7FEFF 	 bl __aeabi_fmul
 2973 06ce 031C     	 add r3,r0,#0
 2974 06d0 181C     	 add r0,r3,#0
 2975 06d2 FFF7FEFF 	 bl __aeabi_f2uiz
 2976 06d6 031C     	 mov r3,r0
 2977 06d8 9AB2     	 uxth r2,r3
 2978 06da 274B     	 ldr r3,.L74+40
 2979 06dc 1A80     	 strh r2,[r3]
 885:../main.c     ****     	db=(uint16_t)(((d0/2)+d1+d2)*10000);
 2980              	 .loc 1 885 0
 2981 06de 244B     	 ldr r3,.L74+32
 2982 06e0 1B68     	 ldr r3,[r3]
 2983 06e2 181C     	 add r0,r3,#0
 2984 06e4 8021     	 mov r1,#128
 2985 06e6 C905     	 lsl r1,r1,#23
 2986 06e8 FFF7FEFF 	 bl __aeabi_fdiv
 2987 06ec 031C     	 add r3,r0,#0
 2988 06ee 1A1C     	 add r2,r3,#0
 2989 06f0 1A4B     	 ldr r3,.L74+12
 2990 06f2 1B68     	 ldr r3,[r3]
 2991 06f4 101C     	 add r0,r2,#0
 2992 06f6 191C     	 add r1,r3,#0
 2993 06f8 FFF7FEFF 	 bl __aeabi_fadd
 2994 06fc 031C     	 add r3,r0,#0
 2995 06fe 1A1C     	 add r2,r3,#0
 2996 0700 1A4B     	 ldr r3,.L74+28
 2997 0702 1B68     	 ldr r3,[r3]
 2998 0704 101C     	 add r0,r2,#0
 2999 0706 191C     	 add r1,r3,#0
 3000 0708 FFF7FEFF 	 bl __aeabi_fadd
 3001 070c 031C     	 add r3,r0,#0
 3002 070e 181C     	 add r0,r3,#0
 3003 0710 1849     	 ldr r1,.L74+36
 3004 0712 FFF7FEFF 	 bl __aeabi_fmul
 3005 0716 031C     	 add r3,r0,#0
 3006 0718 181C     	 add r0,r3,#0
 3007 071a FFF7FEFF 	 bl __aeabi_f2uiz
 3008 071e 031C     	 mov r3,r0
 3009 0720 9AB2     	 uxth r2,r3
 3010 0722 164B     	 ldr r3,.L74+44
 3011 0724 1A80     	 strh r2,[r3]
 886:../main.c     ****     	dc=(uint16_t)((d0/2)*10000);
 3012              	 .loc 1 886 0
 3013 0726 124B     	 ldr r3,.L74+32
 3014 0728 1B68     	 ldr r3,[r3]
 3015 072a 181C     	 add r0,r3,#0
 3016 072c 8021     	 mov r1,#128
 3017 072e C905     	 lsl r1,r1,#23
 3018 0730 FFF7FEFF 	 bl __aeabi_fdiv
 3019 0734 031C     	 add r3,r0,#0
 3020 0736 181C     	 add r0,r3,#0
 3021 0738 0E49     	 ldr r1,.L74+36
 3022 073a FFF7FEFF 	 bl __aeabi_fmul
 3023 073e 031C     	 add r3,r0,#0
 3024 0740 181C     	 add r0,r3,#0
 3025 0742 FFF7FEFF 	 bl __aeabi_f2uiz
 3026 0746 031C     	 mov r3,r0
 3027 0748 9AB2     	 uxth r2,r3
 3028 074a 0D4B     	 ldr r3,.L74+48
 3029 074c 1A80     	 strh r2,[r3]
 887:../main.c     ****     	break;
 3030              	 .loc 1 887 0
 3031 074e B0E0     	 b .L38
 3032              	.L75:
 3033              	 .align 2
 3034              	.L74:
 3035 0750 00000000 	 .word Usbeta
 3036 0754 D0B3DD3F 	 .word 1071494096
 3037 0758 0000C041 	 .word 1103101952
 3038 075c 00000000 	 .word d1
 3039 0760 00000000 	 .word Usalpha
 3040 0764 000040C0 	 .word -1069547520
 3041 0768 00004042 	 .word 1111490560
 3042 076c 00000000 	 .word d2
 3043 0770 00000000 	 .word d0
 3044 0774 00401C46 	 .word 1176256512
 3045 0778 00000000 	 .word da
 3046 077c 00000000 	 .word db
 3047 0780 00000000 	 .word dc
 3048 0784 D0B3DDBF 	 .word -1075989552
 3049 0788 00004040 	 .word 1077936128
 3050              	.L65:
 888:../main.c     ****     case 6:
 889:../main.c     ****         d1=(float)((3*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 3051              	 .loc 1 889 0
 3052 078c 4A4B     	 ldr r3,.L76
 3053 078e 1B68     	 ldr r3,[r3]
 3054 0790 181C     	 add r0,r3,#0
 3055 0792 4A49     	 ldr r1,.L76+4
 3056 0794 FFF7FEFF 	 bl __aeabi_fmul
 3057 0798 031C     	 add r3,r0,#0
 3058 079a 1C1C     	 add r4,r3,#0
 3059 079c 484B     	 ldr r3,.L76+8
 3060 079e 1B68     	 ldr r3,[r3]
 3061 07a0 181C     	 add r0,r3,#0
 3062 07a2 4849     	 ldr r1,.L76+12
 3063 07a4 FFF7FEFF 	 bl __aeabi_fmul
 3064 07a8 031C     	 add r3,r0,#0
 3065 07aa 201C     	 add r0,r4,#0
 3066 07ac 191C     	 add r1,r3,#0
 3067 07ae FFF7FEFF 	 bl __aeabi_fadd
 3068 07b2 031C     	 add r3,r0,#0
 3069 07b4 181C     	 add r0,r3,#0
 3070 07b6 4449     	 ldr r1,.L76+16
 3071 07b8 FFF7FEFF 	 bl __aeabi_fdiv
 3072 07bc 031C     	 add r3,r0,#0
 3073 07be 1A1C     	 add r2,r3,#0
 3074 07c0 424B     	 ldr r3,.L76+20
 3075 07c2 1A60     	 str r2,[r3]
 890:../main.c     ****         d2=(float)((-3)*Usbeta/VDC);\
 3076              	 .loc 1 890 0
 3077 07c4 3E4B     	 ldr r3,.L76+8
 3078 07c6 1B68     	 ldr r3,[r3]
 3079 07c8 181C     	 add r0,r3,#0
 3080 07ca 4149     	 ldr r1,.L76+24
 3081 07cc FFF7FEFF 	 bl __aeabi_fmul
 3082 07d0 031C     	 add r3,r0,#0
 3083 07d2 181C     	 add r0,r3,#0
 3084 07d4 3F49     	 ldr r1,.L76+28
 3085 07d6 FFF7FEFF 	 bl __aeabi_fdiv
 3086 07da 031C     	 add r3,r0,#0
 3087 07dc 1A1C     	 add r2,r3,#0
 3088 07de 3E4B     	 ldr r3,.L76+32
 3089 07e0 1A60     	 str r2,[r3]
 891:../main.c     ****         d0=1-d1-d2;
 3090              	 .loc 1 891 0
 3091 07e2 3A4B     	 ldr r3,.L76+20
 3092 07e4 1B68     	 ldr r3,[r3]
 3093 07e6 FE20     	 mov r0,#254
 3094 07e8 8005     	 lsl r0,r0,#22
 3095 07ea 191C     	 add r1,r3,#0
 3096 07ec FFF7FEFF 	 bl __aeabi_fsub
 3097 07f0 031C     	 add r3,r0,#0
 3098 07f2 1A1C     	 add r2,r3,#0
 3099 07f4 384B     	 ldr r3,.L76+32
 3100 07f6 1B68     	 ldr r3,[r3]
 3101 07f8 101C     	 add r0,r2,#0
 3102 07fa 191C     	 add r1,r3,#0
 3103 07fc FFF7FEFF 	 bl __aeabi_fsub
 3104 0800 031C     	 add r3,r0,#0
 3105 0802 1A1C     	 add r2,r3,#0
 3106 0804 354B     	 ldr r3,.L76+36
 3107 0806 1A60     	 str r2,[r3]
 892:../main.c     ****         da=(uint16_t)((d0/2)*10000);
 3108              	 .loc 1 892 0
 3109 0808 344B     	 ldr r3,.L76+36
 3110 080a 1B68     	 ldr r3,[r3]
 3111 080c 181C     	 add r0,r3,#0
 3112 080e 8021     	 mov r1,#128
 3113 0810 C905     	 lsl r1,r1,#23
 3114 0812 FFF7FEFF 	 bl __aeabi_fdiv
 3115 0816 031C     	 add r3,r0,#0
 3116 0818 181C     	 add r0,r3,#0
 3117 081a 3149     	 ldr r1,.L76+40
 3118 081c FFF7FEFF 	 bl __aeabi_fmul
 3119 0820 031C     	 add r3,r0,#0
 3120 0822 181C     	 add r0,r3,#0
 3121 0824 FFF7FEFF 	 bl __aeabi_f2uiz
 3122 0828 031C     	 mov r3,r0
 3123 082a 9AB2     	 uxth r2,r3
 3124 082c 2D4B     	 ldr r3,.L76+44
 3125 082e 1A80     	 strh r2,[r3]
 893:../main.c     ****         db=(uint16_t)(((d0/2)+d1+d2)*10000);
 3126              	 .loc 1 893 0
 3127 0830 2A4B     	 ldr r3,.L76+36
 3128 0832 1B68     	 ldr r3,[r3]
 3129 0834 181C     	 add r0,r3,#0
 3130 0836 8021     	 mov r1,#128
 3131 0838 C905     	 lsl r1,r1,#23
 3132 083a FFF7FEFF 	 bl __aeabi_fdiv
 3133 083e 031C     	 add r3,r0,#0
 3134 0840 1A1C     	 add r2,r3,#0
 3135 0842 224B     	 ldr r3,.L76+20
 3136 0844 1B68     	 ldr r3,[r3]
 3137 0846 101C     	 add r0,r2,#0
 3138 0848 191C     	 add r1,r3,#0
 3139 084a FFF7FEFF 	 bl __aeabi_fadd
 3140 084e 031C     	 add r3,r0,#0
 3141 0850 1A1C     	 add r2,r3,#0
 3142 0852 214B     	 ldr r3,.L76+32
 3143 0854 1B68     	 ldr r3,[r3]
 3144 0856 101C     	 add r0,r2,#0
 3145 0858 191C     	 add r1,r3,#0
 3146 085a FFF7FEFF 	 bl __aeabi_fadd
 3147 085e 031C     	 add r3,r0,#0
 3148 0860 181C     	 add r0,r3,#0
 3149 0862 1F49     	 ldr r1,.L76+40
 3150 0864 FFF7FEFF 	 bl __aeabi_fmul
 3151 0868 031C     	 add r3,r0,#0
 3152 086a 181C     	 add r0,r3,#0
 3153 086c FFF7FEFF 	 bl __aeabi_f2uiz
 3154 0870 031C     	 mov r3,r0
 3155 0872 9AB2     	 uxth r2,r3
 3156 0874 1C4B     	 ldr r3,.L76+48
 3157 0876 1A80     	 strh r2,[r3]
 894:../main.c     ****         dc=(uint16_t)(((d0/2)+d1)*10000);
 3158              	 .loc 1 894 0
 3159 0878 184B     	 ldr r3,.L76+36
 3160 087a 1B68     	 ldr r3,[r3]
 3161 087c 181C     	 add r0,r3,#0
 3162 087e 8021     	 mov r1,#128
 3163 0880 C905     	 lsl r1,r1,#23
 3164 0882 FFF7FEFF 	 bl __aeabi_fdiv
 3165 0886 031C     	 add r3,r0,#0
 3166 0888 1A1C     	 add r2,r3,#0
 3167 088a 104B     	 ldr r3,.L76+20
 3168 088c 1B68     	 ldr r3,[r3]
 3169 088e 101C     	 add r0,r2,#0
 3170 0890 191C     	 add r1,r3,#0
 3171 0892 FFF7FEFF 	 bl __aeabi_fadd
 3172 0896 031C     	 add r3,r0,#0
 3173 0898 181C     	 add r0,r3,#0
 3174 089a 1149     	 ldr r1,.L76+40
 3175 089c FFF7FEFF 	 bl __aeabi_fmul
 3176 08a0 031C     	 add r3,r0,#0
 3177 08a2 181C     	 add r0,r3,#0
 3178 08a4 FFF7FEFF 	 bl __aeabi_f2uiz
 3179 08a8 031C     	 mov r3,r0
 3180 08aa 9AB2     	 uxth r2,r3
 3181 08ac 0F4B     	 ldr r3,.L76+52
 3182 08ae 1A80     	 strh r2,[r3]
 895:../main.c     ****         break;
 3183              	 .loc 1 895 0
 3184 08b0 C046     	 mov r8,r8
 3185              	.L38:
 896:../main.c     ****     }
 897:../main.c     **** }
 3186              	 .loc 1 897 0
 3187 08b2 BD46     	 mov sp,r7
 3188 08b4 05B0     	 add sp,sp,#20
 3189              	 
 3190 08b6 90BD     	 pop {r4,r7,pc}
 3191              	.L77:
 3192              	 .align 2
 3193              	.L76:
 3194 08b8 00000000 	 .word Usalpha
 3195 08bc 00004040 	 .word 1077936128
 3196 08c0 00000000 	 .word Usbeta
 3197 08c4 D0B3DD3F 	 .word 1071494096
 3198 08c8 00004042 	 .word 1111490560
 3199 08cc 00000000 	 .word d1
 3200 08d0 000040C0 	 .word -1069547520
 3201 08d4 0000C041 	 .word 1103101952
 3202 08d8 00000000 	 .word d2
 3203 08dc 00000000 	 .word d0
 3204 08e0 00401C46 	 .word 1176256512
 3205 08e4 00000000 	 .word da
 3206 08e8 00000000 	 .word db
 3207 08ec 00000000 	 .word dc
 3208              	 .cfi_endproc
 3209              	.LFE474:
 3211              	 .global __aeabi_f2iz
 3212              	 .section .text.SinCosCheck,"ax",%progbits
 3213              	 .align 2
 3214              	 .global SinCosCheck
 3215              	 .code 16
 3216              	 .thumb_func
 3218              	SinCosCheck:
 3219              	.LFB475:
 898:../main.c     **** /*
 899:../main.c     ****  Function:Tinh toan sine, cosine cua goc dong co quay, check xem goc dong co quay >2pi dua ve trong
 900:../main.c     ****  Input:Theta
 901:../main.c     ****  Output:SineTheta, CosineTheta
 902:../main.c     ****  */
 903:../main.c     **** void SinCosCheck(void){
 3220              	 .loc 1 903 0
 3221              	 .cfi_startproc
 3222 0000 90B5     	 push {r4,r7,lr}
 3223              	.LCFI26:
 3224              	 .cfi_def_cfa_offset 12
 3225              	 .cfi_offset 4,-12
 3226              	 .cfi_offset 7,-8
 3227              	 .cfi_offset 14,-4
 3228 0002 87B0     	 sub sp,sp,#28
 3229              	.LCFI27:
 3230              	 .cfi_def_cfa_offset 40
 3231 0004 00AF     	 add r7,sp,#0
 3232              	.LCFI28:
 3233              	 .cfi_def_cfa_register 7
 904:../main.c     ****         int16_t y0_Index;
 905:../main.c     ****         int16_t y0_IndexNext;
 906:../main.c     ****         float x0, y0, y1, temp;
 907:../main.c     **** 	    y0_Index = (int16_t)((float)(Theta * (float)((float)256 / (2.0f*PI))));
 3234              	 .loc 1 907 0
 3235 0006 474B     	 ldr r3,.L81
 3236 0008 1B68     	 ldr r3,[r3]
 3237 000a 181C     	 add r0,r3,#0
 3238 000c 4649     	 ldr r1,.L81+4
 3239 000e FFF7FEFF 	 bl __aeabi_fmul
 3240 0012 031C     	 add r3,r0,#0
 3241 0014 1622     	 mov r2,#22
 3242 0016 BC18     	 add r4,r7,r2
 3243 0018 181C     	 add r0,r3,#0
 3244 001a FFF7FEFF 	 bl __aeabi_f2iz
 3245 001e 031C     	 mov r3,r0
 3246 0020 2380     	 strh r3,[r4]
 908:../main.c     **** 	    y0_IndexNext = y0_Index + 1;
 3247              	 .loc 1 908 0
 3248 0022 1623     	 mov r3,#22
 3249 0024 FB18     	 add r3,r7,r3
 3250 0026 1B88     	 ldrh r3,[r3]
 3251 0028 0133     	 add r3,r3,#1
 3252 002a 9AB2     	 uxth r2,r3
 3253 002c 1423     	 mov r3,#20
 3254 002e FB18     	 add r3,r7,r3
 3255 0030 1A80     	 strh r2,[r3]
 909:../main.c     **** 
 910:../main.c     **** 	    if(255 <= y0_Index)
 3256              	 .loc 1 910 0
 3257 0032 1623     	 mov r3,#22
 3258 0034 FB18     	 add r3,r7,r3
 3259 0036 0022     	 mov r2,#0
 3260 0038 9B5E     	 ldrsh r3,[r3,r2]
 3261 003a FE2B     	 cmp r3,#254
 3262 003c 08DD     	 ble .L79
 911:../main.c     **** 	    {
 912:../main.c     **** 	        y0_Index = 255;
 3263              	 .loc 1 912 0
 3264 003e 1623     	 mov r3,#22
 3265 0040 FB18     	 add r3,r7,r3
 3266 0042 FF22     	 mov r2,#255
 3267 0044 1A80     	 strh r2,[r3]
 913:../main.c     **** 	        y0_IndexNext = 0;
 3268              	 .loc 1 913 0
 3269 0046 1423     	 mov r3,#20
 3270 0048 FB18     	 add r3,r7,r3
 3271 004a 0022     	 mov r2,#0
 3272 004c 1A80     	 strh r2,[r3]
 3273 004e 07E0     	 b .L80
 3274              	.L79:
 914:../main.c     **** 	    }
 915:../main.c     **** 	    else
 916:../main.c     **** 	    {
 917:../main.c     **** 	        y0_Index = 0;
 3275              	 .loc 1 917 0
 3276 0050 1623     	 mov r3,#22
 3277 0052 FB18     	 add r3,r7,r3
 3278 0054 0022     	 mov r2,#0
 3279 0056 1A80     	 strh r2,[r3]
 918:../main.c     **** 	        y0_IndexNext = 1;
 3280              	 .loc 1 918 0
 3281 0058 1423     	 mov r3,#20
 3282 005a FB18     	 add r3,r7,r3
 3283 005c 0122     	 mov r2,#1
 3284 005e 1A80     	 strh r2,[r3]
 3285              	.L80:
 919:../main.c     **** 	    }
 920:../main.c     **** 	    x0 = ((float)y0_Index * (float)((2.0f*PI) / (float)256));
 3286              	 .loc 1 920 0
 3287 0060 1623     	 mov r3,#22
 3288 0062 FB18     	 add r3,r7,r3
 3289 0064 0022     	 mov r2,#0
 3290 0066 9B5E     	 ldrsh r3,[r3,r2]
 3291 0068 181C     	 mov r0,r3
 3292 006a FFF7FEFF 	 bl __aeabi_i2f
 3293 006e 031C     	 add r3,r0,#0
 3294 0070 181C     	 add r0,r3,#0
 3295 0072 2E49     	 ldr r1,.L81+8
 3296 0074 FFF7FEFF 	 bl __aeabi_fmul
 3297 0078 031C     	 add r3,r0,#0
 3298 007a 3B61     	 str r3,[r7,#16]
 921:../main.c     **** 		temp = ((Theta - x0) * (float)((float)256 / (2.0f*PI)));
 3299              	 .loc 1 921 0
 3300 007c 294B     	 ldr r3,.L81
 3301 007e 1B68     	 ldr r3,[r3]
 3302 0080 181C     	 add r0,r3,#0
 3303 0082 3969     	 ldr r1,[r7,#16]
 3304 0084 FFF7FEFF 	 bl __aeabi_fsub
 3305 0088 031C     	 add r3,r0,#0
 3306 008a 181C     	 add r0,r3,#0
 3307 008c 2649     	 ldr r1,.L81+4
 3308 008e FFF7FEFF 	 bl __aeabi_fmul
 3309 0092 031C     	 add r3,r0,#0
 3310 0094 FB60     	 str r3,[r7,#12]
 922:../main.c     **** 
 923:../main.c     **** 		// Find Sine
 924:../main.c     **** 	    y0 = SineTable[y0_Index];
 3311              	 .loc 1 924 0
 3312 0096 1623     	 mov r3,#22
 3313 0098 FB18     	 add r3,r7,r3
 3314 009a 0022     	 mov r2,#0
 3315 009c 9A5E     	 ldrsh r2,[r3,r2]
 3316 009e 244B     	 ldr r3,.L81+12
 3317 00a0 9200     	 lsl r2,r2,#2
 3318 00a2 D358     	 ldr r3,[r2,r3]
 3319 00a4 BB60     	 str r3,[r7,#8]
 925:../main.c     **** 	    y1 = SineTable[y0_IndexNext];
 3320              	 .loc 1 925 0
 3321 00a6 1423     	 mov r3,#20
 3322 00a8 FB18     	 add r3,r7,r3
 3323 00aa 0022     	 mov r2,#0
 3324 00ac 9A5E     	 ldrsh r2,[r3,r2]
 3325 00ae 204B     	 ldr r3,.L81+12
 3326 00b0 9200     	 lsl r2,r2,#2
 3327 00b2 D358     	 ldr r3,[r2,r3]
 3328 00b4 7B60     	 str r3,[r7,#4]
 926:../main.c     **** 	    SineTheta = y0 + ((y1 - y0)*temp);
 3329              	 .loc 1 926 0
 3330 00b6 7868     	 ldr r0,[r7,#4]
 3331 00b8 B968     	 ldr r1,[r7,#8]
 3332 00ba FFF7FEFF 	 bl __aeabi_fsub
 3333 00be 031C     	 add r3,r0,#0
 3334 00c0 181C     	 add r0,r3,#0
 3335 00c2 F968     	 ldr r1,[r7,#12]
 3336 00c4 FFF7FEFF 	 bl __aeabi_fmul
 3337 00c8 031C     	 add r3,r0,#0
 3338 00ca 181C     	 add r0,r3,#0
 3339 00cc B968     	 ldr r1,[r7,#8]
 3340 00ce FFF7FEFF 	 bl __aeabi_fadd
 3341 00d2 031C     	 add r3,r0,#0
 3342 00d4 1A1C     	 add r2,r3,#0
 3343 00d6 174B     	 ldr r3,.L81+16
 3344 00d8 1A60     	 str r2,[r3]
 927:../main.c     **** 
 928:../main.c     **** 	    // Find Cosine
 929:../main.c     **** 	    y0 = CosineTable[y0_Index];
 3345              	 .loc 1 929 0
 3346 00da 1623     	 mov r3,#22
 3347 00dc FB18     	 add r3,r7,r3
 3348 00de 0022     	 mov r2,#0
 3349 00e0 9A5E     	 ldrsh r2,[r3,r2]
 3350 00e2 154B     	 ldr r3,.L81+20
 3351 00e4 9200     	 lsl r2,r2,#2
 3352 00e6 D358     	 ldr r3,[r2,r3]
 3353 00e8 BB60     	 str r3,[r7,#8]
 930:../main.c     **** 	    y1 = CosineTable[y0_IndexNext];
 3354              	 .loc 1 930 0
 3355 00ea 1423     	 mov r3,#20
 3356 00ec FB18     	 add r3,r7,r3
 3357 00ee 0022     	 mov r2,#0
 3358 00f0 9A5E     	 ldrsh r2,[r3,r2]
 3359 00f2 114B     	 ldr r3,.L81+20
 3360 00f4 9200     	 lsl r2,r2,#2
 3361 00f6 D358     	 ldr r3,[r2,r3]
 3362 00f8 7B60     	 str r3,[r7,#4]
 931:../main.c     **** 	    CosineTheta = y0 + ((y1 - y0)*temp);
 3363              	 .loc 1 931 0
 3364 00fa 7868     	 ldr r0,[r7,#4]
 3365 00fc B968     	 ldr r1,[r7,#8]
 3366 00fe FFF7FEFF 	 bl __aeabi_fsub
 3367 0102 031C     	 add r3,r0,#0
 3368 0104 181C     	 add r0,r3,#0
 3369 0106 F968     	 ldr r1,[r7,#12]
 3370 0108 FFF7FEFF 	 bl __aeabi_fmul
 3371 010c 031C     	 add r3,r0,#0
 3372 010e 181C     	 add r0,r3,#0
 3373 0110 B968     	 ldr r1,[r7,#8]
 3374 0112 FFF7FEFF 	 bl __aeabi_fadd
 3375 0116 031C     	 add r3,r0,#0
 3376 0118 1A1C     	 add r2,r3,#0
 3377 011a 084B     	 ldr r3,.L81+24
 3378 011c 1A60     	 str r2,[r3]
 932:../main.c     **** }
 3379              	 .loc 1 932 0
 3380 011e BD46     	 mov sp,r7
 3381 0120 07B0     	 add sp,sp,#28
 3382              	 
 3383 0122 90BD     	 pop {r4,r7,pc}
 3384              	.L82:
 3385              	 .align 2
 3386              	.L81:
 3387 0124 00000000 	 .word Theta
 3388 0128 86F92242 	 .word 1109588358
 3389 012c D80FC93C 	 .word 1019809752
 3390 0130 00000000 	 .word SineTable
 3391 0134 00000000 	 .word SineTheta
 3392 0138 00000000 	 .word CosineTable
 3393 013c 00000000 	 .word CosineTheta
 3394              	 .cfi_endproc
 3395              	.LFE475:
 3397              	 .section .text.LoopcontrolTask,"ax",%progbits
 3398              	 .align 2
 3399              	 .global LoopcontrolTask
 3400              	 .code 16
 3401              	 .thumb_func
 3403              	LoopcontrolTask:
 3404              	.LFB476:
 933:../main.c     **** /*
 934:../main.c     ****  Function:Reset mot so bien khi thay doi tu openloop sang closeloop va khi bat dau vao openloop. Th
 935:../main.c     ****  dung cho thuat toan SVM ( openloop va closeloop).
 936:../main.c     ****  */
 937:../main.c     **** void LoopcontrolTask( void )
 938:../main.c     **** {
 3405              	 .loc 1 938 0
 3406              	 .cfi_startproc
 3407 0000 80B5     	 push {r7,lr}
 3408              	.LCFI29:
 3409              	 .cfi_def_cfa_offset 8
 3410              	 .cfi_offset 7,-8
 3411              	 .cfi_offset 14,-4
 3412 0002 00AF     	 add r7,sp,#0
 3413              	.LCFI30:
 3414              	 .cfi_def_cfa_register 7
 939:../main.c     ****     if( OpenLoop==1 )
 3415              	 .loc 1 939 0
 3416 0004 184B     	 ldr r3,.L88
 3417 0006 1B88     	 ldrh r3,[r3]
 3418 0008 012B     	 cmp r3,#1
 3419 000a 17D1     	 bne .L84
 940:../main.c     ****     {
 941:../main.c     ****         if( ChangeMode ==1)
 3420              	 .loc 1 941 0
 3421 000c 174B     	 ldr r3,.L88+4
 3422 000e 1B88     	 ldrh r3,[r3]
 3423 0010 012B     	 cmp r3,#1
 3424 0012 0BD1     	 bne .L85
 942:../main.c     ****         {
 943:../main.c     ****             ChangeMode = 0;
 3425              	 .loc 1 943 0
 3426 0014 154B     	 ldr r3,.L88+4
 3427 0016 0022     	 mov r2,#0
 3428 0018 1A80     	 strh r2,[r3]
 944:../main.c     ****             IsqRef = 0;
 3429              	 .loc 1 944 0
 3430 001a 154B     	 ldr r3,.L88+8
 3431 001c 0022     	 mov r2,#0
 3432 001e 1A60     	 str r2,[r3]
 945:../main.c     ****             Startup_Lock_Count = 0;
 3433              	 .loc 1 945 0
 3434 0020 144B     	 ldr r3,.L88+12
 3435 0022 0022     	 mov r2,#0
 3436 0024 1A80     	 strh r2,[r3]
 946:../main.c     ****             Startup_Ramp_Angle_Rads_Per_Sec = 0;
 3437              	 .loc 1 946 0
 3438 0026 144B     	 ldr r3,.L88+16
 3439 0028 0022     	 mov r2,#0
 3440 002a 1A60     	 str r2,[r3]
 3441              	.L85:
 947:../main.c     ****         }
 948:../main.c     ****         IsqRef = IsqRef_OPENLOOP;
 3442              	 .loc 1 948 0
 3443 002c 104B     	 ldr r3,.L88+8
 3444 002e 134A     	 ldr r2,.L88+20
 3445 0030 1A60     	 str r2,[r3]
 949:../main.c     ****         UsqCal();
 3446              	 .loc 1 949 0
 3447 0032 FFF7FEFF 	 bl UsqCal
 950:../main.c     ****         UsdCal();
 3448              	 .loc 1 950 0
 3449 0036 FFF7FEFF 	 bl UsdCal
 3450 003a 13E0     	 b .L83
 3451              	.L84:
 951:../main.c     ****     }
 952:../main.c     ****     else
 953:../main.c     ****     {
 954:../main.c     ****         if( ChangeMode==1 )
 3452              	 .loc 1 954 0
 3453 003c 0B4B     	 ldr r3,.L88+4
 3454 003e 1B88     	 ldrh r3,[r3]
 3455 0040 012B     	 cmp r3,#1
 3456 0042 05D1     	 bne .L87
 955:../main.c     ****         {
 956:../main.c     ****             ChangeMode = 0;
 3457              	 .loc 1 956 0
 3458 0044 094B     	 ldr r3,.L88+4
 3459 0046 0022     	 mov r2,#0
 3460 0048 1A80     	 strh r2,[r3]
 957:../main.c     ****             SpeedRef = END_SPEED_RADS_PER_SEC_ELEC;
 3461              	 .loc 1 957 0
 3462 004a 0D4B     	 ldr r3,.L88+24
 3463 004c 0D4A     	 ldr r2,.L88+28
 3464 004e 1A60     	 str r2,[r3]
 3465              	.L87:
 958:../main.c     ****         }
 959:../main.c     ****         SpeedMea = SpeedMea1;
 3466              	 .loc 1 959 0
 3467 0050 0D4B     	 ldr r3,.L88+32
 3468 0052 1A68     	 ldr r2,[r3]
 3469 0054 0D4B     	 ldr r3,.L88+36
 3470 0056 1A60     	 str r2,[r3]
 960:../main.c     ****         IsqRefCal();
 3471              	 .loc 1 960 0
 3472 0058 FFF7FEFF 	 bl IsqRefCal
 961:../main.c     ****         UsqCal();
 3473              	 .loc 1 961 0
 3474 005c FFF7FEFF 	 bl UsqCal
 962:../main.c     ****         UsdCal();
 3475              	 .loc 1 962 0
 3476 0060 FFF7FEFF 	 bl UsdCal
 3477              	.L83:
 963:../main.c     ****     }
 964:../main.c     **** }
 3478              	 .loc 1 964 0
 3479 0064 BD46     	 mov sp,r7
 3480              	 
 3481 0066 80BD     	 pop {r7,pc}
 3482              	.L89:
 3483              	 .align 2
 3484              	.L88:
 3485 0068 00000000 	 .word OpenLoop
 3486 006c 00000000 	 .word ChangeMode
 3487 0070 00000000 	 .word IsqRef
 3488 0074 00000000 	 .word Startup_Lock_Count
 3489 0078 00000000 	 .word Startup_Ramp_Angle_Rads_Per_Sec
 3490 007c 9A99993E 	 .word 1050253722
 3491 0080 00000000 	 .word SpeedRef
 3492 0084 84705142 	 .word 1112633476
 3493 0088 00000000 	 .word SpeedMea1
 3494 008c 00000000 	 .word SpeedMea
 3495              	 .cfi_endproc
 3496              	.LFE476:
 3498              	 .global __aeabi_fcmplt
 3499              	 .global __aeabi_fcmpgt
 3500              	 .section .text.WrapFrom0To2Pi,"ax",%progbits
 3501              	 .align 2
 3502              	 .global WrapFrom0To2Pi
 3503              	 .code 16
 3504              	 .thumb_func
 3506              	WrapFrom0To2Pi:
 3507              	.LFB477:
 965:../main.c     **** /*
 966:../main.c     ****  Function: Dua goc dong co ve gia tri nam trong dai 0 den 2pi
 967:../main.c     ****  */
 968:../main.c     **** float WrapFrom0To2Pi(float raw){
 3508              	 .loc 1 968 0
 3509              	 .cfi_startproc
 3510 0000 80B5     	 push {r7,lr}
 3511              	.LCFI31:
 3512              	 .cfi_def_cfa_offset 8
 3513              	 .cfi_offset 7,-8
 3514              	 .cfi_offset 14,-4
 3515 0002 84B0     	 sub sp,sp,#16
 3516              	.LCFI32:
 3517              	 .cfi_def_cfa_offset 24
 3518 0004 00AF     	 add r7,sp,#0
 3519              	.LCFI33:
 3520              	 .cfi_def_cfa_register 7
 3521 0006 7860     	 str r0,[r7,#4]
 969:../main.c     ****     float tmp;
 970:../main.c     **** 
 971:../main.c     ****     if(0.0 > raw)
 3522              	 .loc 1 971 0
 3523 0008 7868     	 ldr r0,[r7,#4]
 3524 000a 0021     	 mov r1,#0
 3525 000c FFF7FEFF 	 bl __aeabi_fcmplt
 3526 0010 031E     	 sub r3,r0,#0
 3527 0012 06D0     	 beq .L99
 972:../main.c     ****     {
 973:../main.c     ****         tmp = raw + (float)(2.0f*(float)M_PI);
 3528              	 .loc 1 973 0
 3529 0014 7868     	 ldr r0,[r7,#4]
 3530 0016 0D49     	 ldr r1,.L101
 3531 0018 FFF7FEFF 	 bl __aeabi_fadd
 3532 001c 031C     	 add r3,r0,#0
 3533 001e FB60     	 str r3,[r7,#12]
 3534 0020 0EE0     	 b .L93
 3535              	.L99:
 974:../main.c     ****     }
 975:../main.c     ****     else if((float)(2.0f*(float)M_PI) < raw)
 3536              	 .loc 1 975 0
 3537 0022 7868     	 ldr r0,[r7,#4]
 3538 0024 0949     	 ldr r1,.L101
 3539 0026 FFF7FEFF 	 bl __aeabi_fcmpgt
 3540 002a 031E     	 sub r3,r0,#0
 3541 002c 06D0     	 beq .L100
 976:../main.c     ****     {
 977:../main.c     ****         tmp = raw - (float)(2.0f*(float)M_PI);
 3542              	 .loc 1 977 0
 3543 002e 7868     	 ldr r0,[r7,#4]
 3544 0030 0649     	 ldr r1,.L101
 3545 0032 FFF7FEFF 	 bl __aeabi_fsub
 3546 0036 031C     	 add r3,r0,#0
 3547 0038 FB60     	 str r3,[r7,#12]
 3548 003a 01E0     	 b .L93
 3549              	.L100:
 978:../main.c     ****     }
 979:../main.c     ****     else
 980:../main.c     ****     {
 981:../main.c     ****         tmp = raw;
 3550              	 .loc 1 981 0
 3551 003c 7B68     	 ldr r3,[r7,#4]
 3552 003e FB60     	 str r3,[r7,#12]
 3553              	.L93:
 982:../main.c     ****     }
 983:../main.c     **** 
 984:../main.c     ****     return tmp;
 3554              	 .loc 1 984 0
 3555 0040 FB68     	 ldr r3,[r7,#12]
 985:../main.c     **** }
 3556              	 .loc 1 985 0
 3557 0042 181C     	 add r0,r3,#0
 3558 0044 BD46     	 mov sp,r7
 3559 0046 04B0     	 add sp,sp,#16
 3560              	 
 3561 0048 80BD     	 pop {r7,pc}
 3562              	.L102:
 3563 004a C046     	 .align 2
 3564              	.L101:
 3565 004c DB0FC940 	 .word 1086918619
 3566              	 .cfi_endproc
 3567              	.LFE477:
 3569              	 .section .text.CloseLoopTHcal,"ax",%progbits
 3570              	 .align 2
 3571              	 .global CloseLoopTHcal
 3572              	 .code 16
 3573              	 .thumb_func
 3575              	CloseLoopTHcal:
 3576              	.LFB478:
 986:../main.c     **** /*
 987:../main.c     ****  Function:Khi bat dau vao trang thai closeloop can giam do chenh lech giua goc openloop va goc uoc 
 988:../main.c     ****  THI: ThresholdInput, THO:ThresholdOutput (Giai thich: THI ung voi theta1=w.t1, THO ung voi theta2=
 989:../main.c     ****  positionTHI va positionTHO duoc tinh toan tu ham positionCal()
 990:../main.c     ****  Input:Theta, positionTHI, positionTHO
 991:../main.c     ****  Output:closeloopTHI, closeloopTHO
 992:../main.c     ****  */
 993:../main.c     **** void CloseLoopTHcal(void){
 3577              	 .loc 1 993 0
 3578              	 .cfi_startproc
 3579 0000 80B5     	 push {r7,lr}
 3580              	.LCFI34:
 3581              	 .cfi_def_cfa_offset 8
 3582              	 .cfi_offset 7,-8
 3583              	 .cfi_offset 14,-4
 3584 0002 82B0     	 sub sp,sp,#8
 3585              	.LCFI35:
 3586              	 .cfi_def_cfa_offset 16
 3587 0004 00AF     	 add r7,sp,#0
 3588              	.LCFI36:
 3589              	 .cfi_def_cfa_register 7
 994:../main.c     ****     float tmp1;
 995:../main.c     **** 
 996:../main.c     ****     tmp1 = Theta;
 3590              	 .loc 1 996 0
 3591 0006 4B4B     	 ldr r3,.L118
 3592 0008 1B68     	 ldr r3,[r3]
 3593 000a 7B60     	 str r3,[r7,#4]
 997:../main.c     **** 
 998:../main.c     ****     switch(closeLoopTHstate)
 3594              	 .loc 1 998 0
 3595 000c 4A4B     	 ldr r3,.L118+4
 3596 000e 1B88     	 ldrh r3,[r3]
 3597 0010 012B     	 cmp r3,#1
 3598 0012 23D0     	 beq .L105
 3599 0014 022B     	 cmp r3,#2
 3600 0016 00D1     	 bne .LCB2312
 3601 0018 7FE0     	 b .L106
 3602              	.LCB2312:
 3603 001a 002B     	 cmp r3,#0
 3604 001c 00D0     	 beq .L107
 999:../main.c     ****     {
1000:../main.c     ****         case 0:
1001:../main.c     ****             deviationTH = tmp1 - positionTH;
1002:../main.c     ****             decayRateTH = deviationTH * RL_1D_2SCNT;
1003:../main.c     ****             closeLoopTHI = tmp1;
1004:../main.c     ****             closeLoopTHO = tmp1;
1005:../main.c     ****             closeLoopTHstate= 1;
1006:../main.c     ****             break;
1007:../main.c     ****         case 1:
1008:../main.c     ****             if(((0<decayRateTH) && (deviationTH>decayRateTH)) ||
1009:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
1010:../main.c     ****             {
1011:../main.c     ****                 deviationTH = deviationTH - decayRateTH;
1012:../main.c     ****                 tmp1 = deviationTH + positionTHI;
1013:../main.c     ****                 closeLoopTHI = WrapFrom0To2Pi(tmp1);
1014:../main.c     ****                 tmp1 = deviationTH + positionTHO;
1015:../main.c     ****                 closeLoopTHO = WrapFrom0To2Pi(tmp1);
1016:../main.c     ****             }
1017:../main.c     ****             else
1018:../main.c     ****             {
1019:../main.c     ****                 closeLoopTHI =  positionTHI;
1020:../main.c     ****                 closeLoopTHO =  positionTHO;
1021:../main.c     ****                 closeLoopTHstate = 2;
1022:../main.c     ****             }
1023:../main.c     ****             break;
1024:../main.c     ****         case 2u:
1025:../main.c     ****             closeLoopTHI =  positionTHI;
1026:../main.c     ****             closeLoopTHO =  positionTHO;
1027:../main.c     ****             break;
1028:../main.c     ****         default:
1029:../main.c     ****             break;
 3605              	 .loc 1 1029 0
 3606 001e 85E0     	 b .L103
 3607              	.L107:
1001:../main.c     ****             decayRateTH = deviationTH * RL_1D_2SCNT;
 3608              	 .loc 1 1001 0
 3609 0020 464B     	 ldr r3,.L118+8
 3610 0022 1B68     	 ldr r3,[r3]
 3611 0024 7868     	 ldr r0,[r7,#4]
 3612 0026 191C     	 add r1,r3,#0
 3613 0028 FFF7FEFF 	 bl __aeabi_fsub
 3614 002c 031C     	 add r3,r0,#0
 3615 002e 1A1C     	 add r2,r3,#0
 3616 0030 434B     	 ldr r3,.L118+12
 3617 0032 1A60     	 str r2,[r3]
1002:../main.c     ****             closeLoopTHI = tmp1;
 3618              	 .loc 1 1002 0
 3619 0034 424B     	 ldr r3,.L118+12
 3620 0036 1B68     	 ldr r3,[r3]
 3621 0038 181C     	 add r0,r3,#0
 3622 003a 4249     	 ldr r1,.L118+16
 3623 003c FFF7FEFF 	 bl __aeabi_fmul
 3624 0040 031C     	 add r3,r0,#0
 3625 0042 1A1C     	 add r2,r3,#0
 3626 0044 404B     	 ldr r3,.L118+20
 3627 0046 1A60     	 str r2,[r3]
1003:../main.c     ****             closeLoopTHO = tmp1;
 3628              	 .loc 1 1003 0
 3629 0048 404B     	 ldr r3,.L118+24
 3630 004a 7A68     	 ldr r2,[r7,#4]
 3631 004c 1A60     	 str r2,[r3]
1004:../main.c     ****             closeLoopTHstate= 1;
 3632              	 .loc 1 1004 0
 3633 004e 404B     	 ldr r3,.L118+28
 3634 0050 7A68     	 ldr r2,[r7,#4]
 3635 0052 1A60     	 str r2,[r3]
1005:../main.c     ****             break;
 3636              	 .loc 1 1005 0
 3637 0054 384B     	 ldr r3,.L118+4
 3638 0056 0122     	 mov r2,#1
 3639 0058 1A80     	 strh r2,[r3]
1006:../main.c     ****         case 1:
 3640              	 .loc 1 1006 0
 3641 005a 67E0     	 b .L103
 3642              	.L105:
1008:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
 3643              	 .loc 1 1008 0
 3644 005c 3A4B     	 ldr r3,.L118+20
 3645 005e 1B68     	 ldr r3,[r3]
 3646 0060 181C     	 add r0,r3,#0
 3647 0062 0021     	 mov r1,#0
 3648 0064 FFF7FEFF 	 bl __aeabi_fcmpgt
 3649 0068 031E     	 sub r3,r0,#0
 3650 006a 09D0     	 beq .L109
1008:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
 3651              	 .loc 1 1008 0 is_stmt 0 discriminator 1
 3652 006c 344B     	 ldr r3,.L118+12
 3653 006e 1A68     	 ldr r2,[r3]
 3654 0070 354B     	 ldr r3,.L118+20
 3655 0072 1B68     	 ldr r3,[r3]
 3656 0074 101C     	 add r0,r2,#0
 3657 0076 191C     	 add r1,r3,#0
 3658 0078 FFF7FEFF 	 bl __aeabi_fcmpgt
 3659 007c 031E     	 sub r3,r0,#0
 3660 007e 11D1     	 bne .L111
 3661              	.L109:
1009:../main.c     ****             {
 3662              	 .loc 1 1009 0 is_stmt 1 discriminator 3
 3663 0080 314B     	 ldr r3,.L118+20
 3664 0082 1B68     	 ldr r3,[r3]
1008:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
 3665              	 .loc 1 1008 0 discriminator 3
 3666 0084 181C     	 add r0,r3,#0
 3667 0086 0021     	 mov r1,#0
 3668 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 3669 008c 031E     	 sub r3,r0,#0
 3670 008e 38D0     	 beq .L112
1009:../main.c     ****             {
 3671              	 .loc 1 1009 0
 3672 0090 2B4B     	 ldr r3,.L118+12
 3673 0092 1A68     	 ldr r2,[r3]
 3674 0094 2C4B     	 ldr r3,.L118+20
 3675 0096 1B68     	 ldr r3,[r3]
 3676 0098 101C     	 add r0,r2,#0
 3677 009a 191C     	 add r1,r3,#0
 3678 009c FFF7FEFF 	 bl __aeabi_fcmplt
 3679 00a0 031E     	 sub r3,r0,#0
 3680 00a2 2ED0     	 beq .L112
 3681              	.L111:
1011:../main.c     ****                 tmp1 = deviationTH + positionTHI;
 3682              	 .loc 1 1011 0
 3683 00a4 264B     	 ldr r3,.L118+12
 3684 00a6 1A68     	 ldr r2,[r3]
 3685 00a8 274B     	 ldr r3,.L118+20
 3686 00aa 1B68     	 ldr r3,[r3]
 3687 00ac 101C     	 add r0,r2,#0
 3688 00ae 191C     	 add r1,r3,#0
 3689 00b0 FFF7FEFF 	 bl __aeabi_fsub
 3690 00b4 031C     	 add r3,r0,#0
 3691 00b6 1A1C     	 add r2,r3,#0
 3692 00b8 214B     	 ldr r3,.L118+12
 3693 00ba 1A60     	 str r2,[r3]
1012:../main.c     ****                 closeLoopTHI = WrapFrom0To2Pi(tmp1);
 3694              	 .loc 1 1012 0
 3695 00bc 204B     	 ldr r3,.L118+12
 3696 00be 1A68     	 ldr r2,[r3]
 3697 00c0 244B     	 ldr r3,.L118+32
 3698 00c2 1B68     	 ldr r3,[r3]
 3699 00c4 101C     	 add r0,r2,#0
 3700 00c6 191C     	 add r1,r3,#0
 3701 00c8 FFF7FEFF 	 bl __aeabi_fadd
 3702 00cc 031C     	 add r3,r0,#0
 3703 00ce 7B60     	 str r3,[r7,#4]
1013:../main.c     ****                 tmp1 = deviationTH + positionTHO;
 3704              	 .loc 1 1013 0
 3705 00d0 7B68     	 ldr r3,[r7,#4]
 3706 00d2 181C     	 add r0,r3,#0
 3707 00d4 FFF7FEFF 	 bl WrapFrom0To2Pi
 3708 00d8 021C     	 add r2,r0,#0
 3709 00da 1C4B     	 ldr r3,.L118+24
 3710 00dc 1A60     	 str r2,[r3]
1014:../main.c     ****                 closeLoopTHO = WrapFrom0To2Pi(tmp1);
 3711              	 .loc 1 1014 0
 3712 00de 184B     	 ldr r3,.L118+12
 3713 00e0 1A68     	 ldr r2,[r3]
 3714 00e2 1D4B     	 ldr r3,.L118+36
 3715 00e4 1B68     	 ldr r3,[r3]
 3716 00e6 101C     	 add r0,r2,#0
 3717 00e8 191C     	 add r1,r3,#0
 3718 00ea FFF7FEFF 	 bl __aeabi_fadd
 3719 00ee 031C     	 add r3,r0,#0
 3720 00f0 7B60     	 str r3,[r7,#4]
1015:../main.c     ****             }
 3721              	 .loc 1 1015 0
 3722 00f2 7B68     	 ldr r3,[r7,#4]
 3723 00f4 181C     	 add r0,r3,#0
 3724 00f6 FFF7FEFF 	 bl WrapFrom0To2Pi
 3725 00fa 021C     	 add r2,r0,#0
 3726 00fc 144B     	 ldr r3,.L118+28
 3727 00fe 1A60     	 str r2,[r3]
1023:../main.c     ****         case 2u:
 3728              	 .loc 1 1023 0
 3729 0100 14E0     	 b .L103
 3730              	.L112:
1019:../main.c     ****                 closeLoopTHO =  positionTHO;
 3731              	 .loc 1 1019 0
 3732 0102 144B     	 ldr r3,.L118+32
 3733 0104 1A68     	 ldr r2,[r3]
 3734 0106 114B     	 ldr r3,.L118+24
 3735 0108 1A60     	 str r2,[r3]
1020:../main.c     ****                 closeLoopTHstate = 2;
 3736              	 .loc 1 1020 0
 3737 010a 134B     	 ldr r3,.L118+36
 3738 010c 1A68     	 ldr r2,[r3]
 3739 010e 104B     	 ldr r3,.L118+28
 3740 0110 1A60     	 str r2,[r3]
1021:../main.c     ****             }
 3741              	 .loc 1 1021 0
 3742 0112 094B     	 ldr r3,.L118+4
 3743 0114 0222     	 mov r2,#2
 3744 0116 1A80     	 strh r2,[r3]
1023:../main.c     ****         case 2u:
 3745              	 .loc 1 1023 0
 3746 0118 08E0     	 b .L103
 3747              	.L106:
1025:../main.c     ****             closeLoopTHO =  positionTHO;
 3748              	 .loc 1 1025 0
 3749 011a 0E4B     	 ldr r3,.L118+32
 3750 011c 1A68     	 ldr r2,[r3]
 3751 011e 0B4B     	 ldr r3,.L118+24
 3752 0120 1A60     	 str r2,[r3]
1026:../main.c     ****             break;
 3753              	 .loc 1 1026 0
 3754 0122 0D4B     	 ldr r3,.L118+36
 3755 0124 1A68     	 ldr r2,[r3]
 3756 0126 0A4B     	 ldr r3,.L118+28
 3757 0128 1A60     	 str r2,[r3]
1027:../main.c     ****         default:
 3758              	 .loc 1 1027 0
 3759 012a C046     	 mov r8,r8
 3760              	.L103:
1030:../main.c     ****     }
1031:../main.c     **** }
 3761              	 .loc 1 1031 0
 3762 012c BD46     	 mov sp,r7
 3763 012e 02B0     	 add sp,sp,#8
 3764              	 
 3765 0130 80BD     	 pop {r7,pc}
 3766              	.L119:
 3767 0132 C046     	 .align 2
 3768              	.L118:
 3769 0134 00000000 	 .word Theta
 3770 0138 00000000 	 .word closeLoopTHstate
 3771 013c 00000000 	 .word positionTH
 3772 0140 00000000 	 .word deviationTH
 3773 0144 17B7D137 	 .word 936490775
 3774 0148 00000000 	 .word decayRateTH
 3775 014c 00000000 	 .word closeLoopTHI
 3776 0150 00000000 	 .word closeLoopTHO
 3777 0154 00000000 	 .word positionTHI
 3778 0158 00000000 	 .word positionTHO
 3779              	 .cfi_endproc
 3780              	.LFE478:
 3782              	 .section .text.ThetaLoopControl,"ax",%progbits
 3783              	 .align 2
 3784              	 .global ThetaLoopControl
 3785              	 .code 16
 3786              	 .thumb_func
 3788              	ThetaLoopControl:
 3789              	.LFB479:
1032:../main.c     **** 
1033:../main.c     **** /*
1034:../main.c     ****  Function:Tinh toan goc dong co cho openloop, closeloop de su dung cho Park va Inverse Park chuyen 
1035:../main.c     ****  Input:Theta
1036:../main.c     ****  Output:finalTHI, finalTHO
1037:../main.c     ****  */
1038:../main.c     **** void ThetaLoopControl(void)
1039:../main.c     **** {
 3790              	 .loc 1 1039 0
 3791              	 .cfi_startproc
 3792 0000 80B5     	 push {r7,lr}
 3793              	.LCFI37:
 3794              	 .cfi_def_cfa_offset 8
 3795              	 .cfi_offset 7,-8
 3796              	 .cfi_offset 14,-4
 3797 0002 82B0     	 sub sp,sp,#8
 3798              	.LCFI38:
 3799              	 .cfi_def_cfa_offset 16
 3800 0004 00AF     	 add r7,sp,#0
 3801              	.LCFI39:
 3802              	 .cfi_def_cfa_register 7
1040:../main.c     **** 	if(OpenLoop==1)
 3803              	 .loc 1 1040 0
 3804 0006 604B     	 ldr r3,.L146
 3805 0008 1B88     	 ldrh r3,[r3]
 3806 000a 012B     	 cmp r3,#1
 3807 000c 00D0     	 beq .LCB2501
 3808 000e ACE0     	 b .L121
 3809              	.LCB2501:
1041:../main.c     ****     {
1042:../main.c     ****             Theta += Startup_Ramp_Angle_Rads_Per_Sec;
 3810              	 .loc 1 1042 0
 3811 0010 5E4B     	 ldr r3,.L146+4
 3812 0012 1A68     	 ldr r2,[r3]
 3813 0014 5E4B     	 ldr r3,.L146+8
 3814 0016 1B68     	 ldr r3,[r3]
 3815 0018 101C     	 add r0,r2,#0
 3816 001a 191C     	 add r1,r3,#0
 3817 001c FFF7FEFF 	 bl __aeabi_fadd
 3818 0020 031C     	 add r3,r0,#0
 3819 0022 1A1C     	 add r2,r3,#0
 3820 0024 594B     	 ldr r3,.L146+4
 3821 0026 1A60     	 str r2,[r3]
1043:../main.c     ****             if(Theta >= (float)(2.0f*(float)M_PI))
 3822              	 .loc 1 1043 0
 3823 0028 584B     	 ldr r3,.L146+4
 3824 002a 1B68     	 ldr r3,[r3]
 3825 002c 181C     	 add r0,r3,#0
 3826 002e 5949     	 ldr r1,.L146+12
 3827 0030 FFF7FEFF 	 bl __aeabi_fcmpge
 3828 0034 031E     	 sub r3,r0,#0
 3829 0036 09D0     	 beq .L122
1044:../main.c     ****             {
1045:../main.c     ****                 Theta = Theta - (float)(2.0f*(float)M_PI);
 3830              	 .loc 1 1045 0
 3831 0038 544B     	 ldr r3,.L146+4
 3832 003a 1B68     	 ldr r3,[r3]
 3833 003c 181C     	 add r0,r3,#0
 3834 003e 5549     	 ldr r1,.L146+12
 3835 0040 FFF7FEFF 	 bl __aeabi_fsub
 3836 0044 031C     	 add r3,r0,#0
 3837 0046 1A1C     	 add r2,r3,#0
 3838 0048 504B     	 ldr r3,.L146+4
 3839 004a 1A60     	 str r2,[r3]
 3840              	.L122:
1046:../main.c     ****             }
1047:../main.c     **** 		if (Startup_Lock_Count < LOCK_COUNT_FOR_LOCK_TIME)
 3841              	 .loc 1 1047 0
 3842 004c 524B     	 ldr r3,.L146+16
 3843 004e 1B88     	 ldrh r3,[r3]
 3844 0050 181C     	 mov r0,r3
 3845 0052 FFF7FEFF 	 bl __aeabi_i2f
 3846 0056 031C     	 add r3,r0,#0
 3847 0058 181C     	 add r0,r3,#0
 3848 005a 5049     	 ldr r1,.L146+20
 3849 005c FFF7FEFF 	 bl __aeabi_fcmplt
 3850 0060 031E     	 sub r3,r0,#0
 3851 0062 16D0     	 beq .L142
1048:../main.c     ****         {
1049:../main.c     ****             Startup_Lock_Count++;
 3852              	 .loc 1 1049 0
 3853 0064 4C4B     	 ldr r3,.L146+16
 3854 0066 1B88     	 ldrh r3,[r3]
 3855 0068 0133     	 add r3,r3,#1
 3856 006a 9AB2     	 uxth r2,r3
 3857 006c 4A4B     	 ldr r3,.L146+16
 3858 006e 1A80     	 strh r2,[r3]
1050:../main.c     ****             Startup_Ramp_Angle_Rads_Per_Sec = 0;
 3859              	 .loc 1 1050 0
 3860 0070 474B     	 ldr r3,.L146+8
 3861 0072 0022     	 mov r2,#0
 3862 0074 1A60     	 str r2,[r3]
1051:../main.c     ****             Theta = 0;
 3863              	 .loc 1 1051 0
 3864 0076 454B     	 ldr r3,.L146+4
 3865 0078 0022     	 mov r2,#0
 3866 007a 1A60     	 str r2,[r3]
1052:../main.c     ****             SpeedRef = Startup_Ramp_Angle_Rads_Per_Sec/Ts;
 3867              	 .loc 1 1052 0
 3868 007c 444B     	 ldr r3,.L146+8
 3869 007e 1B68     	 ldr r3,[r3]
 3870 0080 181C     	 add r0,r3,#0
 3871 0082 0021     	 mov r1,#0
 3872 0084 FFF7FEFF 	 bl __aeabi_fdiv
 3873 0088 031C     	 add r3,r0,#0
 3874 008a 1A1C     	 add r2,r3,#0
 3875 008c 444B     	 ldr r3,.L146+24
 3876 008e 1A60     	 str r2,[r3]
 3877 0090 62E0     	 b .L126
 3878              	.L142:
1053:../main.c     ****         }
1054:../main.c     ****         else if (Startup_Ramp_Angle_Rads_Per_Sec < END_SPEED_RADS_PER_SEC_ELEC_IN_LOOPTIME)
 3879              	 .loc 1 1054 0
 3880 0092 3F4B     	 ldr r3,.L146+8
 3881 0094 1B68     	 ldr r3,[r3]
 3882 0096 181C     	 add r0,r3,#0
 3883 0098 4249     	 ldr r1,.L146+28
 3884 009a FFF7FEFF 	 bl __aeabi_fcmplt
 3885 009e 031E     	 sub r3,r0,#0
 3886 00a0 0AD0     	 beq .L143
1055:../main.c     ****         {
1056:../main.c     **** 			Startup_Ramp_Angle_Rads_Per_Sec += OPENLOOP_RAMPSPEED_INCREASERATE;
 3887              	 .loc 1 1056 0
 3888 00a2 3B4B     	 ldr r3,.L146+8
 3889 00a4 1B68     	 ldr r3,[r3]
 3890 00a6 181C     	 add r0,r3,#0
 3891 00a8 3F49     	 ldr r1,.L146+32
 3892 00aa FFF7FEFF 	 bl __aeabi_fadd
 3893 00ae 031C     	 add r3,r0,#0
 3894 00b0 1A1C     	 add r2,r3,#0
 3895 00b2 374B     	 ldr r3,.L146+8
 3896 00b4 1A60     	 str r2,[r3]
 3897 00b6 4FE0     	 b .L126
 3898              	.L143:
1057:../main.c     ****         }
1058:../main.c     ****         else if(Speed_Maintain_Cnt1 < (uint32_t)PWM_FREQ)
 3899              	 .loc 1 1058 0
 3900 00b8 3C4B     	 ldr r3,.L146+36
 3901 00ba 1B88     	 ldrh r3,[r3]
 3902 00bc 3C4A     	 ldr r2,.L146+40
 3903 00be 9342     	 cmp r3,r2
 3904 00c0 0CD8     	 bhi .L129
1059:../main.c     ****         {
1060:../main.c     ****             Speed_Maintain_Cnt1++;
 3905              	 .loc 1 1060 0
 3906 00c2 3A4B     	 ldr r3,.L146+36
 3907 00c4 1B88     	 ldrh r3,[r3]
 3908 00c6 0133     	 add r3,r3,#1
 3909 00c8 9AB2     	 uxth r2,r3
 3910 00ca 384B     	 ldr r3,.L146+36
 3911 00cc 1A80     	 strh r2,[r3]
1061:../main.c     ****             SpeedRef = END_SPEED_RADS_PER_SEC_ELEC;
 3912              	 .loc 1 1061 0
 3913 00ce 344B     	 ldr r3,.L146+24
 3914 00d0 384A     	 ldr r2,.L146+44
 3915 00d2 1A60     	 str r2,[r3]
1062:../main.c     ****             flagStartObs = 2;
 3916              	 .loc 1 1062 0
 3917 00d4 384B     	 ldr r3,.L146+48
 3918 00d6 0222     	 mov r2,#2
 3919 00d8 1A80     	 strh r2,[r3]
 3920 00da 3DE0     	 b .L126
 3921              	.L129:
 3922              	.LBB2:
1063:../main.c     ****         }
1064:../main.c     ****         else
1065:../main.c     ****         {
1066:../main.c     ****                 float tmp1;
1067:../main.c     ****                 tmp1 = Theta - positionTH;
 3923              	 .loc 1 1067 0
 3924 00dc 2B4B     	 ldr r3,.L146+4
 3925 00de 1A68     	 ldr r2,[r3]
 3926 00e0 364B     	 ldr r3,.L146+52
 3927 00e2 1B68     	 ldr r3,[r3]
 3928 00e4 101C     	 add r0,r2,#0
 3929 00e6 191C     	 add r1,r3,#0
 3930 00e8 FFF7FEFF 	 bl __aeabi_fsub
 3931 00ec 031C     	 add r3,r0,#0
 3932 00ee 7B60     	 str r3,[r7,#4]
1068:../main.c     ****                 if((float)-M_PI > tmp1)
 3933              	 .loc 1 1068 0
 3934 00f0 7868     	 ldr r0,[r7,#4]
 3935 00f2 3349     	 ldr r1,.L146+56
 3936 00f4 FFF7FEFF 	 bl __aeabi_fcmplt
 3937 00f8 031E     	 sub r3,r0,#0
 3938 00fa 08D0     	 beq .L144
1069:../main.c     ****                 {
1070:../main.c     ****                     deviationTH = tmp1 + (float)(2.0*M_PI);
 3939              	 .loc 1 1070 0
 3940 00fc 7868     	 ldr r0,[r7,#4]
 3941 00fe 2549     	 ldr r1,.L146+12
 3942 0100 FFF7FEFF 	 bl __aeabi_fadd
 3943 0104 031C     	 add r3,r0,#0
 3944 0106 1A1C     	 add r2,r3,#0
 3945 0108 2E4B     	 ldr r3,.L146+60
 3946 010a 1A60     	 str r2,[r3]
 3947 010c 11E0     	 b .L132
 3948              	.L144:
1071:../main.c     ****                 }
1072:../main.c     ****                 else if((float)M_PI < tmp1)
 3949              	 .loc 1 1072 0
 3950 010e 7868     	 ldr r0,[r7,#4]
 3951 0110 2D49     	 ldr r1,.L146+64
 3952 0112 FFF7FEFF 	 bl __aeabi_fcmpgt
 3953 0116 031E     	 sub r3,r0,#0
 3954 0118 08D0     	 beq .L145
1073:../main.c     ****                 {
1074:../main.c     ****                     deviationTH = tmp1 - (float)(2.0*M_PI);
 3955              	 .loc 1 1074 0
 3956 011a 7868     	 ldr r0,[r7,#4]
 3957 011c 1D49     	 ldr r1,.L146+12
 3958 011e FFF7FEFF 	 bl __aeabi_fsub
 3959 0122 031C     	 add r3,r0,#0
 3960 0124 1A1C     	 add r2,r3,#0
 3961 0126 274B     	 ldr r3,.L146+60
 3962 0128 1A60     	 str r2,[r3]
 3963 012a 02E0     	 b .L132
 3964              	.L145:
1075:../main.c     ****                 }
1076:../main.c     ****                 else
1077:../main.c     ****                 {
1078:../main.c     ****                     deviationTH = tmp1;
 3965              	 .loc 1 1078 0
 3966 012c 254B     	 ldr r3,.L146+60
 3967 012e 7A68     	 ldr r2,[r7,#4]
 3968 0130 1A60     	 str r2,[r3]
 3969              	.L132:
1079:../main.c     ****                 }
1080:../main.c     ****                 decayRateTH = deviationTH * RL_1D_2SCNT;
 3970              	 .loc 1 1080 0
 3971 0132 244B     	 ldr r3,.L146+60
 3972 0134 1B68     	 ldr r3,[r3]
 3973 0136 181C     	 add r0,r3,#0
 3974 0138 2449     	 ldr r1,.L146+68
 3975 013a FFF7FEFF 	 bl __aeabi_fmul
 3976 013e 031C     	 add r3,r0,#0
 3977 0140 1A1C     	 add r2,r3,#0
 3978 0142 234B     	 ldr r3,.L146+72
 3979 0144 1A60     	 str r2,[r3]
1081:../main.c     ****                 closeLoopTHstate = 1;
 3980              	 .loc 1 1081 0
 3981 0146 234B     	 ldr r3,.L146+76
 3982 0148 0122     	 mov r2,#1
 3983 014a 1A80     	 strh r2,[r3]
1082:../main.c     ****                 ChangeMode = 1;
 3984              	 .loc 1 1082 0
 3985 014c 224B     	 ldr r3,.L146+80
 3986 014e 0122     	 mov r2,#1
 3987 0150 1A80     	 strh r2,[r3]
1083:../main.c     ****                 OpenLoop = 0;
 3988              	 .loc 1 1083 0
 3989 0152 0D4B     	 ldr r3,.L146
 3990 0154 0022     	 mov r2,#0
 3991 0156 1A80     	 strh r2,[r3]
 3992              	.L126:
 3993              	.LBE2:
1084:../main.c     **** 		}
1085:../main.c     **** 
1086:../main.c     ****         finalTHI = Theta;
 3994              	 .loc 1 1086 0
 3995 0158 0C4B     	 ldr r3,.L146+4
 3996 015a 1A68     	 ldr r2,[r3]
 3997 015c 1F4B     	 ldr r3,.L146+84
 3998 015e 1A60     	 str r2,[r3]
1087:../main.c     ****         finalTHO = Theta;
 3999              	 .loc 1 1087 0
 4000 0160 0A4B     	 ldr r3,.L146+4
 4001 0162 1A68     	 ldr r2,[r3]
 4002 0164 1E4B     	 ldr r3,.L146+88
 4003 0166 1A60     	 str r2,[r3]
 4004 0168 09E0     	 b .L135
 4005              	.L121:
1088:../main.c     **** 	}
1089:../main.c     ****     else
1090:../main.c     ****     {
1091:../main.c     ****         CloseLoopTHcal();
 4006              	 .loc 1 1091 0
 4007 016a FFF7FEFF 	 bl CloseLoopTHcal
1092:../main.c     ****         finalTHI = closeLoopTHI;
 4008              	 .loc 1 1092 0
 4009 016e 1D4B     	 ldr r3,.L146+92
 4010 0170 1A68     	 ldr r2,[r3]
 4011 0172 1A4B     	 ldr r3,.L146+84
 4012 0174 1A60     	 str r2,[r3]
1093:../main.c     ****         finalTHO = closeLoopTHO;
 4013              	 .loc 1 1093 0
 4014 0176 1C4B     	 ldr r3,.L146+96
 4015 0178 1A68     	 ldr r2,[r3]
 4016 017a 194B     	 ldr r3,.L146+88
 4017 017c 1A60     	 str r2,[r3]
 4018              	.L135:
1094:../main.c     **** 	}
1095:../main.c     **** 
1096:../main.c     **** 	return;
 4019              	 .loc 1 1096 0
 4020 017e C046     	 mov r8,r8
1097:../main.c     **** }
 4021              	 .loc 1 1097 0
 4022 0180 BD46     	 mov sp,r7
 4023 0182 02B0     	 add sp,sp,#8
 4024              	 
 4025 0184 80BD     	 pop {r7,pc}
 4026              	.L147:
 4027 0186 C046     	 .align 2
 4028              	.L146:
 4029 0188 00000000 	 .word OpenLoop
 4030 018c 00000000 	 .word Theta
 4031 0190 00000000 	 .word Startup_Ramp_Angle_Rads_Per_Sec
 4032 0194 DB0FC940 	 .word 1086918619
 4033 0198 00000000 	 .word Startup_Lock_Count
 4034 019c 00401C47 	 .word 1193033728
 4035 01a0 00000000 	 .word SpeedRef
 4036 01a4 A6922B3B 	 .word 992711334
 4037 01a8 4BE2E032 	 .word 853598795
 4038 01ac 00000000 	 .word Speed_Maintain_Cnt1
 4039 01b0 1F4E0000 	 .word 19999
 4040 01b4 84705142 	 .word 1112633476
 4041 01b8 00000000 	 .word flagStartObs
 4042 01bc 00000000 	 .word positionTH
 4043 01c0 DB0F49C0 	 .word -1068953637
 4044 01c4 00000000 	 .word deviationTH
 4045 01c8 DB0F4940 	 .word 1078530011
 4046 01cc 17B7D137 	 .word 936490775
 4047 01d0 00000000 	 .word decayRateTH
 4048 01d4 00000000 	 .word closeLoopTHstate
 4049 01d8 00000000 	 .word ChangeMode
 4050 01dc 00000000 	 .word finalTHI
 4051 01e0 00000000 	 .word finalTHO
 4052 01e4 00000000 	 .word closeLoopTHI
 4053 01e8 00000000 	 .word closeLoopTHO
 4054              	 .cfi_endproc
 4055              	.LFE479:
 4057              	 .section .text.floatAbs,"ax",%progbits
 4058              	 .align 2
 4059              	 .global floatAbs
 4060              	 .code 16
 4061              	 .thumb_func
 4063              	floatAbs:
 4064              	.LFB480:
1098:../main.c     **** 
1099:../main.c     **** /*
1100:../main.c     ****  Function:lay gia tri tuyet doi cua bien vao
1101:../main.c     ****  Input:x
1102:../main.c     ****  Output:tri tuyet doi cua x
1103:../main.c     ****  */
1104:../main.c     **** float floatAbs(float x)
1105:../main.c     **** {
 4065              	 .loc 1 1105 0
 4066              	 .cfi_startproc
 4067 0000 80B5     	 push {r7,lr}
 4068              	.LCFI40:
 4069              	 .cfi_def_cfa_offset 8
 4070              	 .cfi_offset 7,-8
 4071              	 .cfi_offset 14,-4
 4072 0002 84B0     	 sub sp,sp,#16
 4073              	.LCFI41:
 4074              	 .cfi_def_cfa_offset 24
 4075 0004 00AF     	 add r7,sp,#0
 4076              	.LCFI42:
 4077              	 .cfi_def_cfa_register 7
 4078 0006 7860     	 str r0,[r7,#4]
1106:../main.c     ****     float tmp;
1107:../main.c     **** 
1108:../main.c     ****     if(0 < x)
 4079              	 .loc 1 1108 0
 4080 0008 7868     	 ldr r0,[r7,#4]
 4081 000a 0021     	 mov r1,#0
 4082 000c FFF7FEFF 	 bl __aeabi_fcmpgt
 4083 0010 031E     	 sub r3,r0,#0
 4084 0012 02D0     	 beq .L154
1109:../main.c     ****     {
1110:../main.c     ****         tmp = x;
 4085              	 .loc 1 1110 0
 4086 0014 7B68     	 ldr r3,[r7,#4]
 4087 0016 FB60     	 str r3,[r7,#12]
 4088 0018 04E0     	 b .L151
 4089              	.L154:
1111:../main.c     ****     }
1112:../main.c     ****     else
1113:../main.c     ****     {
1114:../main.c     ****         tmp = -x;
 4090              	 .loc 1 1114 0
 4091 001a 7B68     	 ldr r3,[r7,#4]
 4092 001c 8022     	 mov r2,#128
 4093 001e 1206     	 lsl r2,r2,#24
 4094 0020 5340     	 eor r3,r2
 4095 0022 FB60     	 str r3,[r7,#12]
 4096              	.L151:
1115:../main.c     ****     }
1116:../main.c     **** 
1117:../main.c     ****     return tmp;
 4097              	 .loc 1 1117 0
 4098 0024 FB68     	 ldr r3,[r7,#12]
1118:../main.c     **** }
 4099              	 .loc 1 1118 0
 4100 0026 181C     	 add r0,r3,#0
 4101 0028 BD46     	 mov sp,r7
 4102 002a 04B0     	 add sp,sp,#16
 4103              	 
 4104 002c 80BD     	 pop {r7,pc}
 4105              	 .cfi_endproc
 4106              	.LFE480:
 4108 002e C046     	 .section .text.sinChebyshevF,"ax",%progbits
 4109              	 .align 2
 4110              	 .global sinChebyshevF
 4111              	 .code 16
 4112              	 .thumb_func
 4114              	sinChebyshevF:
 4115              	.LFB481:
1119:../main.c     **** /*
1120:../main.c     ****  Function:tinh toan xap xi sin cua goc dua vao ham
1121:../main.c     ****  Input:x
1122:../main.c     ****  Output:sin(x)
1123:../main.c     ****  */
1124:../main.c     **** float sinChebyshevF(float x)
1125:../main.c     **** {
 4116              	 .loc 1 1125 0
 4117              	 .cfi_startproc
 4118 0000 80B5     	 push {r7,lr}
 4119              	.LCFI43:
 4120              	 .cfi_def_cfa_offset 8
 4121              	 .cfi_offset 7,-8
 4122              	 .cfi_offset 14,-4
 4123 0002 86B0     	 sub sp,sp,#24
 4124              	.LCFI44:
 4125              	 .cfi_def_cfa_offset 32
 4126 0004 00AF     	 add r7,sp,#0
 4127              	.LCFI45:
 4128              	 .cfi_def_cfa_register 7
 4129 0006 7860     	 str r0,[r7,#4]
1126:../main.c     ****     float y;
1127:../main.c     ****     float tmp1;
1128:../main.c     ****     float tmp2;
1129:../main.c     **** 
1130:../main.c     ****     if((float)M_PI_2 < x)
 4130              	 .loc 1 1130 0
 4131 0008 7868     	 ldr r0,[r7,#4]
 4132 000a 2049     	 ldr r1,.L166
 4133 000c FFF7FEFF 	 bl __aeabi_fcmpgt
 4134 0010 031E     	 sub r3,r0,#0
 4135 0012 06D0     	 beq .L164
1131:../main.c     ****     {
1132:../main.c     ****         y = (float)M_PI - x;
 4136              	 .loc 1 1132 0
 4137 0014 1E48     	 ldr r0,.L166+4
 4138 0016 7968     	 ldr r1,[r7,#4]
 4139 0018 FFF7FEFF 	 bl __aeabi_fsub
 4140 001c 031C     	 add r3,r0,#0
 4141 001e 7B61     	 str r3,[r7,#20]
 4142 0020 0EE0     	 b .L158
 4143              	.L164:
1133:../main.c     ****     }
1134:../main.c     ****     else if((float)(-M_PI_2) > x)
 4144              	 .loc 1 1134 0
 4145 0022 7868     	 ldr r0,[r7,#4]
 4146 0024 1B49     	 ldr r1,.L166+8
 4147 0026 FFF7FEFF 	 bl __aeabi_fcmplt
 4148 002a 031E     	 sub r3,r0,#0
 4149 002c 06D0     	 beq .L165
1135:../main.c     ****     {
1136:../main.c     ****         y = (float)(-M_PI) - x;
 4150              	 .loc 1 1136 0
 4151 002e 1A48     	 ldr r0,.L166+12
 4152 0030 7968     	 ldr r1,[r7,#4]
 4153 0032 FFF7FEFF 	 bl __aeabi_fsub
 4154 0036 031C     	 add r3,r0,#0
 4155 0038 7B61     	 str r3,[r7,#20]
 4156 003a 01E0     	 b .L158
 4157              	.L165:
1137:../main.c     ****     }
1138:../main.c     ****     else
1139:../main.c     ****     {
1140:../main.c     ****         y = x;
 4158              	 .loc 1 1140 0
 4159 003c 7B68     	 ldr r3,[r7,#4]
 4160 003e 7B61     	 str r3,[r7,#20]
 4161              	.L158:
1141:../main.c     ****     }
1142:../main.c     **** 
1143:../main.c     ****     tmp1 = y * y;
 4162              	 .loc 1 1143 0
 4163 0040 7869     	 ldr r0,[r7,#20]
 4164 0042 7969     	 ldr r1,[r7,#20]
 4165 0044 FFF7FEFF 	 bl __aeabi_fmul
 4166 0048 031C     	 add r3,r0,#0
 4167 004a 3B61     	 str r3,[r7,#16]
1144:../main.c     ****     tmp2 = y * (CHEB_SIN_1 + tmp1 * (CHEB_SIN_3 + (tmp1 * CHEB_SIN_5)));
 4168              	 .loc 1 1144 0
 4169 004c 3869     	 ldr r0,[r7,#16]
 4170 004e 1349     	 ldr r1,.L166+16
 4171 0050 FFF7FEFF 	 bl __aeabi_fmul
 4172 0054 031C     	 add r3,r0,#0
 4173 0056 181C     	 add r0,r3,#0
 4174 0058 1149     	 ldr r1,.L166+20
 4175 005a FFF7FEFF 	 bl __aeabi_fsub
 4176 005e 031C     	 add r3,r0,#0
 4177 0060 181C     	 add r0,r3,#0
 4178 0062 3969     	 ldr r1,[r7,#16]
 4179 0064 FFF7FEFF 	 bl __aeabi_fmul
 4180 0068 031C     	 add r3,r0,#0
 4181 006a 181C     	 add r0,r3,#0
 4182 006c 0D49     	 ldr r1,.L166+24
 4183 006e FFF7FEFF 	 bl __aeabi_fadd
 4184 0072 031C     	 add r3,r0,#0
 4185 0074 181C     	 add r0,r3,#0
 4186 0076 7969     	 ldr r1,[r7,#20]
 4187 0078 FFF7FEFF 	 bl __aeabi_fmul
 4188 007c 031C     	 add r3,r0,#0
 4189 007e FB60     	 str r3,[r7,#12]
1145:../main.c     **** 
1146:../main.c     ****     return tmp2;
 4190              	 .loc 1 1146 0
 4191 0080 FB68     	 ldr r3,[r7,#12]
1147:../main.c     **** }
 4192              	 .loc 1 1147 0
 4193 0082 181C     	 add r0,r3,#0
 4194 0084 BD46     	 mov sp,r7
 4195 0086 06B0     	 add sp,sp,#24
 4196              	 
 4197 0088 80BD     	 pop {r7,pc}
 4198              	.L167:
 4199 008a C046     	 .align 2
 4200              	.L166:
 4201 008c DB0FC93F 	 .word 1070141403
 4202 0090 DB0F4940 	 .word 1078530011
 4203 0094 DB0FC9BF 	 .word -1077342245
 4204 0098 DB0F49C0 	 .word -1068953637
 4205 009c E2F1023C 	 .word 1006825954
 4206 00a0 377E2A3E 	 .word 1042972215
 4207 00a4 9AFE7F3F 	 .word 1065352858
 4208              	 .cfi_endproc
 4209              	.LFE481:
 4211              	 .section .text.cosChebyshevF,"ax",%progbits
 4212              	 .align 2
 4213              	 .global cosChebyshevF
 4214              	 .code 16
 4215              	 .thumb_func
 4217              	cosChebyshevF:
 4218              	.LFB482:
1148:../main.c     **** /*
1149:../main.c     ****  Function:tinh toan xap xi cos cua goc dua vao ham
1150:../main.c     ****  Input:x
1151:../main.c     ****  Output:cos(x)
1152:../main.c     ****  */
1153:../main.c     **** float cosChebyshevF(float x)
1154:../main.c     **** {
 4219              	 .loc 1 1154 0
 4220              	 .cfi_startproc
 4221 0000 80B5     	 push {r7,lr}
 4222              	.LCFI46:
 4223              	 .cfi_def_cfa_offset 8
 4224              	 .cfi_offset 7,-8
 4225              	 .cfi_offset 14,-4
 4226 0002 84B0     	 sub sp,sp,#16
 4227              	.LCFI47:
 4228              	 .cfi_def_cfa_offset 24
 4229 0004 00AF     	 add r7,sp,#0
 4230              	.LCFI48:
 4231              	 .cfi_def_cfa_register 7
 4232 0006 7860     	 str r0,[r7,#4]
1155:../main.c     ****     float y;
1156:../main.c     ****     float tmp1;
1157:../main.c     **** 
1158:../main.c     ****     if(0.0 > x)
 4233              	 .loc 1 1158 0
 4234 0008 7868     	 ldr r0,[r7,#4]
 4235 000a 0021     	 mov r1,#0
 4236 000c FFF7FEFF 	 bl __aeabi_fcmplt
 4237 0010 031E     	 sub r3,r0,#0
 4238 0012 06D0     	 beq .L174
1159:../main.c     ****     {
1160:../main.c     ****         y = (float)M_PI_2 + x;
 4239              	 .loc 1 1160 0
 4240 0014 7868     	 ldr r0,[r7,#4]
 4241 0016 0B49     	 ldr r1,.L175
 4242 0018 FFF7FEFF 	 bl __aeabi_fadd
 4243 001c 031C     	 add r3,r0,#0
 4244 001e FB60     	 str r3,[r7,#12]
 4245 0020 05E0     	 b .L171
 4246              	.L174:
1161:../main.c     ****     }
1162:../main.c     ****     else
1163:../main.c     ****     {
1164:../main.c     ****         y = (float)M_PI_2 - x;
 4247              	 .loc 1 1164 0
 4248 0022 0848     	 ldr r0,.L175
 4249 0024 7968     	 ldr r1,[r7,#4]
 4250 0026 FFF7FEFF 	 bl __aeabi_fsub
 4251 002a 031C     	 add r3,r0,#0
 4252 002c FB60     	 str r3,[r7,#12]
 4253              	.L171:
1165:../main.c     ****     }
1166:../main.c     **** 
1167:../main.c     ****     tmp1 = sinChebyshevF(y);
 4254              	 .loc 1 1167 0
 4255 002e FB68     	 ldr r3,[r7,#12]
 4256 0030 181C     	 add r0,r3,#0
 4257 0032 FFF7FEFF 	 bl sinChebyshevF
 4258 0036 031C     	 add r3,r0,#0
 4259 0038 BB60     	 str r3,[r7,#8]
1168:../main.c     **** 
1169:../main.c     ****     return tmp1;
 4260              	 .loc 1 1169 0
 4261 003a BB68     	 ldr r3,[r7,#8]
1170:../main.c     **** }
 4262              	 .loc 1 1170 0
 4263 003c 181C     	 add r0,r3,#0
 4264 003e BD46     	 mov sp,r7
 4265 0040 04B0     	 add sp,sp,#16
 4266              	 
 4267 0042 80BD     	 pop {r7,pc}
 4268              	.L176:
 4269              	 .align 2
 4270              	.L175:
 4271 0044 DB0FC93F 	 .word 1070141403
 4272              	 .cfi_endproc
 4273              	.LFE482:
 4275              	 .section .text.resetSMO,"ax",%progbits
 4276              	 .align 2
 4277              	 .global resetSMO
 4278              	 .code 16
 4279              	 .thumb_func
 4281              	resetSMO:
 4282              	.LFB483:
1171:../main.c     **** /*
1172:../main.c     ****  Function:Dua gia tri bien dau ra cua bo quan sat dong dien, back emf ve 0 (reset ve 0)
1173:../main.c     ****  */
1174:../main.c     **** void resetSMO()
1175:../main.c     **** {
 4283              	 .loc 1 1175 0
 4284              	 .cfi_startproc
 4285 0000 80B5     	 push {r7,lr}
 4286              	.LCFI49:
 4287              	 .cfi_def_cfa_offset 8
 4288              	 .cfi_offset 7,-8
 4289              	 .cfi_offset 14,-4
 4290 0002 00AF     	 add r7,sp,#0
 4291              	.LCFI50:
 4292              	 .cfi_def_cfa_register 7
1176:../main.c     ****     IalphaHat = 0;
 4293              	 .loc 1 1176 0
 4294 0004 064B     	 ldr r3,.L178
 4295 0006 0022     	 mov r2,#0
 4296 0008 1A60     	 str r2,[r3]
1177:../main.c     ****     IbetaHat = 0;
 4297              	 .loc 1 1177 0
 4298 000a 064B     	 ldr r3,.L178+4
 4299 000c 0022     	 mov r2,#0
 4300 000e 1A60     	 str r2,[r3]
1178:../main.c     ****     EalphaHat = 0;
 4301              	 .loc 1 1178 0
 4302 0010 054B     	 ldr r3,.L178+8
 4303 0012 0022     	 mov r2,#0
 4304 0014 1A60     	 str r2,[r3]
1179:../main.c     ****     EbetaHat = 0;
 4305              	 .loc 1 1179 0
 4306 0016 054B     	 ldr r3,.L178+12
 4307 0018 0022     	 mov r2,#0
 4308 001a 1A60     	 str r2,[r3]
1180:../main.c     **** }
 4309              	 .loc 1 1180 0
 4310 001c BD46     	 mov sp,r7
 4311              	 
 4312 001e 80BD     	 pop {r7,pc}
 4313              	.L179:
 4314              	 .align 2
 4315              	.L178:
 4316 0020 00000000 	 .word IalphaHat
 4317 0024 00000000 	 .word IbetaHat
 4318 0028 00000000 	 .word EalphaHat
 4319 002c 00000000 	 .word EbetaHat
 4320              	 .cfi_endproc
 4321              	.LFE483:
 4323              	 .global __aeabi_f2d
 4324              	 .global __aeabi_d2f
 4325              	 .global __aeabi_dsub
 4326              	 .global __aeabi_ddiv
 4327              	 .global __aeabi_dmul
 4328              	 .section .text.currentCoeffCal,"ax",%progbits
 4329              	 .align 2
 4330              	 .global currentCoeffCal
 4331              	 .code 16
 4332              	 .thumb_func
 4334              	currentCoeffCal:
 4335              	.LFB484:
1181:../main.c     **** /*
1182:../main.c     ****  Function:Bo quan sat dong dien  tinh toan dong dien uoc luong sau do so sanh voi dong dien sau khi
1183:../main.c     ****  Input:current_alpha, Usalpha, EalphaHat (tuong tu voi beta)
1184:../main.c     ****  Output:Balpha, IalphaHat (tuong tu voi beta)
1185:../main.c     ****  */
1186:../main.c     **** void currentCoeffCal(void)
1187:../main.c     **** {
 4336              	 .loc 1 1187 0
 4337              	 .cfi_startproc
 4338 0000 B0B5     	 push {r4,r5,r7,lr}
 4339              	.LCFI51:
 4340              	 .cfi_def_cfa_offset 16
 4341              	 .cfi_offset 4,-16
 4342              	 .cfi_offset 5,-12
 4343              	 .cfi_offset 7,-8
 4344              	 .cfi_offset 14,-4
 4345 0002 00AF     	 add r7,sp,#0
 4346              	.LCFI52:
 4347              	 .cfi_def_cfa_register 7
1188:../main.c     ****         aIObs = (exp(-Rs/(Ls*Ts)));
 4348              	 .loc 1 1188 0
 4349 0004 5148     	 ldr r0,.L181
 4350 0006 0021     	 mov r1,#0
 4351 0008 FFF7FEFF 	 bl __aeabi_fdiv
 4352 000c 031C     	 add r3,r0,#0
 4353 000e 181C     	 add r0,r3,#0
 4354 0010 FFF7FEFF 	 bl __aeabi_f2d
 4355 0014 021C     	 mov r2,r0
 4356 0016 0B1C     	 mov r3,r1
 4357 0018 101C     	 mov r0,r2
 4358 001a 191C     	 mov r1,r3
 4359 001c FFF7FEFF 	 bl exp
 4360 0020 021C     	 mov r2,r0
 4361 0022 0B1C     	 mov r3,r1
 4362 0024 101C     	 mov r0,r2
 4363 0026 191C     	 mov r1,r3
 4364 0028 FFF7FEFF 	 bl __aeabi_d2f
 4365 002c 021C     	 add r2,r0,#0
 4366 002e 484B     	 ldr r3,.L181+4
 4367 0030 1A60     	 str r2,[r3]
1189:../main.c     ****         b1IObs = (float)((exp(-Rs/(Ls*Ts))-1.0f)/Rs);
 4368              	 .loc 1 1189 0
 4369 0032 4648     	 ldr r0,.L181
 4370 0034 0021     	 mov r1,#0
 4371 0036 FFF7FEFF 	 bl __aeabi_fdiv
 4372 003a 031C     	 add r3,r0,#0
 4373 003c 181C     	 add r0,r3,#0
 4374 003e FFF7FEFF 	 bl __aeabi_f2d
 4375 0042 021C     	 mov r2,r0
 4376 0044 0B1C     	 mov r3,r1
 4377 0046 101C     	 mov r0,r2
 4378 0048 191C     	 mov r1,r3
 4379 004a FFF7FEFF 	 bl exp
 4380 004e 021C     	 mov r2,r0
 4381 0050 0B1C     	 mov r3,r1
 4382 0052 101C     	 mov r0,r2
 4383 0054 191C     	 mov r1,r3
 4384 0056 0022     	 mov r2,#0
 4385 0058 3E4B     	 ldr r3,.L181+8
 4386 005a FFF7FEFF 	 bl __aeabi_dsub
 4387 005e 021C     	 mov r2,r0
 4388 0060 0B1C     	 mov r3,r1
 4389 0062 101C     	 mov r0,r2
 4390 0064 191C     	 mov r1,r3
 4391 0066 C022     	 mov r2,#192
 4392 0068 D205     	 lsl r2,r2,#23
 4393 006a 3B4B     	 ldr r3,.L181+12
 4394 006c FFF7FEFF 	 bl __aeabi_ddiv
 4395 0070 021C     	 mov r2,r0
 4396 0072 0B1C     	 mov r3,r1
 4397 0074 101C     	 mov r0,r2
 4398 0076 191C     	 mov r1,r3
 4399 0078 FFF7FEFF 	 bl __aeabi_d2f
 4400 007c 021C     	 add r2,r0,#0
 4401 007e 374B     	 ldr r3,.L181+16
 4402 0080 1A60     	 str r2,[r3]
1190:../main.c     ****         b2IObs = (float)(-((exp(-Rs/(Ls*Ts))-1.0f)/Rs));
 4403              	 .loc 1 1190 0
 4404 0082 3248     	 ldr r0,.L181
 4405 0084 0021     	 mov r1,#0
 4406 0086 FFF7FEFF 	 bl __aeabi_fdiv
 4407 008a 031C     	 add r3,r0,#0
 4408 008c 181C     	 add r0,r3,#0
 4409 008e FFF7FEFF 	 bl __aeabi_f2d
 4410 0092 021C     	 mov r2,r0
 4411 0094 0B1C     	 mov r3,r1
 4412 0096 101C     	 mov r0,r2
 4413 0098 191C     	 mov r1,r3
 4414 009a FFF7FEFF 	 bl exp
 4415 009e 021C     	 mov r2,r0
 4416 00a0 0B1C     	 mov r3,r1
 4417 00a2 101C     	 mov r0,r2
 4418 00a4 191C     	 mov r1,r3
 4419 00a6 0022     	 mov r2,#0
 4420 00a8 2A4B     	 ldr r3,.L181+8
 4421 00aa FFF7FEFF 	 bl __aeabi_dsub
 4422 00ae 021C     	 mov r2,r0
 4423 00b0 0B1C     	 mov r3,r1
 4424 00b2 101C     	 mov r0,r2
 4425 00b4 191C     	 mov r1,r3
 4426 00b6 C022     	 mov r2,#192
 4427 00b8 D205     	 lsl r2,r2,#23
 4428 00ba 274B     	 ldr r3,.L181+12
 4429 00bc FFF7FEFF 	 bl __aeabi_ddiv
 4430 00c0 021C     	 mov r2,r0
 4431 00c2 0B1C     	 mov r3,r1
 4432 00c4 101C     	 mov r0,r2
 4433 00c6 191C     	 mov r1,r3
 4434 00c8 FFF7FEFF 	 bl __aeabi_d2f
 4435 00cc 021C     	 add r2,r0,#0
 4436 00ce 8023     	 mov r3,#128
 4437 00d0 1B06     	 lsl r3,r3,#24
 4438 00d2 5A40     	 eor r2,r3
 4439 00d4 224B     	 ldr r3,.L181+20
 4440 00d6 1A60     	 str r2,[r3]
1191:../main.c     ****         b3IObs = (float)(Ls*(-((exp(-Rs/(Ls*Ts))-1.0f)/Rs)));
 4441              	 .loc 1 1191 0
 4442 00d8 1C48     	 ldr r0,.L181
 4443 00da 0021     	 mov r1,#0
 4444 00dc FFF7FEFF 	 bl __aeabi_fdiv
 4445 00e0 031C     	 add r3,r0,#0
 4446 00e2 181C     	 add r0,r3,#0
 4447 00e4 FFF7FEFF 	 bl __aeabi_f2d
 4448 00e8 021C     	 mov r2,r0
 4449 00ea 0B1C     	 mov r3,r1
 4450 00ec 101C     	 mov r0,r2
 4451 00ee 191C     	 mov r1,r3
 4452 00f0 FFF7FEFF 	 bl exp
 4453 00f4 021C     	 mov r2,r0
 4454 00f6 0B1C     	 mov r3,r1
 4455 00f8 101C     	 mov r0,r2
 4456 00fa 191C     	 mov r1,r3
 4457 00fc 0022     	 mov r2,#0
 4458 00fe 154B     	 ldr r3,.L181+8
 4459 0100 FFF7FEFF 	 bl __aeabi_dsub
 4460 0104 021C     	 mov r2,r0
 4461 0106 0B1C     	 mov r3,r1
 4462 0108 101C     	 mov r0,r2
 4463 010a 191C     	 mov r1,r3
 4464 010c C022     	 mov r2,#192
 4465 010e D205     	 lsl r2,r2,#23
 4466 0110 114B     	 ldr r3,.L181+12
 4467 0112 FFF7FEFF 	 bl __aeabi_ddiv
 4468 0116 021C     	 mov r2,r0
 4469 0118 0B1C     	 mov r3,r1
 4470 011a 111C     	 mov r1,r2
 4471 011c 0C1C     	 mov r4,r1
 4472 011e 8021     	 mov r1,#128
 4473 0120 0906     	 lsl r1,r1,#24
 4474 0122 5940     	 eor r1,r3
 4475 0124 0D1C     	 mov r5,r1
 4476 0126 201C     	 mov r0,r4
 4477 0128 291C     	 mov r1,r5
 4478 012a E022     	 mov r2,#224
 4479 012c 1206     	 lsl r2,r2,#24
 4480 012e 0D4B     	 ldr r3,.L181+24
 4481 0130 FFF7FEFF 	 bl __aeabi_dmul
 4482 0134 031C     	 mov r3,r0
 4483 0136 0C1C     	 mov r4,r1
 4484 0138 181C     	 mov r0,r3
 4485 013a 211C     	 mov r1,r4
 4486 013c FFF7FEFF 	 bl __aeabi_d2f
 4487 0140 021C     	 add r2,r0,#0
 4488 0142 094B     	 ldr r3,.L181+28
 4489 0144 1A60     	 str r2,[r3]
1192:../main.c     **** }
 4490              	 .loc 1 1192 0
 4491 0146 BD46     	 mov sp,r7
 4492              	 
 4493 0148 B0BD     	 pop {r4,r5,r7,pc}
 4494              	.L182:
 4495 014a C046     	 .align 2
 4496              	.L181:
 4497 014c DBF94EC0 	 .word -1068566053
 4498 0150 00000000 	 .word aIObs
 4499 0154 0000F03F 	 .word 1072693248
 4500 0158 3BDF0940 	 .word 1074388795
 4501 015c 00000000 	 .word b1IObs
 4502 0160 00000000 	 .word b2IObs
 4503 0164 552B633F 	 .word 1063463765
 4504 0168 00000000 	 .word b3IObs
 4505              	 .cfi_endproc
 4506              	.LFE484:
 4508              	 .section .text.currentObserver,"ax",%progbits
 4509              	 .align 2
 4510              	 .global currentObserver
 4511              	 .code 16
 4512              	 .thumb_func
 4514              	currentObserver:
 4515              	.LFB485:
1193:../main.c     **** void currentObserver(float Current, float U, float Ehat, float * Ihat, float * B)
1194:../main.c     **** {
 4516              	 .loc 1 1194 0
 4517              	 .cfi_startproc
 4518 0000 90B5     	 push {r4,r7,lr}
 4519              	.LCFI53:
 4520              	 .cfi_def_cfa_offset 12
 4521              	 .cfi_offset 4,-12
 4522              	 .cfi_offset 7,-8
 4523              	 .cfi_offset 14,-4
 4524 0002 87B0     	 sub sp,sp,#28
 4525              	.LCFI54:
 4526              	 .cfi_def_cfa_offset 40
 4527 0004 00AF     	 add r7,sp,#0
 4528              	.LCFI55:
 4529              	 .cfi_def_cfa_register 7
 4530 0006 F860     	 str r0,[r7,#12]
 4531 0008 B960     	 str r1,[r7,#8]
 4532 000a 7A60     	 str r2,[r7,#4]
 4533 000c 3B60     	 str r3,[r7]
1195:../main.c     ****     float tmp1;
1196:../main.c     **** 
1197:../main.c     ****     tmp1 = Current - *Ihat;
 4534              	 .loc 1 1197 0
 4535 000e 3B68     	 ldr r3,[r7]
 4536 0010 1B68     	 ldr r3,[r3]
 4537 0012 F868     	 ldr r0,[r7,#12]
 4538 0014 191C     	 add r1,r3,#0
 4539 0016 FFF7FEFF 	 bl __aeabi_fsub
 4540 001a 031C     	 add r3,r0,#0
 4541 001c 7B61     	 str r3,[r7,#20]
1198:../main.c     **** 
1199:../main.c     ****     if(boundary_I < tmp1)
 4542              	 .loc 1 1199 0
 4543 001e 7869     	 ldr r0,[r7,#20]
 4544 0020 FC21     	 mov r1,#252
 4545 0022 8905     	 lsl r1,r1,#22
 4546 0024 FFF7FEFF 	 bl __aeabi_fcmpgt
 4547 0028 031E     	 sub r3,r0,#0
 4548 002a 03D0     	 beq .L191
1200:../main.c     ****     {
1201:../main.c     ****         *B = currentObserver_gain;
 4549              	 .loc 1 1201 0
 4550 002c BB6A     	 ldr r3,[r7,#40]
 4551 002e 274A     	 ldr r2,.L193
 4552 0030 1A60     	 str r2,[r3]
 4553 0032 12E0     	 b .L186
 4554              	.L191:
1202:../main.c     ****     }
1203:../main.c     ****     else if(boundary_I > tmp1)
 4555              	 .loc 1 1203 0
 4556 0034 7869     	 ldr r0,[r7,#20]
 4557 0036 FC21     	 mov r1,#252
 4558 0038 8905     	 lsl r1,r1,#22
 4559 003a FFF7FEFF 	 bl __aeabi_fcmplt
 4560 003e 031E     	 sub r3,r0,#0
 4561 0040 03D0     	 beq .L192
1204:../main.c     ****     {
1205:../main.c     ****         *B = -currentObserver_gain;
 4562              	 .loc 1 1205 0
 4563 0042 BB6A     	 ldr r3,[r7,#40]
 4564 0044 224A     	 ldr r2,.L193+4
 4565 0046 1A60     	 str r2,[r3]
 4566 0048 07E0     	 b .L186
 4567              	.L192:
1206:../main.c     ****     }
1207:../main.c     ****     else
1208:../main.c     ****     {
1209:../main.c     ****         *B = tmp1 *(float)(currentObserver_gain/boundary_I) ;
 4568              	 .loc 1 1209 0
 4569 004a 7869     	 ldr r0,[r7,#20]
 4570 004c 2149     	 ldr r1,.L193+8
 4571 004e FFF7FEFF 	 bl __aeabi_fmul
 4572 0052 031C     	 add r3,r0,#0
 4573 0054 1A1C     	 add r2,r3,#0
 4574 0056 BB6A     	 ldr r3,[r7,#40]
 4575 0058 1A60     	 str r2,[r3]
 4576              	.L186:
1210:../main.c     ****     }
1211:../main.c     **** 
1212:../main.c     ****     *Ihat = (aIObs * (*Ihat)) + (b1IObs * Ehat) + (b2IObs * U) + (b3IObs * (*B));
 4577              	 .loc 1 1212 0
 4578 005a 3B68     	 ldr r3,[r7]
 4579 005c 1A68     	 ldr r2,[r3]
 4580 005e 1E4B     	 ldr r3,.L193+12
 4581 0060 1B68     	 ldr r3,[r3]
 4582 0062 101C     	 add r0,r2,#0
 4583 0064 191C     	 add r1,r3,#0
 4584 0066 FFF7FEFF 	 bl __aeabi_fmul
 4585 006a 031C     	 add r3,r0,#0
 4586 006c 1C1C     	 add r4,r3,#0
 4587 006e 1B4B     	 ldr r3,.L193+16
 4588 0070 1B68     	 ldr r3,[r3]
 4589 0072 181C     	 add r0,r3,#0
 4590 0074 7968     	 ldr r1,[r7,#4]
 4591 0076 FFF7FEFF 	 bl __aeabi_fmul
 4592 007a 031C     	 add r3,r0,#0
 4593 007c 201C     	 add r0,r4,#0
 4594 007e 191C     	 add r1,r3,#0
 4595 0080 FFF7FEFF 	 bl __aeabi_fadd
 4596 0084 031C     	 add r3,r0,#0
 4597 0086 1C1C     	 add r4,r3,#0
 4598 0088 154B     	 ldr r3,.L193+20
 4599 008a 1B68     	 ldr r3,[r3]
 4600 008c 181C     	 add r0,r3,#0
 4601 008e B968     	 ldr r1,[r7,#8]
 4602 0090 FFF7FEFF 	 bl __aeabi_fmul
 4603 0094 031C     	 add r3,r0,#0
 4604 0096 201C     	 add r0,r4,#0
 4605 0098 191C     	 add r1,r3,#0
 4606 009a FFF7FEFF 	 bl __aeabi_fadd
 4607 009e 031C     	 add r3,r0,#0
 4608 00a0 1C1C     	 add r4,r3,#0
 4609 00a2 BB6A     	 ldr r3,[r7,#40]
 4610 00a4 1A68     	 ldr r2,[r3]
 4611 00a6 0F4B     	 ldr r3,.L193+24
 4612 00a8 1B68     	 ldr r3,[r3]
 4613 00aa 101C     	 add r0,r2,#0
 4614 00ac 191C     	 add r1,r3,#0
 4615 00ae FFF7FEFF 	 bl __aeabi_fmul
 4616 00b2 031C     	 add r3,r0,#0
 4617 00b4 201C     	 add r0,r4,#0
 4618 00b6 191C     	 add r1,r3,#0
 4619 00b8 FFF7FEFF 	 bl __aeabi_fadd
 4620 00bc 031C     	 add r3,r0,#0
 4621 00be 1A1C     	 add r2,r3,#0
 4622 00c0 3B68     	 ldr r3,[r7]
 4623 00c2 1A60     	 str r2,[r3]
1213:../main.c     **** }
 4624              	 .loc 1 1213 0
 4625 00c4 BD46     	 mov sp,r7
 4626 00c6 07B0     	 add sp,sp,#28
 4627              	 
 4628 00c8 90BD     	 pop {r4,r7,pc}
 4629              	.L194:
 4630 00ca C046     	 .align 2
 4631              	.L193:
 4632 00cc 0000FA45 	 .word 1174011904
 4633 00d0 0000FAC5 	 .word -973471744
 4634 00d4 00007A46 	 .word 1182400512
 4635 00d8 00000000 	 .word aIObs
 4636 00dc 00000000 	 .word b1IObs
 4637 00e0 00000000 	 .word b2IObs
 4638 00e4 00000000 	 .word b3IObs
 4639              	 .cfi_endproc
 4640              	.LFE485:
 4642              	 .global __aeabi_dcmplt
 4643              	 .global __aeabi_dcmpgt
 4644              	 .section .text.BEMFobsCoeffCal,"ax",%progbits
 4645              	 .align 2
 4646              	 .global BEMFobsCoeffCal
 4647              	 .code 16
 4648              	 .thumb_func
 4650              	BEMFobsCoeffCal:
 4651              	.LFB486:
1214:../main.c     **** /*
1215:../main.c     ****  Function: tinh toan he so bo quan sat back emf
1216:../main.c     ****  Input:We toc do khi chay do duoc
1217:../main.c     ****  Output:he so bo quan sat BEMFobserver
1218:../main.c     ****  */
1219:../main.c     **** void BEMFobsCoeffCal(float WeObs)
1220:../main.c     **** {
 4652              	 .loc 1 1220 0
 4653              	 .cfi_startproc
 4654 0000 90B5     	 push {r4,r7,lr}
 4655              	.LCFI56:
 4656              	 .cfi_def_cfa_offset 12
 4657              	 .cfi_offset 4,-12
 4658              	 .cfi_offset 7,-8
 4659              	 .cfi_offset 14,-4
 4660 0002 85B0     	 sub sp,sp,#20
 4661              	.LCFI57:
 4662              	 .cfi_def_cfa_offset 32
 4663 0004 00AF     	 add r7,sp,#0
 4664              	.LCFI58:
 4665              	 .cfi_def_cfa_register 7
 4666 0006 7860     	 str r0,[r7,#4]
1221:../main.c     ****     float tmp1;
1222:../main.c     ****     float tmp2;
1223:../main.c     **** 
1224:../main.c     ****     if((0.000001 > WeObs) && (0.000001 < WeObs))
 4667              	 .loc 1 1224 0
 4668 0008 7868     	 ldr r0,[r7,#4]
 4669 000a FFF7FEFF 	 bl __aeabi_f2d
 4670 000e 031C     	 mov r3,r0
 4671 0010 0C1C     	 mov r4,r1
 4672 0012 181C     	 mov r0,r3
 4673 0014 211C     	 mov r1,r4
 4674 0016 314A     	 ldr r2,.L202
 4675 0018 314B     	 ldr r3,.L202+4
 4676 001a FFF7FEFF 	 bl __aeabi_dcmplt
 4677 001e 031E     	 sub r3,r0,#0
 4678 0020 0DD0     	 beq .L196
 4679              	 .loc 1 1224 0 is_stmt 0 discriminator 1
 4680 0022 7868     	 ldr r0,[r7,#4]
 4681 0024 FFF7FEFF 	 bl __aeabi_f2d
 4682 0028 031C     	 mov r3,r0
 4683 002a 0C1C     	 mov r4,r1
 4684 002c 181C     	 mov r0,r3
 4685 002e 211C     	 mov r1,r4
 4686 0030 2A4A     	 ldr r2,.L202
 4687 0032 2B4B     	 ldr r3,.L202+4
 4688 0034 FFF7FEFF 	 bl __aeabi_dcmpgt
 4689 0038 031E     	 sub r3,r0,#0
 4690 003a 00D0     	 beq .L196
1225:../main.c     ****     {
1226:../main.c     ****         return;
 4691              	 .loc 1 1226 0 is_stmt 1
 4692 003c 4AE0     	 b .L195
 4693              	.L196:
1227:../main.c     ****     }
1228:../main.c     **** 
1229:../main.c     ****     tmp1 = WeObs * Ts;
 4694              	 .loc 1 1229 0
 4695 003e 7868     	 ldr r0,[r7,#4]
 4696 0040 0021     	 mov r1,#0
 4697 0042 FFF7FEFF 	 bl __aeabi_fmul
 4698 0046 031C     	 add r3,r0,#0
 4699 0048 FB60     	 str r3,[r7,#12]
1230:../main.c     ****     a1BEMFobs = cosChebyshevF(tmp1);
 4700              	 .loc 1 1230 0
 4701 004a FB68     	 ldr r3,[r7,#12]
 4702 004c 181C     	 add r0,r3,#0
 4703 004e FFF7FEFF 	 bl cosChebyshevF
 4704 0052 021C     	 add r2,r0,#0
 4705 0054 234B     	 ldr r3,.L202+8
 4706 0056 1A60     	 str r2,[r3]
1231:../main.c     ****     a2BEMFobs = sinChebyshevF(tmp1);
 4707              	 .loc 1 1231 0
 4708 0058 FB68     	 ldr r3,[r7,#12]
 4709 005a 181C     	 add r0,r3,#0
 4710 005c FFF7FEFF 	 bl sinChebyshevF
 4711 0060 021C     	 add r2,r0,#0
 4712 0062 214B     	 ldr r3,.L202+12
 4713 0064 1A60     	 str r2,[r3]
1232:../main.c     ****     tmp1 = 1.0f - a1BEMFobs;
 4714              	 .loc 1 1232 0
 4715 0066 1F4B     	 ldr r3,.L202+8
 4716 0068 1B68     	 ldr r3,[r3]
 4717 006a FE20     	 mov r0,#254
 4718 006c 8005     	 lsl r0,r0,#22
 4719 006e 191C     	 add r1,r3,#0
 4720 0070 FFF7FEFF 	 bl __aeabi_fsub
 4721 0074 031C     	 add r3,r0,#0
 4722 0076 FB60     	 str r3,[r7,#12]
1233:../main.c     ****     tmp2 = bemfObserver_gain / WeObs;
 4723              	 .loc 1 1233 0
 4724 0078 1C48     	 ldr r0,.L202+16
 4725 007a 7968     	 ldr r1,[r7,#4]
 4726 007c FFF7FEFF 	 bl __aeabi_fdiv
 4727 0080 031C     	 add r3,r0,#0
 4728 0082 BB60     	 str r3,[r7,#8]
1234:../main.c     ****     b1BEMFobs = ((tmp2 * a2BEMFobs) + tmp1) * Ls;
 4729              	 .loc 1 1234 0
 4730 0084 184B     	 ldr r3,.L202+12
 4731 0086 1B68     	 ldr r3,[r3]
 4732 0088 181C     	 add r0,r3,#0
 4733 008a B968     	 ldr r1,[r7,#8]
 4734 008c FFF7FEFF 	 bl __aeabi_fmul
 4735 0090 031C     	 add r3,r0,#0
 4736 0092 181C     	 add r0,r3,#0
 4737 0094 F968     	 ldr r1,[r7,#12]
 4738 0096 FFF7FEFF 	 bl __aeabi_fadd
 4739 009a 031C     	 add r3,r0,#0
 4740 009c 181C     	 add r0,r3,#0
 4741 009e 1449     	 ldr r1,.L202+20
 4742 00a0 FFF7FEFF 	 bl __aeabi_fmul
 4743 00a4 031C     	 add r3,r0,#0
 4744 00a6 1A1C     	 add r2,r3,#0
 4745 00a8 124B     	 ldr r3,.L202+24
 4746 00aa 1A60     	 str r2,[r3]
1235:../main.c     ****     b2BEMFobs = (a2BEMFobs - (tmp2 * tmp1)) * Ls;
 4747              	 .loc 1 1235 0
 4748 00ac 0E4B     	 ldr r3,.L202+12
 4749 00ae 1C68     	 ldr r4,[r3]
 4750 00b0 B868     	 ldr r0,[r7,#8]
 4751 00b2 F968     	 ldr r1,[r7,#12]
 4752 00b4 FFF7FEFF 	 bl __aeabi_fmul
 4753 00b8 031C     	 add r3,r0,#0
 4754 00ba 201C     	 add r0,r4,#0
 4755 00bc 191C     	 add r1,r3,#0
 4756 00be FFF7FEFF 	 bl __aeabi_fsub
 4757 00c2 031C     	 add r3,r0,#0
 4758 00c4 181C     	 add r0,r3,#0
 4759 00c6 0A49     	 ldr r1,.L202+20
 4760 00c8 FFF7FEFF 	 bl __aeabi_fmul
 4761 00cc 031C     	 add r3,r0,#0
 4762 00ce 1A1C     	 add r2,r3,#0
 4763 00d0 094B     	 ldr r3,.L202+28
 4764 00d2 1A60     	 str r2,[r3]
 4765              	.L195:
1236:../main.c     **** }
 4766              	 .loc 1 1236 0
 4767 00d4 BD46     	 mov sp,r7
 4768 00d6 05B0     	 add sp,sp,#20
 4769              	 
 4770 00d8 90BD     	 pop {r4,r7,pc}
 4771              	.L203:
 4772 00da C046     	 .align 2
 4773              	.L202:
 4774 00dc 8DEDB5A0 	 .word -1598689907
 4775 00e0 F7C6B03E 	 .word 1051772663
 4776 00e4 00000000 	 .word a1BEMFobs
 4777 00e8 00000000 	 .word a2BEMFobs
 4778 00ec 00007AC4 	 .word -998637568
 4779 00f0 AF5A193B 	 .word 991517359
 4780 00f4 00000000 	 .word b1BEMFobs
 4781 00f8 00000000 	 .word b2BEMFobs
 4782              	 .cfi_endproc
 4783              	.LFE486:
 4785              	 .section .text.BEMFobserver,"ax",%progbits
 4786              	 .align 2
 4787              	 .global BEMFobserver
 4788              	 .code 16
 4789              	 .thumb_func
 4791              	BEMFobserver:
 4792              	.LFB487:
1237:../main.c     **** /*
1238:../main.c     ****  Function: Tinh toan back emf uoc luong
1239:../main.c     ****  Input:Balpha, Bbeta
1240:../main.c     ****  Output:EalphaHat,EbetaHat
1241:../main.c     ****  */
1242:../main.c     **** void BEMFobserver(float * E1hat, float E2hat, float B1, float B2)
1243:../main.c     **** {
 4793              	 .loc 1 1243 0
 4794              	 .cfi_startproc
 4795 0000 90B5     	 push {r4,r7,lr}
 4796              	.LCFI59:
 4797              	 .cfi_def_cfa_offset 12
 4798              	 .cfi_offset 4,-12
 4799              	 .cfi_offset 7,-8
 4800              	 .cfi_offset 14,-4
 4801 0002 85B0     	 sub sp,sp,#20
 4802              	.LCFI60:
 4803              	 .cfi_def_cfa_offset 32
 4804 0004 00AF     	 add r7,sp,#0
 4805              	.LCFI61:
 4806              	 .cfi_def_cfa_register 7
 4807 0006 F860     	 str r0,[r7,#12]
 4808 0008 B960     	 str r1,[r7,#8]
 4809 000a 7A60     	 str r2,[r7,#4]
 4810 000c 3B60     	 str r3,[r7]
1244:../main.c     ****      *E1hat =  (a1BEMFobs * (*E1hat)) + (a2BEMFobs * E2hat) + (b1BEMFobs * B1) + (b2BEMFobs * B2);
 4811              	 .loc 1 1244 0
 4812 000e FB68     	 ldr r3,[r7,#12]
 4813 0010 1A68     	 ldr r2,[r3]
 4814 0012 1A4B     	 ldr r3,.L205
 4815 0014 1B68     	 ldr r3,[r3]
 4816 0016 101C     	 add r0,r2,#0
 4817 0018 191C     	 add r1,r3,#0
 4818 001a FFF7FEFF 	 bl __aeabi_fmul
 4819 001e 031C     	 add r3,r0,#0
 4820 0020 1C1C     	 add r4,r3,#0
 4821 0022 174B     	 ldr r3,.L205+4
 4822 0024 1B68     	 ldr r3,[r3]
 4823 0026 181C     	 add r0,r3,#0
 4824 0028 B968     	 ldr r1,[r7,#8]
 4825 002a FFF7FEFF 	 bl __aeabi_fmul
 4826 002e 031C     	 add r3,r0,#0
 4827 0030 201C     	 add r0,r4,#0
 4828 0032 191C     	 add r1,r3,#0
 4829 0034 FFF7FEFF 	 bl __aeabi_fadd
 4830 0038 031C     	 add r3,r0,#0
 4831 003a 1C1C     	 add r4,r3,#0
 4832 003c 114B     	 ldr r3,.L205+8
 4833 003e 1B68     	 ldr r3,[r3]
 4834 0040 181C     	 add r0,r3,#0
 4835 0042 7968     	 ldr r1,[r7,#4]
 4836 0044 FFF7FEFF 	 bl __aeabi_fmul
 4837 0048 031C     	 add r3,r0,#0
 4838 004a 201C     	 add r0,r4,#0
 4839 004c 191C     	 add r1,r3,#0
 4840 004e FFF7FEFF 	 bl __aeabi_fadd
 4841 0052 031C     	 add r3,r0,#0
 4842 0054 1C1C     	 add r4,r3,#0
 4843 0056 0C4B     	 ldr r3,.L205+12
 4844 0058 1B68     	 ldr r3,[r3]
 4845 005a 181C     	 add r0,r3,#0
 4846 005c 3968     	 ldr r1,[r7]
 4847 005e FFF7FEFF 	 bl __aeabi_fmul
 4848 0062 031C     	 add r3,r0,#0
 4849 0064 201C     	 add r0,r4,#0
 4850 0066 191C     	 add r1,r3,#0
 4851 0068 FFF7FEFF 	 bl __aeabi_fadd
 4852 006c 031C     	 add r3,r0,#0
 4853 006e 1A1C     	 add r2,r3,#0
 4854 0070 FB68     	 ldr r3,[r7,#12]
 4855 0072 1A60     	 str r2,[r3]
1245:../main.c     **** }
 4856              	 .loc 1 1245 0
 4857 0074 BD46     	 mov sp,r7
 4858 0076 05B0     	 add sp,sp,#20
 4859              	 
 4860 0078 90BD     	 pop {r4,r7,pc}
 4861              	.L206:
 4862 007a C046     	 .align 2
 4863              	.L205:
 4864 007c 00000000 	 .word a1BEMFobs
 4865 0080 00000000 	 .word a2BEMFobs
 4866 0084 00000000 	 .word b1BEMFobs
 4867 0088 00000000 	 .word b2BEMFobs
 4868              	 .cfi_endproc
 4869              	.LFE487:
 4871              	 .section .text.exeSMO,"ax",%progbits
 4872              	 .align 2
 4873              	 .global exeSMO
 4874              	 .code 16
 4875              	 .thumb_func
 4877              	exeSMO:
 4878              	.LFB488:
1246:../main.c     **** void exeSMO(void){
 4879              	 .loc 1 1246 0
 4880              	 .cfi_startproc
 4881 0000 90B5     	 push {r4,r7,lr}
 4882              	.LCFI62:
 4883              	 .cfi_def_cfa_offset 12
 4884              	 .cfi_offset 4,-12
 4885              	 .cfi_offset 7,-8
 4886              	 .cfi_offset 14,-4
 4887 0002 85B0     	 sub sp,sp,#20
 4888              	.LCFI63:
 4889              	 .cfi_def_cfa_offset 32
 4890 0004 02AF     	 add r7,sp,#8
 4891              	.LCFI64:
 4892              	 .cfi_def_cfa 7,24
1247:../main.c     **** 	float zEalphaHat;
1248:../main.c     **** 	currentObserver(current_alpha, Usalpha, EalphaHat, &IalphaHat, &Balpha);
 4893              	 .loc 1 1248 0
 4894 0006 1F4B     	 ldr r3,.L208
 4895 0008 1868     	 ldr r0,[r3]
 4896 000a 1F4B     	 ldr r3,.L208+4
 4897 000c 1968     	 ldr r1,[r3]
 4898 000e 1F4B     	 ldr r3,.L208+8
 4899 0010 1A68     	 ldr r2,[r3]
 4900 0012 1F4C     	 ldr r4,.L208+12
 4901 0014 1F4B     	 ldr r3,.L208+16
 4902 0016 0093     	 str r3,[sp]
 4903 0018 231C     	 mov r3,r4
 4904 001a FFF7FEFF 	 bl currentObserver
1249:../main.c     **** 	currentObserver(current_beta, Usbeta, EbetaHat, &IbetaHat, &Bbeta);
 4905              	 .loc 1 1249 0
 4906 001e 1E4B     	 ldr r3,.L208+20
 4907 0020 1868     	 ldr r0,[r3]
 4908 0022 1E4B     	 ldr r3,.L208+24
 4909 0024 1968     	 ldr r1,[r3]
 4910 0026 1E4B     	 ldr r3,.L208+28
 4911 0028 1A68     	 ldr r2,[r3]
 4912 002a 1E4C     	 ldr r4,.L208+32
 4913 002c 1E4B     	 ldr r3,.L208+36
 4914 002e 0093     	 str r3,[sp]
 4915 0030 231C     	 mov r3,r4
 4916 0032 FFF7FEFF 	 bl currentObserver
1250:../main.c     **** 	zEalphaHat = EalphaHat;
 4917              	 .loc 1 1250 0
 4918 0036 154B     	 ldr r3,.L208+8
 4919 0038 1B68     	 ldr r3,[r3]
 4920 003a 7B60     	 str r3,[r7,#4]
1251:../main.c     **** 	BEMFobsCoeffCal(We);
 4921              	 .loc 1 1251 0
 4922 003c 1B4B     	 ldr r3,.L208+40
 4923 003e 1B68     	 ldr r3,[r3]
 4924 0040 181C     	 add r0,r3,#0
 4925 0042 FFF7FEFF 	 bl BEMFobsCoeffCal
1252:../main.c     **** 	BEMFobserver(&EalphaHat, -EbetaHat, Balpha, Bbeta);
 4926              	 .loc 1 1252 0
 4927 0046 164B     	 ldr r3,.L208+28
 4928 0048 1B68     	 ldr r3,[r3]
 4929 004a 8022     	 mov r2,#128
 4930 004c 1206     	 lsl r2,r2,#24
 4931 004e 5A40     	 eor r2,r3
 4932 0050 111C     	 mov r1,r2
 4933 0052 104B     	 ldr r3,.L208+16
 4934 0054 1A68     	 ldr r2,[r3]
 4935 0056 144B     	 ldr r3,.L208+36
 4936 0058 1B68     	 ldr r3,[r3]
 4937 005a 0C48     	 ldr r0,.L208+8
 4938 005c FFF7FEFF 	 bl BEMFobserver
1253:../main.c     **** 	BEMFobserver(&EbetaHat, zEalphaHat, Bbeta, -Balpha);
 4939              	 .loc 1 1253 0
 4940 0060 114B     	 ldr r3,.L208+36
 4941 0062 1C68     	 ldr r4,[r3]
 4942 0064 0B4B     	 ldr r3,.L208+16
 4943 0066 1B68     	 ldr r3,[r3]
 4944 0068 8022     	 mov r2,#128
 4945 006a 1206     	 lsl r2,r2,#24
 4946 006c 5340     	 eor r3,r2
 4947 006e 0C49     	 ldr r1,.L208+28
 4948 0070 7A68     	 ldr r2,[r7,#4]
 4949 0072 081C     	 mov r0,r1
 4950 0074 111C     	 add r1,r2,#0
 4951 0076 221C     	 add r2,r4,#0
 4952 0078 FFF7FEFF 	 bl BEMFobserver
1254:../main.c     **** }
 4953              	 .loc 1 1254 0
 4954 007c BD46     	 mov sp,r7
 4955 007e 03B0     	 add sp,sp,#12
 4956              	 
 4957 0080 90BD     	 pop {r4,r7,pc}
 4958              	.L209:
 4959 0082 C046     	 .align 2
 4960              	.L208:
 4961 0084 00000000 	 .word current_alpha
 4962 0088 00000000 	 .word Usalpha
 4963 008c 00000000 	 .word EalphaHat
 4964 0090 00000000 	 .word IalphaHat
 4965 0094 00000000 	 .word Balpha
 4966 0098 00000000 	 .word current_beta
 4967 009c 00000000 	 .word Usbeta
 4968 00a0 00000000 	 .word EbetaHat
 4969 00a4 00000000 	 .word IbetaHat
 4970 00a8 00000000 	 .word Bbeta
 4971 00ac 00000000 	 .word We
 4972              	 .cfi_endproc
 4973              	.LFE488:
 4975              	 .section .text.polynmApproxAtanf,"ax",%progbits
 4976              	 .align 2
 4977              	 .global polynmApproxAtanf
 4978              	 .code 16
 4979              	 .thumb_func
 4981              	polynmApproxAtanf:
 4982              	.LFB489:
1255:../main.c     **** /*
1256:../main.c     ****  Function: Tinh toan arctan cua gia tri tan=sin/cos
1257:../main.c     ****  Input:tanVal
1258:../main.c     ****  Output: tra ve goc trong khoang -pi/2 den pi/2
1259:../main.c     ****  */
1260:../main.c     **** float polynmApproxAtanf(float tanVal)
1261:../main.c     **** {
 4983              	 .loc 1 1261 0
 4984              	 .cfi_startproc
 4985 0000 80B5     	 push {r7,lr}
 4986              	.LCFI65:
 4987              	 .cfi_def_cfa_offset 8
 4988              	 .cfi_offset 7,-8
 4989              	 .cfi_offset 14,-4
 4990 0002 84B0     	 sub sp,sp,#16
 4991              	.LCFI66:
 4992              	 .cfi_def_cfa_offset 24
 4993 0004 00AF     	 add r7,sp,#0
 4994              	.LCFI67:
 4995              	 .cfi_def_cfa_register 7
 4996 0006 7860     	 str r0,[r7,#4]
1262:../main.c     ****     float z, zz;
1263:../main.c     **** 
1264:../main.c     ****     if(1.0f < tanVal)
 4997              	 .loc 1 1264 0
 4998 0008 7868     	 ldr r0,[r7,#4]
 4999 000a FE21     	 mov r1,#254
 5000 000c 8905     	 lsl r1,r1,#22
 5001 000e FFF7FEFF 	 bl __aeabi_fcmpgt
 5002 0012 031E     	 sub r3,r0,#0
 5003 0014 03D0     	 beq .L219
1265:../main.c     ****     {
1266:../main.c     ****         z = 1;
 5004              	 .loc 1 1266 0
 5005 0016 FE23     	 mov r3,#254
 5006 0018 9B05     	 lsl r3,r3,#22
 5007 001a FB60     	 str r3,[r7,#12]
 5008 001c 0AE0     	 b .L213
 5009              	.L219:
1267:../main.c     ****     }
1268:../main.c     ****     else if(-1.0f > tanVal)
 5010              	 .loc 1 1268 0
 5011 001e 7868     	 ldr r0,[r7,#4]
 5012 0020 1649     	 ldr r1,.L221
 5013 0022 FFF7FEFF 	 bl __aeabi_fcmplt
 5014 0026 031E     	 sub r3,r0,#0
 5015 0028 02D0     	 beq .L220
1269:../main.c     ****     {
1270:../main.c     ****         z = -1;
 5016              	 .loc 1 1270 0
 5017 002a 144B     	 ldr r3,.L221
 5018 002c FB60     	 str r3,[r7,#12]
 5019 002e 01E0     	 b .L213
 5020              	.L220:
1271:../main.c     ****     }
1272:../main.c     ****     else
1273:../main.c     ****     {
1274:../main.c     ****         z = tanVal;
 5021              	 .loc 1 1274 0
 5022 0030 7B68     	 ldr r3,[r7,#4]
 5023 0032 FB60     	 str r3,[r7,#12]
 5024              	.L213:
1275:../main.c     ****     }
1276:../main.c     **** 
1277:../main.c     ****     zz = z * z;
 5025              	 .loc 1 1277 0
 5026 0034 F868     	 ldr r0,[r7,#12]
 5027 0036 F968     	 ldr r1,[r7,#12]
 5028 0038 FFF7FEFF 	 bl __aeabi_fmul
 5029 003c 031C     	 add r3,r0,#0
 5030 003e BB60     	 str r3,[r7,#8]
1278:../main.c     **** 
1279:../main.c     ****     return ((RL_A*zz + RL_B)*zz + RL_C)*z;
 5031              	 .loc 1 1279 0
 5032 0040 B868     	 ldr r0,[r7,#8]
 5033 0042 0F49     	 ldr r1,.L221+4
 5034 0044 FFF7FEFF 	 bl __aeabi_fmul
 5035 0048 031C     	 add r3,r0,#0
 5036 004a 181C     	 add r0,r3,#0
 5037 004c 0D49     	 ldr r1,.L221+8
 5038 004e FFF7FEFF 	 bl __aeabi_fsub
 5039 0052 031C     	 add r3,r0,#0
 5040 0054 181C     	 add r0,r3,#0
 5041 0056 B968     	 ldr r1,[r7,#8]
 5042 0058 FFF7FEFF 	 bl __aeabi_fmul
 5043 005c 031C     	 add r3,r0,#0
 5044 005e 181C     	 add r0,r3,#0
 5045 0060 0949     	 ldr r1,.L221+12
 5046 0062 FFF7FEFF 	 bl __aeabi_fadd
 5047 0066 031C     	 add r3,r0,#0
 5048 0068 181C     	 add r0,r3,#0
 5049 006a F968     	 ldr r1,[r7,#12]
 5050 006c FFF7FEFF 	 bl __aeabi_fmul
 5051 0070 031C     	 add r3,r0,#0
1280:../main.c     **** }
 5052              	 .loc 1 1280 0
 5053 0072 181C     	 add r0,r3,#0
 5054 0074 BD46     	 mov sp,r7
 5055 0076 04B0     	 add sp,sp,#16
 5056              	 
 5057 0078 80BD     	 pop {r7,pc}
 5058              	.L222:
 5059 007a C046     	 .align 2
 5060              	.L221:
 5061 007c 000080BF 	 .word -1082130432
 5062 0080 77079F3D 	 .word 1033832311
 5063 0084 9D2A933E 	 .word 1049832093
 5064 0088 3AC47E3F 	 .word 1065272378
 5065              	 .cfi_endproc
 5066              	.LFE489:
 5068              	 .section .text.polynmApproxAtan2f,"ax",%progbits
 5069              	 .align 2
 5070              	 .global polynmApproxAtan2f
 5071              	 .code 16
 5072              	 .thumb_func
 5074              	polynmApproxAtan2f:
 5075              	.LFB490:
1281:../main.c     **** /*
1282:../main.c     ****  Function:Tinh toan arctan cua gia tri tan=sin/cos (nam trong toan bo 4 goc phan tu cua vong tron l
1283:../main.c     ****  Input:sin(), cos()
1284:../main.c     ****  Output:tra ve goc trong vong tron luong giac
1285:../main.c     ****  */
1286:../main.c     **** float polynmApproxAtan2f(float y, float x)
1287:../main.c     **** {
 5076              	 .loc 1 1287 0
 5077              	 .cfi_startproc
 5078 0000 80B5     	 push {r7,lr}
 5079              	.LCFI68:
 5080              	 .cfi_def_cfa_offset 8
 5081              	 .cfi_offset 7,-8
 5082              	 .cfi_offset 14,-4
 5083 0002 86B0     	 sub sp,sp,#24
 5084              	.LCFI69:
 5085              	 .cfi_def_cfa_offset 32
 5086 0004 00AF     	 add r7,sp,#0
 5087              	.LCFI70:
 5088              	 .cfi_def_cfa_register 7
 5089 0006 7860     	 str r0,[r7,#4]
 5090 0008 3960     	 str r1,[r7]
1288:../main.c     ****     float tmp1, tmp2, z;
1289:../main.c     **** 
1290:../main.c     ****     tmp1 = floatAbs(y);
 5091              	 .loc 1 1290 0
 5092 000a 7B68     	 ldr r3,[r7,#4]
 5093 000c 181C     	 add r0,r3,#0
 5094 000e FFF7FEFF 	 bl floatAbs
 5095 0012 031C     	 add r3,r0,#0
 5096 0014 7B61     	 str r3,[r7,#20]
1291:../main.c     ****     tmp2 = floatAbs(x);
 5097              	 .loc 1 1291 0
 5098 0016 3B68     	 ldr r3,[r7]
 5099 0018 181C     	 add r0,r3,#0
 5100 001a FFF7FEFF 	 bl floatAbs
 5101 001e 031C     	 add r3,r0,#0
 5102 0020 3B61     	 str r3,[r7,#16]
1292:../main.c     ****     z = (tmp1 > tmp2) ? (tmp1) : (tmp2);
 5103              	 .loc 1 1292 0
 5104 0022 7869     	 ldr r0,[r7,#20]
 5105 0024 3969     	 ldr r1,[r7,#16]
 5106 0026 FFF7FEFF 	 bl __aeabi_fcmpgt
 5107 002a 031E     	 sub r3,r0,#0
 5108 002c 01D0     	 beq .L246
 5109              	 .loc 1 1292 0 is_stmt 0 discriminator 1
 5110 002e 7B69     	 ldr r3,[r7,#20]
 5111 0030 00E0     	 b .L226
 5112              	.L246:
 5113              	 .loc 1 1292 0 discriminator 2
 5114 0032 3B69     	 ldr r3,[r7,#16]
 5115              	.L226:
 5116              	 .loc 1 1292 0 discriminator 4
 5117 0034 FB60     	 str r3,[r7,#12]
1293:../main.c     **** 
1294:../main.c     ****     if(z < RL_EPSILON_F)
 5118              	 .loc 1 1294 0 is_stmt 1 discriminator 4
 5119 0036 F868     	 ldr r0,[r7,#12]
 5120 0038 2E49     	 ldr r1,.L252
 5121 003a FFF7FEFF 	 bl __aeabi_fcmplt
 5122 003e 031E     	 sub r3,r0,#0
 5123 0040 01D0     	 beq .L247
1295:../main.c     ****     {
1296:../main.c     ****         return 0.0f;
 5124              	 .loc 1 1296 0
 5125 0042 0023     	 mov r3,#0
 5126 0044 52E0     	 b .L229
 5127              	.L247:
1297:../main.c     ****     }
1298:../main.c     **** 
1299:../main.c     ****     if(tmp2 >= tmp1)
 5128              	 .loc 1 1299 0
 5129 0046 3869     	 ldr r0,[r7,#16]
 5130 0048 7969     	 ldr r1,[r7,#20]
 5131 004a FFF7FEFF 	 bl __aeabi_fcmpge
 5132 004e 031E     	 sub r3,r0,#0
 5133 0050 28D0     	 beq .L248
1300:../main.c     ****     {
1301:../main.c     ****         z = y / x;
 5134              	 .loc 1 1301 0
 5135 0052 7868     	 ldr r0,[r7,#4]
 5136 0054 3968     	 ldr r1,[r7]
 5137 0056 FFF7FEFF 	 bl __aeabi_fdiv
 5138 005a 031C     	 add r3,r0,#0
 5139 005c FB60     	 str r3,[r7,#12]
1302:../main.c     ****         tmp2 = polynmApproxAtanf(z);
 5140              	 .loc 1 1302 0
 5141 005e FB68     	 ldr r3,[r7,#12]
 5142 0060 181C     	 add r0,r3,#0
 5143 0062 FFF7FEFF 	 bl polynmApproxAtanf
 5144 0066 031C     	 add r3,r0,#0
 5145 0068 3B61     	 str r3,[r7,#16]
1303:../main.c     ****         if(x > 0)
 5146              	 .loc 1 1303 0
 5147 006a 3868     	 ldr r0,[r7]
 5148 006c 0021     	 mov r1,#0
 5149 006e FFF7FEFF 	 bl __aeabi_fcmpgt
 5150 0072 031E     	 sub r3,r0,#0
 5151 0074 02D0     	 beq .L249
1304:../main.c     ****         {
1305:../main.c     ****             tmp1 = tmp2;
 5152              	 .loc 1 1305 0
 5153 0076 3B69     	 ldr r3,[r7,#16]
 5154 0078 7B61     	 str r3,[r7,#20]
 5155 007a 36E0     	 b .L237
 5156              	.L249:
1306:../main.c     ****         }
1307:../main.c     ****         else if(y > 0)
 5157              	 .loc 1 1307 0
 5158 007c 7868     	 ldr r0,[r7,#4]
 5159 007e 0021     	 mov r1,#0
 5160 0080 FFF7FEFF 	 bl __aeabi_fcmpgt
 5161 0084 031E     	 sub r3,r0,#0
 5162 0086 06D0     	 beq .L250
1308:../main.c     ****         {
1309:../main.c     ****             tmp1 = tmp2 + (float)M_PI;
 5163              	 .loc 1 1309 0
 5164 0088 3869     	 ldr r0,[r7,#16]
 5165 008a 1B49     	 ldr r1,.L252+4
 5166 008c FFF7FEFF 	 bl __aeabi_fadd
 5167 0090 031C     	 add r3,r0,#0
 5168 0092 7B61     	 str r3,[r7,#20]
 5169 0094 29E0     	 b .L237
 5170              	.L250:
1310:../main.c     ****         }
1311:../main.c     ****         else
1312:../main.c     ****         {
1313:../main.c     ****             tmp1 = tmp2 - (float)M_PI;
 5171              	 .loc 1 1313 0
 5172 0096 3869     	 ldr r0,[r7,#16]
 5173 0098 1749     	 ldr r1,.L252+4
 5174 009a FFF7FEFF 	 bl __aeabi_fsub
 5175 009e 031C     	 add r3,r0,#0
 5176 00a0 7B61     	 str r3,[r7,#20]
 5177 00a2 22E0     	 b .L237
 5178              	.L248:
1314:../main.c     ****         }
1315:../main.c     ****     }
1316:../main.c     ****     else
1317:../main.c     ****     {
1318:../main.c     ****         z = x / y;
 5179              	 .loc 1 1318 0
 5180 00a4 3868     	 ldr r0,[r7]
 5181 00a6 7968     	 ldr r1,[r7,#4]
 5182 00a8 FFF7FEFF 	 bl __aeabi_fdiv
 5183 00ac 031C     	 add r3,r0,#0
 5184 00ae FB60     	 str r3,[r7,#12]
1319:../main.c     ****         tmp2 = polynmApproxAtanf(z);
 5185              	 .loc 1 1319 0
 5186 00b0 FB68     	 ldr r3,[r7,#12]
 5187 00b2 181C     	 add r0,r3,#0
 5188 00b4 FFF7FEFF 	 bl polynmApproxAtanf
 5189 00b8 031C     	 add r3,r0,#0
 5190 00ba 3B61     	 str r3,[r7,#16]
1320:../main.c     ****         if(y > 0)
 5191              	 .loc 1 1320 0
 5192 00bc 7868     	 ldr r0,[r7,#4]
 5193 00be 0021     	 mov r1,#0
 5194 00c0 FFF7FEFF 	 bl __aeabi_fcmpgt
 5195 00c4 031E     	 sub r3,r0,#0
 5196 00c6 06D0     	 beq .L251
1321:../main.c     ****         {
1322:../main.c     ****             tmp1 = -tmp2 + (float)M_PI_2;
 5197              	 .loc 1 1322 0
 5198 00c8 0C48     	 ldr r0,.L252+8
 5199 00ca 3969     	 ldr r1,[r7,#16]
 5200 00cc FFF7FEFF 	 bl __aeabi_fsub
 5201 00d0 031C     	 add r3,r0,#0
 5202 00d2 7B61     	 str r3,[r7,#20]
 5203 00d4 09E0     	 b .L237
 5204              	.L251:
1323:../main.c     ****         }
1324:../main.c     ****         else
1325:../main.c     ****         {
1326:../main.c     ****             tmp1 = -tmp2 - (float)M_PI_2;
 5205              	 .loc 1 1326 0
 5206 00d6 3B69     	 ldr r3,[r7,#16]
 5207 00d8 8022     	 mov r2,#128
 5208 00da 1206     	 lsl r2,r2,#24
 5209 00dc 5340     	 eor r3,r2
 5210 00de 181C     	 add r0,r3,#0
 5211 00e0 0649     	 ldr r1,.L252+8
 5212 00e2 FFF7FEFF 	 bl __aeabi_fsub
 5213 00e6 031C     	 add r3,r0,#0
 5214 00e8 7B61     	 str r3,[r7,#20]
 5215              	.L237:
1327:../main.c     ****         }
1328:../main.c     ****     }
1329:../main.c     **** 
1330:../main.c     ****     return tmp1;
 5216              	 .loc 1 1330 0
 5217 00ea 7B69     	 ldr r3,[r7,#20]
 5218              	.L229:
1331:../main.c     **** }
 5219              	 .loc 1 1331 0
 5220 00ec 181C     	 add r0,r3,#0
 5221 00ee BD46     	 mov sp,r7
 5222 00f0 06B0     	 add sp,sp,#24
 5223              	 
 5224 00f2 80BD     	 pop {r7,pc}
 5225              	.L253:
 5226              	 .align 2
 5227              	.L252:
 5228 00f4 77CC2B32 	 .word 841731191
 5229 00f8 DB0F4940 	 .word 1078530011
 5230 00fc DB0FC93F 	 .word 1070141403
 5231              	 .cfi_endproc
 5232              	.LFE490:
 5234              	 .section .text.ThetaCal,"ax",%progbits
 5235              	 .align 2
 5236              	 .global ThetaCal
 5237              	 .code 16
 5238              	 .thumb_func
 5240              	ThetaCal:
 5241              	.LFB491:
1332:../main.c     **** 
1333:../main.c     **** /*
1334:../main.c     ****  Function:Tinh toan goc dong co
1335:../main.c     ****  Input:EbetaHat,EalphaHat
1336:../main.c     ****  Output:positionTHI,positionTHO (goc dong co tai thoi diem t va t+1)
1337:../main.c     ****  */
1338:../main.c     **** void ThetaCal(void){
 5242              	 .loc 1 1338 0
 5243              	 .cfi_startproc
 5244 0000 90B5     	 push {r4,r7,lr}
 5245              	.LCFI71:
 5246              	 .cfi_def_cfa_offset 12
 5247              	 .cfi_offset 4,-12
 5248              	 .cfi_offset 7,-8
 5249              	 .cfi_offset 14,-4
 5250 0002 85B0     	 sub sp,sp,#20
 5251              	.LCFI72:
 5252              	 .cfi_def_cfa_offset 32
 5253 0004 00AF     	 add r7,sp,#0
 5254              	.LCFI73:
 5255              	 .cfi_def_cfa_register 7
1339:../main.c     **** 	float tmp, tmp1, tmp2;
1340:../main.c     ****     tmp=polynmApproxAtan2f(EbetaHat,EalphaHat);
 5256              	 .loc 1 1340 0
 5257 0006 454B     	 ldr r3,.L278
 5258 0008 1A68     	 ldr r2,[r3]
 5259 000a 454B     	 ldr r3,.L278+4
 5260 000c 1B68     	 ldr r3,[r3]
 5261 000e 101C     	 add r0,r2,#0
 5262 0010 191C     	 add r1,r3,#0
 5263 0012 FFF7FEFF 	 bl polynmApproxAtan2f
 5264 0016 031C     	 add r3,r0,#0
 5265 0018 FB60     	 str r3,[r7,#12]
1341:../main.c     ****     if(0 > tmp)
 5266              	 .loc 1 1341 0
 5267 001a F868     	 ldr r0,[r7,#12]
 5268 001c 0021     	 mov r1,#0
 5269 001e FFF7FEFF 	 bl __aeabi_fcmplt
 5270 0022 031E     	 sub r3,r0,#0
 5271 0024 08D0     	 beq .L273
1342:../main.c     ****     {
1343:../main.c     ****         positionTH = tmp + 2*PI;
 5272              	 .loc 1 1343 0
 5273 0026 F868     	 ldr r0,[r7,#12]
 5274 0028 3E49     	 ldr r1,.L278+8
 5275 002a FFF7FEFF 	 bl __aeabi_fadd
 5276 002e 031C     	 add r3,r0,#0
 5277 0030 1A1C     	 add r2,r3,#0
 5278 0032 3D4B     	 ldr r3,.L278+12
 5279 0034 1A60     	 str r2,[r3]
 5280 0036 02E0     	 b .L257
 5281              	.L273:
1344:../main.c     ****     }
1345:../main.c     ****     else
1346:../main.c     ****     {
1347:../main.c     ****         positionTH = tmp;
 5282              	 .loc 1 1347 0
 5283 0038 3B4B     	 ldr r3,.L278+12
 5284 003a FA68     	 ldr r2,[r7,#12]
 5285 003c 1A60     	 str r2,[r3]
 5286              	.L257:
1348:../main.c     ****     }
1349:../main.c     **** 
1350:../main.c     ****     tmp1 = (positionTH) - (positionzTH);
 5287              	 .loc 1 1350 0
 5288 003e 3A4B     	 ldr r3,.L278+12
 5289 0040 1A68     	 ldr r2,[r3]
 5290 0042 3A4B     	 ldr r3,.L278+16
 5291 0044 1B68     	 ldr r3,[r3]
 5292 0046 101C     	 add r0,r2,#0
 5293 0048 191C     	 add r1,r3,#0
 5294 004a FFF7FEFF 	 bl __aeabi_fsub
 5295 004e 031C     	 add r3,r0,#0
 5296 0050 BB60     	 str r3,[r7,#8]
1351:../main.c     ****     if(-M_PI > tmp1)
 5297              	 .loc 1 1351 0
 5298 0052 B868     	 ldr r0,[r7,#8]
 5299 0054 FFF7FEFF 	 bl __aeabi_f2d
 5300 0058 031C     	 mov r3,r0
 5301 005a 0C1C     	 mov r4,r1
 5302 005c 181C     	 mov r0,r3
 5303 005e 211C     	 mov r1,r4
 5304 0060 334A     	 ldr r2,.L278+20
 5305 0062 344B     	 ldr r3,.L278+24
 5306 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 5307 0068 031E     	 sub r3,r0,#0
 5308 006a 08D0     	 beq .L274
1352:../main.c     ****     {
1353:../main.c     ****         positiondTH = tmp1 + 2*PI;
 5309              	 .loc 1 1353 0
 5310 006c B868     	 ldr r0,[r7,#8]
 5311 006e 2D49     	 ldr r1,.L278+8
 5312 0070 FFF7FEFF 	 bl __aeabi_fadd
 5313 0074 031C     	 add r3,r0,#0
 5314 0076 1A1C     	 add r2,r3,#0
 5315 0078 2F4B     	 ldr r3,.L278+28
 5316 007a 1A60     	 str r2,[r3]
 5317 007c 18E0     	 b .L260
 5318              	.L274:
1354:../main.c     ****     }
1355:../main.c     ****     else if(M_PI < tmp1)
 5319              	 .loc 1 1355 0
 5320 007e B868     	 ldr r0,[r7,#8]
 5321 0080 FFF7FEFF 	 bl __aeabi_f2d
 5322 0084 031C     	 mov r3,r0
 5323 0086 0C1C     	 mov r4,r1
 5324 0088 181C     	 mov r0,r3
 5325 008a 211C     	 mov r1,r4
 5326 008c 284A     	 ldr r2,.L278+20
 5327 008e 2B4B     	 ldr r3,.L278+32
 5328 0090 FFF7FEFF 	 bl __aeabi_dcmpgt
 5329 0094 031E     	 sub r3,r0,#0
 5330 0096 08D0     	 beq .L275
1356:../main.c     ****     {
1357:../main.c     ****         positiondTH = tmp1 - 2*PI;
 5331              	 .loc 1 1357 0
 5332 0098 B868     	 ldr r0,[r7,#8]
 5333 009a 2249     	 ldr r1,.L278+8
 5334 009c FFF7FEFF 	 bl __aeabi_fsub
 5335 00a0 031C     	 add r3,r0,#0
 5336 00a2 1A1C     	 add r2,r3,#0
 5337 00a4 244B     	 ldr r3,.L278+28
 5338 00a6 1A60     	 str r2,[r3]
 5339 00a8 02E0     	 b .L260
 5340              	.L275:
1358:../main.c     ****     } else
1359:../main.c     ****     {
1360:../main.c     ****         positiondTH = tmp1;
 5341              	 .loc 1 1360 0
 5342 00aa 234B     	 ldr r3,.L278+28
 5343 00ac BA68     	 ldr r2,[r7,#8]
 5344 00ae 1A60     	 str r2,[r3]
 5345              	.L260:
1361:../main.c     ****     }
1362:../main.c     **** 
1363:../main.c     ****     positionTHI = positionTH;
 5346              	 .loc 1 1363 0
 5347 00b0 1D4B     	 ldr r3,.L278+12
 5348 00b2 1A68     	 ldr r2,[r3]
 5349 00b4 224B     	 ldr r3,.L278+36
 5350 00b6 1A60     	 str r2,[r3]
1364:../main.c     **** 
1365:../main.c     ****     tmp2 = positionTHI + positiondTH;
 5351              	 .loc 1 1365 0
 5352 00b8 214B     	 ldr r3,.L278+36
 5353 00ba 1A68     	 ldr r2,[r3]
 5354 00bc 1E4B     	 ldr r3,.L278+28
 5355 00be 1B68     	 ldr r3,[r3]
 5356 00c0 101C     	 add r0,r2,#0
 5357 00c2 191C     	 add r1,r3,#0
 5358 00c4 FFF7FEFF 	 bl __aeabi_fadd
 5359 00c8 031C     	 add r3,r0,#0
 5360 00ca 7B60     	 str r3,[r7,#4]
1366:../main.c     ****     if(0 > tmp2)
 5361              	 .loc 1 1366 0
 5362 00cc 7868     	 ldr r0,[r7,#4]
 5363 00ce 0021     	 mov r1,#0
 5364 00d0 FFF7FEFF 	 bl __aeabi_fcmplt
 5365 00d4 031E     	 sub r3,r0,#0
 5366 00d6 08D0     	 beq .L276
1367:../main.c     ****     {
1368:../main.c     ****         positionTHO = tmp2 + 2*PI;
 5367              	 .loc 1 1368 0
 5368 00d8 7868     	 ldr r0,[r7,#4]
 5369 00da 1249     	 ldr r1,.L278+8
 5370 00dc FFF7FEFF 	 bl __aeabi_fadd
 5371 00e0 031C     	 add r3,r0,#0
 5372 00e2 1A1C     	 add r2,r3,#0
 5373 00e4 174B     	 ldr r3,.L278+40
 5374 00e6 1A60     	 str r2,[r3]
 5375 00e8 11E0     	 b .L265
 5376              	.L276:
1369:../main.c     ****     }
1370:../main.c     ****     else if((2*PI) < tmp2)
 5377              	 .loc 1 1370 0
 5378 00ea 7868     	 ldr r0,[r7,#4]
 5379 00ec 0D49     	 ldr r1,.L278+8
 5380 00ee FFF7FEFF 	 bl __aeabi_fcmpgt
 5381 00f2 031E     	 sub r3,r0,#0
 5382 00f4 08D0     	 beq .L277
1371:../main.c     ****     {
1372:../main.c     ****         positionTHO = tmp2 - 2*PI;
 5383              	 .loc 1 1372 0
 5384 00f6 7868     	 ldr r0,[r7,#4]
 5385 00f8 0A49     	 ldr r1,.L278+8
 5386 00fa FFF7FEFF 	 bl __aeabi_fsub
 5387 00fe 031C     	 add r3,r0,#0
 5388 0100 1A1C     	 add r2,r3,#0
 5389 0102 104B     	 ldr r3,.L278+40
 5390 0104 1A60     	 str r2,[r3]
 5391 0106 02E0     	 b .L265
 5392              	.L277:
1373:../main.c     ****     }
1374:../main.c     ****     else
1375:../main.c     ****     {
1376:../main.c     ****         positionTHO = tmp2;
 5393              	 .loc 1 1376 0
 5394 0108 0E4B     	 ldr r3,.L278+40
 5395 010a 7A68     	 ldr r2,[r7,#4]
 5396 010c 1A60     	 str r2,[r3]
 5397              	.L265:
1377:../main.c     ****     }
1378:../main.c     **** 
1379:../main.c     ****     positionzTH = positionTH;
 5398              	 .loc 1 1379 0
 5399 010e 064B     	 ldr r3,.L278+12
 5400 0110 1A68     	 ldr r2,[r3]
 5401 0112 064B     	 ldr r3,.L278+16
 5402 0114 1A60     	 str r2,[r3]
1380:../main.c     **** 
1381:../main.c     **** }
 5403              	 .loc 1 1381 0
 5404 0116 BD46     	 mov sp,r7
 5405 0118 05B0     	 add sp,sp,#20
 5406              	 
 5407 011a 90BD     	 pop {r4,r7,pc}
 5408              	.L279:
 5409              	 .align 2
 5410              	.L278:
 5411 011c 00000000 	 .word EbetaHat
 5412 0120 00000000 	 .word EalphaHat
 5413 0124 D80FC940 	 .word 1086918616
 5414 0128 00000000 	 .word positionTH
 5415 012c 00000000 	 .word positionzTH
 5416 0130 182D4454 	 .word 1413754136
 5417 0134 FB2109C0 	 .word -1073143301
 5418 0138 00000000 	 .word positiondTH
 5419 013c FB210940 	 .word 1074340347
 5420 0140 00000000 	 .word positionTHI
 5421 0144 00000000 	 .word positionTHO
 5422              	 .cfi_endproc
 5423              	.LFE491:
 5425              	 .global __aeabi_ui2f
 5426              	 .section .text.SpeedCal,"ax",%progbits
 5427              	 .align 2
 5428              	 .global SpeedCal
 5429              	 .code 16
 5430              	 .thumb_func
 5432              	SpeedCal:
 5433              	.LFB492:
1382:../main.c     **** 
1383:../main.c     **** /*
1384:../main.c     ****  Function: Ham tinh toan toc do dong co do ve (Speed Measurment). goc=tich phan cua toc do => (thet
1385:../main.c     ****  Input:positiondTH
1386:../main.c     ****  Output:SpeedMea1
1387:../main.c     ****  */
1388:../main.c     **** void SpeedCal(void){
 5434              	 .loc 1 1388 0
 5435              	 .cfi_startproc
 5436 0000 80B5     	 push {r7,lr}
 5437              	.LCFI74:
 5438              	 .cfi_def_cfa_offset 8
 5439              	 .cfi_offset 7,-8
 5440              	 .cfi_offset 14,-4
 5441 0002 82B0     	 sub sp,sp,#8
 5442              	.LCFI75:
 5443              	 .cfi_def_cfa_offset 16
 5444 0004 00AF     	 add r7,sp,#0
 5445              	.LCFI76:
 5446              	 .cfi_def_cfa_register 7
1389:../main.c     ****     float tmp1;
1390:../main.c     ****     uint16_t tmp2;
1391:../main.c     **** 
1392:../main.c     ****     tmp1 = positiondTH;
 5447              	 .loc 1 1392 0
 5448 0006 244B     	 ldr r3,.L286
 5449 0008 1B68     	 ldr r3,[r3]
 5450 000a 7B60     	 str r3,[r7,#4]
1393:../main.c     ****     tmp2 = countFIFO;
 5451              	 .loc 1 1393 0
 5452 000c BB1C     	 add r3,r7,#2
 5453 000e 234A     	 ldr r2,.L286+4
 5454 0010 1288     	 ldrh r2,[r2]
 5455 0012 1A80     	 strh r2,[r3]
1394:../main.c     ****     FIFOdTH[tmp2] = tmp1;
 5456              	 .loc 1 1394 0
 5457 0014 BB1C     	 add r3,r7,#2
 5458 0016 1A88     	 ldrh r2,[r3]
 5459 0018 214B     	 ldr r3,.L286+8
 5460 001a 9200     	 lsl r2,r2,#2
 5461 001c 7968     	 ldr r1,[r7,#4]
 5462 001e D150     	 str r1,[r2,r3]
1395:../main.c     **** 
1396:../main.c     ****     if(22 > (float)tmp2)
 5463              	 .loc 1 1396 0
 5464 0020 BB1C     	 add r3,r7,#2
 5465 0022 1B88     	 ldrh r3,[r3]
 5466 0024 181C     	 mov r0,r3
 5467 0026 FFF7FEFF 	 bl __aeabi_ui2f
 5468 002a 031C     	 add r3,r0,#0
 5469 002c 181C     	 add r0,r3,#0
 5470 002e 1D49     	 ldr r1,.L286+12
 5471 0030 FFF7FEFF 	 bl __aeabi_fcmplt
 5472 0034 031E     	 sub r3,r0,#0
 5473 0036 06D0     	 beq .L285
1397:../main.c     ****     {
1398:../main.c     ****         countFIFO++;
 5474              	 .loc 1 1398 0
 5475 0038 184B     	 ldr r3,.L286+4
 5476 003a 1B88     	 ldrh r3,[r3]
 5477 003c 0133     	 add r3,r3,#1
 5478 003e 9AB2     	 uxth r2,r3
 5479 0040 164B     	 ldr r3,.L286+4
 5480 0042 1A80     	 strh r2,[r3]
 5481 0044 02E0     	 b .L283
 5482              	.L285:
1399:../main.c     ****     }
1400:../main.c     ****     else
1401:../main.c     ****     {
1402:../main.c     ****         countFIFO = 0;
 5483              	 .loc 1 1402 0
 5484 0046 154B     	 ldr r3,.L286+4
 5485 0048 0022     	 mov r2,#0
 5486 004a 1A80     	 strh r2,[r3]
 5487              	.L283:
1403:../main.c     ****     }
1404:../main.c     **** 
1405:../main.c     ****     tmp2 = countFIFO;
 5488              	 .loc 1 1405 0
 5489 004c BB1C     	 add r3,r7,#2
 5490 004e 134A     	 ldr r2,.L286+4
 5491 0050 1288     	 ldrh r2,[r2]
 5492 0052 1A80     	 strh r2,[r3]
1406:../main.c     ****     SUMdTH +=  tmp1 - FIFOdTH[tmp2];
 5493              	 .loc 1 1406 0
 5494 0054 BB1C     	 add r3,r7,#2
 5495 0056 1A88     	 ldrh r2,[r3]
 5496 0058 114B     	 ldr r3,.L286+8
 5497 005a 9200     	 lsl r2,r2,#2
 5498 005c D358     	 ldr r3,[r2,r3]
 5499 005e 7868     	 ldr r0,[r7,#4]
 5500 0060 191C     	 add r1,r3,#0
 5501 0062 FFF7FEFF 	 bl __aeabi_fsub
 5502 0066 031C     	 add r3,r0,#0
 5503 0068 1A1C     	 add r2,r3,#0
 5504 006a 0F4B     	 ldr r3,.L286+16
 5505 006c 1B68     	 ldr r3,[r3]
 5506 006e 101C     	 add r0,r2,#0
 5507 0070 191C     	 add r1,r3,#0
 5508 0072 FFF7FEFF 	 bl __aeabi_fadd
 5509 0076 031C     	 add r3,r0,#0
 5510 0078 1A1C     	 add r2,r3,#0
 5511 007a 0B4B     	 ldr r3,.L286+16
 5512 007c 1A60     	 str r2,[r3]
1407:../main.c     ****     SpeedMea1 = SUMdTH * 1000;
 5513              	 .loc 1 1407 0
 5514 007e 0A4B     	 ldr r3,.L286+16
 5515 0080 1B68     	 ldr r3,[r3]
 5516 0082 181C     	 add r0,r3,#0
 5517 0084 0949     	 ldr r1,.L286+20
 5518 0086 FFF7FEFF 	 bl __aeabi_fmul
 5519 008a 031C     	 add r3,r0,#0
 5520 008c 1A1C     	 add r2,r3,#0
 5521 008e 084B     	 ldr r3,.L286+24
 5522 0090 1A60     	 str r2,[r3]
1408:../main.c     **** }
 5523              	 .loc 1 1408 0
 5524 0092 BD46     	 mov sp,r7
 5525 0094 02B0     	 add sp,sp,#8
 5526              	 
 5527 0096 80BD     	 pop {r7,pc}
 5528              	.L287:
 5529              	 .align 2
 5530              	.L286:
 5531 0098 00000000 	 .word positiondTH
 5532 009c 00000000 	 .word countFIFO
 5533 00a0 00000000 	 .word FIFOdTH
 5534 00a4 0000B041 	 .word 1102053376
 5535 00a8 00000000 	 .word SUMdTH
 5536 00ac 00007A44 	 .word 1148846080
 5537 00b0 00000000 	 .word SpeedMea1
 5538              	 .cfi_endproc
 5539              	.LFE492:
 5541              	 .section .text.resetSpeedCal,"ax",%progbits
 5542              	 .align 2
 5543              	 .global resetSpeedCal
 5544              	 .code 16
 5545              	 .thumb_func
 5547              	resetSpeedCal:
 5548              	.LFB493:
1409:../main.c     **** /*
1410:../main.c     ****  Function:Reset ca gia tri cua mang FIFOdTH[] ve 0
1411:../main.c     ****  */
1412:../main.c     **** void resetSpeedCal(void)
1413:../main.c     **** {
 5549              	 .loc 1 1413 0
 5550              	 .cfi_startproc
 5551 0000 80B5     	 push {r7,lr}
 5552              	.LCFI77:
 5553              	 .cfi_def_cfa_offset 8
 5554              	 .cfi_offset 7,-8
 5555              	 .cfi_offset 14,-4
 5556 0002 82B0     	 sub sp,sp,#8
 5557              	.LCFI78:
 5558              	 .cfi_def_cfa_offset 16
 5559 0004 00AF     	 add r7,sp,#0
 5560              	.LCFI79:
 5561              	 .cfi_def_cfa_register 7
1414:../main.c     ****     uint16_t tmp;
1415:../main.c     **** 
1416:../main.c     ****     countFIFO = 0;
 5562              	 .loc 1 1416 0
 5563 0006 0C4B     	 ldr r3,.L291
 5564 0008 0022     	 mov r2,#0
 5565 000a 1A80     	 strh r2,[r3]
1417:../main.c     **** 
1418:../main.c     ****     for(tmp=0; 22 >= tmp; tmp++)
 5566              	 .loc 1 1418 0
 5567 000c BB1D     	 add r3,r7,#6
 5568 000e 0022     	 mov r2,#0
 5569 0010 1A80     	 strh r2,[r3]
 5570 0012 0AE0     	 b .L289
 5571              	.L290:
1419:../main.c     ****     {
1420:../main.c     ****         FIFOdTH[tmp] = 0;
 5572              	 .loc 1 1420 0 discriminator 3
 5573 0014 BB1D     	 add r3,r7,#6
 5574 0016 1A88     	 ldrh r2,[r3]
 5575 0018 084B     	 ldr r3,.L291+4
 5576 001a 9200     	 lsl r2,r2,#2
 5577 001c 0021     	 mov r1,#0
 5578 001e D150     	 str r1,[r2,r3]
1418:../main.c     ****     {
 5579              	 .loc 1 1418 0 discriminator 3
 5580 0020 BB1D     	 add r3,r7,#6
 5581 0022 1A88     	 ldrh r2,[r3]
 5582 0024 BB1D     	 add r3,r7,#6
 5583 0026 0132     	 add r2,r2,#1
 5584 0028 1A80     	 strh r2,[r3]
 5585              	.L289:
1418:../main.c     ****     {
 5586              	 .loc 1 1418 0 is_stmt 0 discriminator 1
 5587 002a BB1D     	 add r3,r7,#6
 5588 002c 1B88     	 ldrh r3,[r3]
 5589 002e 162B     	 cmp r3,#22
 5590 0030 F0D9     	 bls .L290
1421:../main.c     ****     }
1422:../main.c     **** }
 5591              	 .loc 1 1422 0 is_stmt 1
 5592 0032 BD46     	 mov sp,r7
 5593 0034 02B0     	 add sp,sp,#8
 5594              	 
 5595 0036 80BD     	 pop {r7,pc}
 5596              	.L292:
 5597              	 .align 2
 5598              	.L291:
 5599 0038 00000000 	 .word countFIFO
 5600 003c 00000000 	 .word FIFOdTH
 5601              	 .cfi_endproc
 5602              	.LFE493:
 5604              	 .section .text.motionCal,"ax",%progbits
 5605              	 .align 2
 5606              	 .global motionCal
 5607              	 .code 16
 5608              	 .thumb_func
 5610              	motionCal:
 5611              	.LFB494:
1423:../main.c     **** /*
1424:../main.c     ****  Function:Goi ra ham tinh toan goc va toc do dong co
1425:../main.c     ****  */
1426:../main.c     **** void motionCal(){
 5612              	 .loc 1 1426 0
 5613              	 .cfi_startproc
 5614 0000 80B5     	 push {r7,lr}
 5615              	.LCFI80:
 5616              	 .cfi_def_cfa_offset 8
 5617              	 .cfi_offset 7,-8
 5618              	 .cfi_offset 14,-4
 5619 0002 00AF     	 add r7,sp,#0
 5620              	.LCFI81:
 5621              	 .cfi_def_cfa_register 7
1427:../main.c     **** 	ThetaCal();
 5622              	 .loc 1 1427 0
 5623 0004 FFF7FEFF 	 bl ThetaCal
1428:../main.c     **** 	SpeedCal();
 5624              	 .loc 1 1428 0
 5625 0008 FFF7FEFF 	 bl SpeedCal
1429:../main.c     **** }
 5626              	 .loc 1 1429 0
 5627 000c BD46     	 mov sp,r7
 5628              	 
 5629 000e 80BD     	 pop {r7,pc}
 5630              	 .cfi_endproc
 5631              	.LFE494:
 5633              	 .section .text.resetEstimator,"ax",%progbits
 5634              	 .align 2
 5635              	 .global resetEstimator
 5636              	 .code 16
 5637              	 .thumb_func
 5639              	resetEstimator:
 5640              	.LFB495:
1430:../main.c     **** /*
1431:../main.c     ****  Function: Reset cac bien output cua SMO, bien trang thai cua Estimator, gia tri mang luu tru delta
1432:../main.c     ****  */
1433:../main.c     **** 
1434:../main.c     **** void resetEstimator()
1435:../main.c     **** {
 5641              	 .loc 1 1435 0
 5642              	 .cfi_startproc
 5643 0000 80B5     	 push {r7,lr}
 5644              	.LCFI82:
 5645              	 .cfi_def_cfa_offset 8
 5646              	 .cfi_offset 7,-8
 5647              	 .cfi_offset 14,-4
 5648 0002 00AF     	 add r7,sp,#0
 5649              	.LCFI83:
 5650              	 .cfi_def_cfa_register 7
1436:../main.c     ****     estimatorState = 0;
 5651              	 .loc 1 1436 0
 5652 0004 054B     	 ldr r3,.L295
 5653 0006 0022     	 mov r2,#0
 5654 0008 1A80     	 strh r2,[r3]
1437:../main.c     ****     resetSMO();
 5655              	 .loc 1 1437 0
 5656 000a FFF7FEFF 	 bl resetSMO
1438:../main.c     ****     resetSpeedCal();
 5657              	 .loc 1 1438 0
 5658 000e FFF7FEFF 	 bl resetSpeedCal
1439:../main.c     ****     estimatorStatecnt1 = 0;
 5659              	 .loc 1 1439 0
 5660 0012 034B     	 ldr r3,.L295+4
 5661 0014 0022     	 mov r2,#0
 5662 0016 1A80     	 strh r2,[r3]
1440:../main.c     **** }
 5663              	 .loc 1 1440 0
 5664 0018 BD46     	 mov sp,r7
 5665              	 
 5666 001a 80BD     	 pop {r7,pc}
 5667              	.L296:
 5668              	 .align 2
 5669              	.L295:
 5670 001c 00000000 	 .word estimatorState
 5671 0020 00000000 	 .word estimatorStatecnt1
 5672              	 .cfi_endproc
 5673              	.LFE495:
 5675              	 .section .text.motionEstimator,"ax",%progbits
 5676              	 .align 2
 5677              	 .global motionEstimator
 5678              	 .code 16
 5679              	 .thumb_func
 5681              	motionEstimator:
 5682              	.LFB496:
1441:../main.c     **** /*
1442:../main.c     ****  Function:Uoc luong BEMF, tinh toan goc, toc do dong co o cac trang thai Alignment, Openloop, Closl
1443:../main.c     ****  */
1444:../main.c     **** void motionEstimator()
1445:../main.c     **** {
 5683              	 .loc 1 1445 0
 5684              	 .cfi_startproc
 5685 0000 80B5     	 push {r7,lr}
 5686              	.LCFI84:
 5687              	 .cfi_def_cfa_offset 8
 5688              	 .cfi_offset 7,-8
 5689              	 .cfi_offset 14,-4
 5690 0002 82B0     	 sub sp,sp,#8
 5691              	.LCFI85:
 5692              	 .cfi_def_cfa_offset 16
 5693 0004 00AF     	 add r7,sp,#0
 5694              	.LCFI86:
 5695              	 .cfi_def_cfa_register 7
1446:../main.c     ****     float tmp;
1447:../main.c     **** 
1448:../main.c     ****     if(1 == flagStartObs)
 5696              	 .loc 1 1448 0
 5697 0006 364B     	 ldr r3,.L311
 5698 0008 1B88     	 ldrh r3,[r3]
 5699 000a 012B     	 cmp r3,#1
 5700 000c 05D1     	 bne .L298
1449:../main.c     ****     {
1450:../main.c     ****         flagStartObs = 0;
 5701              	 .loc 1 1450 0
 5702 000e 344B     	 ldr r3,.L311
 5703 0010 0022     	 mov r2,#0
 5704 0012 1A80     	 strh r2,[r3]
1451:../main.c     ****         estimatorState = 0;
 5705              	 .loc 1 1451 0
 5706 0014 334B     	 ldr r3,.L311+4
 5707 0016 0022     	 mov r2,#0
 5708 0018 1A80     	 strh r2,[r3]
 5709              	.L298:
1452:../main.c     ****     }
1453:../main.c     **** 
1454:../main.c     ****     switch(estimatorState)
 5710              	 .loc 1 1454 0
 5711 001a 324B     	 ldr r3,.L311+4
 5712 001c 1B88     	 ldrh r3,[r3]
 5713 001e 012B     	 cmp r3,#1
 5714 0020 13D0     	 beq .L300
 5715 0022 02DC     	 bgt .L301
 5716 0024 002B     	 cmp r3,#0
 5717 0026 05D0     	 beq .L302
1455:../main.c     ****     {
1456:../main.c     ****         case 0:
1457:../main.c     ****             resetSMO();
1458:../main.c     ****             resetSpeedCal();
1459:../main.c     ****             estimatorStatecnt1 = 0;
1460:../main.c     ****             estimatorState = 1;
1461:../main.c     ****             break;
1462:../main.c     ****         case 1:
1463:../main.c     ****             if(2 == flagStartObs)
1464:../main.c     ****             {
1465:../main.c     ****                 estimatorStatecnt1++;
1466:../main.c     ****             }
1467:../main.c     ****             if(1 <= estimatorStatecnt1)
1468:../main.c     ****             {
1469:../main.c     ****                 estimatorStatecnt1 = 0;
1470:../main.c     ****                 flagStartObs = 0;
1471:../main.c     ****                 estimatorState = 2;
1472:../main.c     ****             }
1473:../main.c     ****             break;
1474:../main.c     ****         case 2:
1475:../main.c     ****             tmp = END_SPEED_RADS_PER_SEC_ELEC;
1476:../main.c     ****             We = tmp;
1477:../main.c     ****             exeSMO();
1478:../main.c     ****             motionCal();
1479:../main.c     ****             estimatorStatecnt1++;
1480:../main.c     ****             if(speedRefCnt <= (float)estimatorStatecnt1)
1481:../main.c     ****             {
1482:../main.c     ****                 estimatorStatecnt1 = 0;
1483:../main.c     ****                 estimatorState = 3;
1484:../main.c     ****             }
1485:../main.c     ****             break;
1486:../main.c     ****         case 3:
1487:../main.c     ****             We = SpeedMea1;
1488:../main.c     ****             exeSMO();
1489:../main.c     ****             motionCal();
1490:../main.c     ****             break;
1491:../main.c     ****         default:
1492:../main.c     ****             break;
 5718              	 .loc 1 1492 0
 5719 0028 56E0     	 b .L297
 5720              	.L301:
1454:../main.c     ****     {
 5721              	 .loc 1 1454 0
 5722 002a 022B     	 cmp r3,#2
 5723 002c 26D0     	 beq .L303
 5724 002e 032B     	 cmp r3,#3
 5725 0030 49D0     	 beq .L304
 5726              	 .loc 1 1492 0
 5727 0032 51E0     	 b .L297
 5728              	.L302:
1457:../main.c     ****             resetSpeedCal();
 5729              	 .loc 1 1457 0
 5730 0034 FFF7FEFF 	 bl resetSMO
1458:../main.c     ****             estimatorStatecnt1 = 0;
 5731              	 .loc 1 1458 0
 5732 0038 FFF7FEFF 	 bl resetSpeedCal
1459:../main.c     ****             estimatorState = 1;
 5733              	 .loc 1 1459 0
 5734 003c 2A4B     	 ldr r3,.L311+8
 5735 003e 0022     	 mov r2,#0
 5736 0040 1A80     	 strh r2,[r3]
1460:../main.c     ****             break;
 5737              	 .loc 1 1460 0
 5738 0042 284B     	 ldr r3,.L311+4
 5739 0044 0122     	 mov r2,#1
 5740 0046 1A80     	 strh r2,[r3]
1461:../main.c     ****         case 1:
 5741              	 .loc 1 1461 0
 5742 0048 46E0     	 b .L297
 5743              	.L300:
1463:../main.c     ****             {
 5744              	 .loc 1 1463 0
 5745 004a 254B     	 ldr r3,.L311
 5746 004c 1B88     	 ldrh r3,[r3]
 5747 004e 022B     	 cmp r3,#2
 5748 0050 05D1     	 bne .L306
1465:../main.c     ****             }
 5749              	 .loc 1 1465 0
 5750 0052 254B     	 ldr r3,.L311+8
 5751 0054 1B88     	 ldrh r3,[r3]
 5752 0056 0133     	 add r3,r3,#1
 5753 0058 9AB2     	 uxth r2,r3
 5754 005a 234B     	 ldr r3,.L311+8
 5755 005c 1A80     	 strh r2,[r3]
 5756              	.L306:
1467:../main.c     ****             {
 5757              	 .loc 1 1467 0
 5758 005e 224B     	 ldr r3,.L311+8
 5759 0060 1B88     	 ldrh r3,[r3]
 5760 0062 002B     	 cmp r3,#0
 5761 0064 09D0     	 beq .L307
1469:../main.c     ****                 flagStartObs = 0;
 5762              	 .loc 1 1469 0
 5763 0066 204B     	 ldr r3,.L311+8
 5764 0068 0022     	 mov r2,#0
 5765 006a 1A80     	 strh r2,[r3]
1470:../main.c     ****                 estimatorState = 2;
 5766              	 .loc 1 1470 0
 5767 006c 1C4B     	 ldr r3,.L311
 5768 006e 0022     	 mov r2,#0
 5769 0070 1A80     	 strh r2,[r3]
1471:../main.c     ****             }
 5770              	 .loc 1 1471 0
 5771 0072 1C4B     	 ldr r3,.L311+4
 5772 0074 0222     	 mov r2,#2
 5773 0076 1A80     	 strh r2,[r3]
1473:../main.c     ****         case 2:
 5774              	 .loc 1 1473 0
 5775 0078 2EE0     	 b .L297
 5776              	.L307:
 5777 007a 2DE0     	 b .L297
 5778              	.L303:
1475:../main.c     ****             We = tmp;
 5779              	 .loc 1 1475 0
 5780 007c 1B4B     	 ldr r3,.L311+12
 5781 007e 7B60     	 str r3,[r7,#4]
1476:../main.c     ****             exeSMO();
 5782              	 .loc 1 1476 0
 5783 0080 1B4B     	 ldr r3,.L311+16
 5784 0082 7A68     	 ldr r2,[r7,#4]
 5785 0084 1A60     	 str r2,[r3]
1477:../main.c     ****             motionCal();
 5786              	 .loc 1 1477 0
 5787 0086 FFF7FEFF 	 bl exeSMO
1478:../main.c     ****             estimatorStatecnt1++;
 5788              	 .loc 1 1478 0
 5789 008a FFF7FEFF 	 bl motionCal
1479:../main.c     ****             if(speedRefCnt <= (float)estimatorStatecnt1)
 5790              	 .loc 1 1479 0
 5791 008e 164B     	 ldr r3,.L311+8
 5792 0090 1B88     	 ldrh r3,[r3]
 5793 0092 0133     	 add r3,r3,#1
 5794 0094 9AB2     	 uxth r2,r3
 5795 0096 144B     	 ldr r3,.L311+8
 5796 0098 1A80     	 strh r2,[r3]
1480:../main.c     ****             {
 5797              	 .loc 1 1480 0
 5798 009a 134B     	 ldr r3,.L311+8
 5799 009c 1B88     	 ldrh r3,[r3]
 5800 009e 181C     	 mov r0,r3
 5801 00a0 FFF7FEFF 	 bl __aeabi_ui2f
 5802 00a4 021C     	 add r2,r0,#0
 5803 00a6 134B     	 ldr r3,.L311+20
 5804 00a8 1B68     	 ldr r3,[r3]
 5805 00aa 101C     	 add r0,r2,#0
 5806 00ac 191C     	 add r1,r3,#0
 5807 00ae FFF7FEFF 	 bl __aeabi_fcmpge
 5808 00b2 031E     	 sub r3,r0,#0
 5809 00b4 00D1     	 bne .L310
1485:../main.c     ****         case 3:
 5810              	 .loc 1 1485 0
 5811 00b6 0FE0     	 b .L297
 5812              	.L310:
1482:../main.c     ****                 estimatorState = 3;
 5813              	 .loc 1 1482 0
 5814 00b8 0B4B     	 ldr r3,.L311+8
 5815 00ba 0022     	 mov r2,#0
 5816 00bc 1A80     	 strh r2,[r3]
1483:../main.c     ****             }
 5817              	 .loc 1 1483 0
 5818 00be 094B     	 ldr r3,.L311+4
 5819 00c0 0322     	 mov r2,#3
 5820 00c2 1A80     	 strh r2,[r3]
1485:../main.c     ****         case 3:
 5821              	 .loc 1 1485 0
 5822 00c4 08E0     	 b .L297
 5823              	.L304:
1487:../main.c     ****             exeSMO();
 5824              	 .loc 1 1487 0
 5825 00c6 0C4B     	 ldr r3,.L311+24
 5826 00c8 1A68     	 ldr r2,[r3]
 5827 00ca 094B     	 ldr r3,.L311+16
 5828 00cc 1A60     	 str r2,[r3]
1488:../main.c     ****             motionCal();
 5829              	 .loc 1 1488 0
 5830 00ce FFF7FEFF 	 bl exeSMO
1489:../main.c     ****             break;
 5831              	 .loc 1 1489 0
 5832 00d2 FFF7FEFF 	 bl motionCal
1490:../main.c     ****         default:
 5833              	 .loc 1 1490 0
 5834 00d6 C046     	 mov r8,r8
 5835              	.L297:
1493:../main.c     ****     }
1494:../main.c     **** }
 5836              	 .loc 1 1494 0
 5837 00d8 BD46     	 mov sp,r7
 5838 00da 02B0     	 add sp,sp,#8
 5839              	 
 5840 00dc 80BD     	 pop {r7,pc}
 5841              	.L312:
 5842 00de C046     	 .align 2
 5843              	.L311:
 5844 00e0 00000000 	 .word flagStartObs
 5845 00e4 00000000 	 .word estimatorState
 5846 00e8 00000000 	 .word estimatorStatecnt1
 5847 00ec 84705142 	 .word 1112633476
 5848 00f0 00000000 	 .word We
 5849 00f4 00000000 	 .word speedRefCnt
 5850 00f8 00000000 	 .word SpeedMea1
 5851              	 .cfi_endproc
 5852              	.LFE496:
 5854              	 .text
 5855              	.Letext0:
 5856              	 .file 2 "d:\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5857              	 .file 3 "d:\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5858              	 .file 4 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 5859              	 .file 5 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc1_scu.h"
 5860              	 .file 6 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_gpio.h"
 5861              	 .file 7 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc1_gpio.h"
 5862              	 .file 8 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_usic.h"
 5863              	 .file 9 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_vadc.h"
 5864              	 .file 10 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/ADC_MEASUREMENT/adc_measurement.h"
 5865              	 .file 11 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_ccu8.h"
 5866              	 .file 12 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 5867              	 .file 13 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/PWM_CCU8/pwm_ccu8.h"
 5868              	 .file 14 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/DAVE.h"
 5869              	 .file 15 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/CMSIS/Include/cmsis_gcc.h"
 5870              	 .file 16 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 5871              	 .file 17 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/ADC_MEASUREMENT/adc_measurement_extern.h"
 5872              	 .file 18 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/PWM_CCU8/pwm_ccu8_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000002 current_phaseU
                            *COM*:00000002 current_phaseV
    {standard input}:24     .data.ADC_scale:00000000 ADC_scale
    {standard input}:21     .data.ADC_scale:00000000 $d
    {standard input}:31     .bss.cumulative_sum_phaseU:00000000 cumulative_sum_phaseU
    {standard input}:28     .bss.cumulative_sum_phaseU:00000000 $d
    {standard input}:38     .bss.cumulative_sum_phaseV:00000000 cumulative_sum_phaseV
    {standard input}:35     .bss.cumulative_sum_phaseV:00000000 $d
    {standard input}:45     .bss.moving_average_phaseU:00000000 moving_average_phaseU
    {standard input}:42     .bss.moving_average_phaseU:00000000 $d
    {standard input}:52     .bss.moving_average_phaseV:00000000 moving_average_phaseV
    {standard input}:49     .bss.moving_average_phaseV:00000000 $d
    {standard input}:59     .bss.aIObs:00000000 aIObs
    {standard input}:56     .bss.aIObs:00000000 $d
    {standard input}:66     .bss.b1IObs:00000000 b1IObs
    {standard input}:63     .bss.b1IObs:00000000 $d
    {standard input}:73     .bss.b2IObs:00000000 b2IObs
    {standard input}:70     .bss.b2IObs:00000000 $d
    {standard input}:80     .bss.b3IObs:00000000 b3IObs
    {standard input}:77     .bss.b3IObs:00000000 $d
    {standard input}:87     .bss.flagStartObs:00000000 flagStartObs
    {standard input}:84     .bss.flagStartObs:00000000 $d
    {standard input}:94     .bss.EalphaHat:00000000 EalphaHat
    {standard input}:91     .bss.EalphaHat:00000000 $d
    {standard input}:101    .bss.EbetaHat:00000000 EbetaHat
    {standard input}:98     .bss.EbetaHat:00000000 $d
    {standard input}:108    .bss.IalphaHat:00000000 IalphaHat
    {standard input}:105    .bss.IalphaHat:00000000 $d
    {standard input}:115    .bss.IbetaHat:00000000 IbetaHat
    {standard input}:112    .bss.IbetaHat:00000000 $d
    {standard input}:122    .bss.Balpha:00000000 Balpha
    {standard input}:119    .bss.Balpha:00000000 $d
    {standard input}:129    .bss.Bbeta:00000000 Bbeta
    {standard input}:126    .bss.Bbeta:00000000 $d
    {standard input}:136    .bss.a1BEMFobs:00000000 a1BEMFobs
    {standard input}:133    .bss.a1BEMFobs:00000000 $d
    {standard input}:143    .bss.a2BEMFobs:00000000 a2BEMFobs
    {standard input}:140    .bss.a2BEMFobs:00000000 $d
    {standard input}:150    .bss.b1BEMFobs:00000000 b1BEMFobs
    {standard input}:147    .bss.b1BEMFobs:00000000 $d
    {standard input}:157    .bss.b2BEMFobs:00000000 b2BEMFobs
    {standard input}:154    .bss.b2BEMFobs:00000000 $d
    {standard input}:164    .bss.da:00000000 da
    {standard input}:161    .bss.da:00000000 $d
    {standard input}:171    .bss.db:00000000 db
    {standard input}:168    .bss.db:00000000 $d
    {standard input}:178    .bss.dc:00000000 dc
    {standard input}:175    .bss.dc:00000000 $d
    {standard input}:185    .bss.d0:00000000 d0
    {standard input}:182    .bss.d0:00000000 $d
    {standard input}:192    .bss.d1:00000000 d1
    {standard input}:189    .bss.d1:00000000 $d
    {standard input}:199    .bss.d2:00000000 d2
    {standard input}:196    .bss.d2:00000000 $d
    {standard input}:206    .data.OpenLoop:00000000 OpenLoop
    {standard input}:203    .data.OpenLoop:00000000 $d
    {standard input}:213    .data.ChangeMode:00000000 ChangeMode
    {standard input}:210    .data.ChangeMode:00000000 $d
    {standard input}:220    .bss.Startup_Lock_Count:00000000 Startup_Lock_Count
    {standard input}:217    .bss.Startup_Lock_Count:00000000 $d
    {standard input}:227    .bss.Speed_Maintain_Cnt1:00000000 Speed_Maintain_Cnt1
    {standard input}:224    .bss.Speed_Maintain_Cnt1:00000000 $d
    {standard input}:234    .bss.SineTheta:00000000 SineTheta
    {standard input}:231    .bss.SineTheta:00000000 $d
    {standard input}:241    .bss.CosineTheta:00000000 CosineTheta
    {standard input}:238    .bss.CosineTheta:00000000 $d
    {standard input}:248    .bss.Theta:00000000 Theta
    {standard input}:245    .bss.Theta:00000000 $d
    {standard input}:255    .bss.Startup_Ramp_Angle_Rads_Per_Sec:00000000 Startup_Ramp_Angle_Rads_Per_Sec
    {standard input}:252    .bss.Startup_Ramp_Angle_Rads_Per_Sec:00000000 $d
    {standard input}:262    .bss.positionTH:00000000 positionTH
    {standard input}:259    .bss.positionTH:00000000 $d
    {standard input}:269    .bss.positiondTH:00000000 positiondTH
    {standard input}:266    .bss.positiondTH:00000000 $d
    {standard input}:276    .bss.positionTHI:00000000 positionTHI
    {standard input}:273    .bss.positionTHI:00000000 $d
    {standard input}:283    .bss.positionTHO:00000000 positionTHO
    {standard input}:280    .bss.positionTHO:00000000 $d
    {standard input}:290    .bss.positionzTH:00000000 positionzTH
    {standard input}:287    .bss.positionzTH:00000000 $d
    {standard input}:297    .bss.closeLoopTHI:00000000 closeLoopTHI
    {standard input}:294    .bss.closeLoopTHI:00000000 $d
    {standard input}:304    .bss.closeLoopTHO:00000000 closeLoopTHO
    {standard input}:301    .bss.closeLoopTHO:00000000 $d
    {standard input}:311    .bss.deviationTH:00000000 deviationTH
    {standard input}:308    .bss.deviationTH:00000000 $d
    {standard input}:318    .bss.decayRateTH:00000000 decayRateTH
    {standard input}:315    .bss.decayRateTH:00000000 $d
    {standard input}:325    .bss.closeLoopTHstate:00000000 closeLoopTHstate
    {standard input}:322    .bss.closeLoopTHstate:00000000 $d
    {standard input}:332    .bss.finalTHI:00000000 finalTHI
    {standard input}:329    .bss.finalTHI:00000000 $d
    {standard input}:339    .bss.finalTHO:00000000 finalTHO
    {standard input}:336    .bss.finalTHO:00000000 $d
    {standard input}:346    .bss.estimatorState:00000000 estimatorState
    {standard input}:343    .bss.estimatorState:00000000 $d
    {standard input}:353    .bss.estimatorStatecnt1:00000000 estimatorStatecnt1
    {standard input}:350    .bss.estimatorStatecnt1:00000000 $d
    {standard input}:360    .data.speedRefCnt:00000000 speedRefCnt
    {standard input}:357    .data.speedRefCnt:00000000 $d
    {standard input}:367    .bss.SUMdTH:00000000 SUMdTH
    {standard input}:364    .bss.SUMdTH:00000000 $d
    {standard input}:374    .bss.SpeedMea1:00000000 SpeedMea1
    {standard input}:371    .bss.SpeedMea1:00000000 $d
    {standard input}:381    .bss.SpeedMea:00000000 SpeedMea
    {standard input}:378    .bss.SpeedMea:00000000 $d
    {standard input}:388    .bss.SpeedRef:00000000 SpeedRef
    {standard input}:385    .bss.SpeedRef:00000000 $d
                            *COM*:00000054 FIFOdTH
                            *COM*:00000004 We
    {standard input}:397    .bss.countFIFO:00000000 countFIFO
    {standard input}:394    .bss.countFIFO:00000000 $d
    {standard input}:404    .bss.current_u:00000000 current_u
    {standard input}:401    .bss.current_u:00000000 $d
    {standard input}:411    .bss.current_v:00000000 current_v
    {standard input}:408    .bss.current_v:00000000 $d
    {standard input}:418    .bss.current_alpha:00000000 current_alpha
    {standard input}:415    .bss.current_alpha:00000000 $d
    {standard input}:425    .bss.current_beta:00000000 current_beta
    {standard input}:422    .bss.current_beta:00000000 $d
    {standard input}:432    .bss.current_sd:00000000 current_sd
    {standard input}:429    .bss.current_sd:00000000 $d
    {standard input}:439    .bss.current_sq:00000000 current_sq
    {standard input}:436    .bss.current_sq:00000000 $d
    {standard input}:446    .bss.SpeedError:00000000 SpeedError
    {standard input}:443    .bss.SpeedError:00000000 $d
                            *COM*:00000004 Kp_IsqRef
                            *COM*:00000004 Ki_IsqRef
    {standard input}:455    .bss.sum_IsqRef:00000000 sum_IsqRef
    {standard input}:452    .bss.sum_IsqRef:00000000 $d
    {standard input}:462    .bss.IsqRef1:00000000 IsqRef1
    {standard input}:459    .bss.IsqRef1:00000000 $d
    {standard input}:469    .bss.IsqRef:00000000 IsqRef
    {standard input}:466    .bss.IsqRef:00000000 $d
    {standard input}:476    .bss.IsdError:00000000 IsdError
    {standard input}:473    .bss.IsdError:00000000 $d
    {standard input}:483    .bss.sum_Usd:00000000 sum_Usd
    {standard input}:480    .bss.sum_Usd:00000000 $d
    {standard input}:490    .bss.Usd1:00000000 Usd1
    {standard input}:487    .bss.Usd1:00000000 $d
    {standard input}:497    .bss.Usd:00000000 Usd
    {standard input}:494    .bss.Usd:00000000 $d
                            *COM*:00000004 Kp_Usd
                            *COM*:00000004 Ki_Usd
    {standard input}:506    .bss.IsqError:00000000 IsqError
    {standard input}:503    .bss.IsqError:00000000 $d
    {standard input}:513    .bss.sum_Usq:00000000 sum_Usq
    {standard input}:510    .bss.sum_Usq:00000000 $d
    {standard input}:520    .bss.Usq1:00000000 Usq1
    {standard input}:517    .bss.Usq1:00000000 $d
    {standard input}:527    .bss.Usq:00000000 Usq
    {standard input}:524    .bss.Usq:00000000 $d
                            *COM*:00000004 Kp_Usq
                            *COM*:00000004 Ki_Usq
    {standard input}:536    .bss.Usalpha:00000000 Usalpha
    {standard input}:533    .bss.Usalpha:00000000 $d
    {standard input}:543    .bss.Usbeta:00000000 Usbeta
    {standard input}:540    .bss.Usbeta:00000000 $d
    {standard input}:550    .bss.Usa:00000000 Usa
    {standard input}:547    .bss.Usa:00000000 $d
    {standard input}:557    .bss.Usb:00000000 Usb
    {standard input}:554    .bss.Usb:00000000 $d
    {standard input}:564    .bss.Usc:00000000 Usc
    {standard input}:561    .bss.Usc:00000000 $d
    {standard input}:571    .data.SineTable:00000000 SineTable
    {standard input}:568    .data.SineTable:00000000 $d
    {standard input}:833    .data.CosineTable:00000000 CosineTable
    {standard input}:830    .data.CosineTable:00000000 $d
    {standard input}:1091   .text.main:00000000 $t
    {standard input}:1096   .text.main:00000000 main
    {standard input}:1133   .text.InterruptHandler:00000000 $t
    {standard input}:1138   .text.InterruptHandler:00000000 InterruptHandler
    {standard input}:1461   .text.AlphaBetaTrans_Current:00000000 AlphaBetaTrans_Current
    {standard input}:5681   .text.motionEstimator:00000000 motionEstimator
    {standard input}:3788   .text.ThetaLoopControl:00000000 ThetaLoopControl
    {standard input}:3218   .text.SinCosCheck:00000000 SinCosCheck
    {standard input}:1520   .text.DQTrans_Current:00000000 DQTrans_Current
    {standard input}:3403   .text.LoopcontrolTask:00000000 LoopcontrolTask
    {standard input}:1919   .text.UsdqtoUsalphabeta:00000000 UsdqtoUsalphabeta
    {standard input}:2006   .text.UsalphabetatoUsabc:00000000 UsalphabetatoUsabc
    {standard input}:2099   .text.SVMAlgorithm:00000000 SVMAlgorithm
    {standard input}:1390   .text.UpdatePWMDutyCycle:00000000 UpdatePWMDutyCycle
    {standard input}:1191   .text.InterruptHandler:00000048 $d
    {standard input}:1200   .text.IRQ15_Handler:00000000 $t
    {standard input}:1205   .text.IRQ15_Handler:00000000 IRQ15_Handler
    {standard input}:1368   .text.IRQ15_Handler:0000010c $d
    {standard input}:1385   .text.UpdatePWMDutyCycle:00000000 $t
    {standard input}:1445   .text.UpdatePWMDutyCycle:00000050 $d
    {standard input}:1456   .text.AlphaBetaTrans_Current:00000000 $t
    {standard input}:1506   .text.AlphaBetaTrans_Current:00000040 $d
    {standard input}:1515   .text.DQTrans_Current:00000000 $t
    {standard input}:1594   .text.DQTrans_Current:0000007c $d
    {standard input}:1605   .text.IsqRefCal:00000000 $t
    {standard input}:1610   .text.IsqRefCal:00000000 IsqRefCal
    {standard input}:1697   .text.IsqRefCal:00000094 $d
    {standard input}:1709   .text.UsdCal:00000000 $t
    {standard input}:1714   .text.UsdCal:00000000 UsdCal
    {standard input}:1799   .text.UsdCal:00000090 $d
    {standard input}:1810   .text.UsqCal:00000000 $t
    {standard input}:1815   .text.UsqCal:00000000 UsqCal
    {standard input}:1902   .text.UsqCal:00000094 $d
    {standard input}:1914   .text.UsdqtoUsalphabeta:00000000 $t
    {standard input}:1990   .text.UsdqtoUsalphabeta:00000074 $d
    {standard input}:2001   .text.UsalphabetatoUsabc:00000000 $t
    {standard input}:2082   .text.UsalphabetatoUsabc:0000007c $d
    {standard input}:2094   .text.SVMAlgorithm:00000000 $t
    {standard input}:2212   .rodata.SVMAlgorithm:00000000 $d
    {standard input}:2597   .text.SVMAlgorithm:00000378 $d
    {standard input}:2618   .text.SVMAlgorithm:000003c4 $t
    {standard input}:3035   .text.SVMAlgorithm:00000750 $d
    {standard input}:3052   .text.SVMAlgorithm:0000078c $t
    {standard input}:3194   .text.SVMAlgorithm:000008b8 $d
    {standard input}:3213   .text.SinCosCheck:00000000 $t
    {standard input}:3387   .text.SinCosCheck:00000124 $d
    {standard input}:3398   .text.LoopcontrolTask:00000000 $t
    {standard input}:3485   .text.LoopcontrolTask:00000068 $d
    {standard input}:3501   .text.WrapFrom0To2Pi:00000000 $t
    {standard input}:3506   .text.WrapFrom0To2Pi:00000000 WrapFrom0To2Pi
    {standard input}:3565   .text.WrapFrom0To2Pi:0000004c $d
    {standard input}:3570   .text.CloseLoopTHcal:00000000 $t
    {standard input}:3575   .text.CloseLoopTHcal:00000000 CloseLoopTHcal
    {standard input}:3769   .text.CloseLoopTHcal:00000134 $d
    {standard input}:3783   .text.ThetaLoopControl:00000000 $t
    {standard input}:4029   .text.ThetaLoopControl:00000188 $d
    {standard input}:4058   .text.floatAbs:00000000 $t
    {standard input}:4063   .text.floatAbs:00000000 floatAbs
    {standard input}:4109   .text.sinChebyshevF:00000000 $t
    {standard input}:4114   .text.sinChebyshevF:00000000 sinChebyshevF
    {standard input}:4201   .text.sinChebyshevF:0000008c $d
    {standard input}:4212   .text.cosChebyshevF:00000000 $t
    {standard input}:4217   .text.cosChebyshevF:00000000 cosChebyshevF
    {standard input}:4271   .text.cosChebyshevF:00000044 $d
    {standard input}:4276   .text.resetSMO:00000000 $t
    {standard input}:4281   .text.resetSMO:00000000 resetSMO
    {standard input}:4316   .text.resetSMO:00000020 $d
    {standard input}:4329   .text.currentCoeffCal:00000000 $t
    {standard input}:4334   .text.currentCoeffCal:00000000 currentCoeffCal
    {standard input}:4497   .text.currentCoeffCal:0000014c $d
    {standard input}:4509   .text.currentObserver:00000000 $t
    {standard input}:4514   .text.currentObserver:00000000 currentObserver
    {standard input}:4632   .text.currentObserver:000000cc $d
    {standard input}:4645   .text.BEMFobsCoeffCal:00000000 $t
    {standard input}:4650   .text.BEMFobsCoeffCal:00000000 BEMFobsCoeffCal
    {standard input}:4774   .text.BEMFobsCoeffCal:000000dc $d
    {standard input}:4786   .text.BEMFobserver:00000000 $t
    {standard input}:4791   .text.BEMFobserver:00000000 BEMFobserver
    {standard input}:4864   .text.BEMFobserver:0000007c $d
    {standard input}:4872   .text.exeSMO:00000000 $t
    {standard input}:4877   .text.exeSMO:00000000 exeSMO
    {standard input}:4961   .text.exeSMO:00000084 $d
    {standard input}:4976   .text.polynmApproxAtanf:00000000 $t
    {standard input}:4981   .text.polynmApproxAtanf:00000000 polynmApproxAtanf
    {standard input}:5061   .text.polynmApproxAtanf:0000007c $d
    {standard input}:5069   .text.polynmApproxAtan2f:00000000 $t
    {standard input}:5074   .text.polynmApproxAtan2f:00000000 polynmApproxAtan2f
    {standard input}:5228   .text.polynmApproxAtan2f:000000f4 $d
    {standard input}:5235   .text.ThetaCal:00000000 $t
    {standard input}:5240   .text.ThetaCal:00000000 ThetaCal
    {standard input}:5411   .text.ThetaCal:0000011c $d
    {standard input}:5427   .text.SpeedCal:00000000 $t
    {standard input}:5432   .text.SpeedCal:00000000 SpeedCal
    {standard input}:5531   .text.SpeedCal:00000098 $d
    {standard input}:5542   .text.resetSpeedCal:00000000 $t
    {standard input}:5547   .text.resetSpeedCal:00000000 resetSpeedCal
    {standard input}:5599   .text.resetSpeedCal:00000038 $d
    {standard input}:5605   .text.motionCal:00000000 $t
    {standard input}:5610   .text.motionCal:00000000 motionCal
    {standard input}:5634   .text.resetEstimator:00000000 $t
    {standard input}:5639   .text.resetEstimator:00000000 resetEstimator
    {standard input}:5670   .text.resetEstimator:0000001c $d
    {standard input}:5676   .text.motionEstimator:00000000 $t
    {standard input}:5844   .text.motionEstimator:000000e0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CurrentCoeffCal
__aeabi_i2f
__aeabi_fmul
ADC_MEASUREMENT_GetResult
ADC_MEASUREMENT_Current_PhaseU_handle
ADC_MEASUREMENT_Current_PhaseV_handle
PWM_CCU8_Start
PWM_CCU8_SetDutyCycleSymmetric
PWM_CCU8_0
PWM_CCU8_1
PWM_CCU8_2
__aeabi_fadd
__aeabi_fsub
__aeabi_fdiv
__aeabi_fcmpge
__aeabi_f2uiz
__aeabi_f2iz
__aeabi_fcmplt
__aeabi_fcmpgt
__aeabi_f2d
__aeabi_d2f
__aeabi_dsub
__aeabi_ddiv
__aeabi_dmul
exp
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ui2f
