   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm current_phaseU,2,2
  18              	 .comm current_phaseV,2,2
  19              	 .global ADC_scale
  20              	 .section .data.ADC_scale,"aw",%progbits
  21              	 .align 2
  24              	ADC_scale:
  25 0000 2611203B 	 .word 991957286
  26              	 .global cumulative_sum_phaseU
  27              	 .section .bss.cumulative_sum_phaseU,"aw",%nobits
  28              	 .align 2
  31              	cumulative_sum_phaseU:
  32 0000 00000000 	 .space 4
  33              	 .global cumulative_sum_phaseV
  34              	 .section .bss.cumulative_sum_phaseV,"aw",%nobits
  35              	 .align 2
  38              	cumulative_sum_phaseV:
  39 0000 00000000 	 .space 4
  40              	 .global moving_average_phaseU
  41              	 .section .bss.moving_average_phaseU,"aw",%nobits
  42              	 .align 2
  45              	moving_average_phaseU:
  46 0000 00000000 	 .space 4
  47              	 .global moving_average_phaseV
  48              	 .section .bss.moving_average_phaseV,"aw",%nobits
  49              	 .align 2
  52              	moving_average_phaseV:
  53 0000 00000000 	 .space 4
  54              	 .global aIObs
  55              	 .section .bss.aIObs,"aw",%nobits
  56              	 .align 2
  59              	aIObs:
  60 0000 00000000 	 .space 4
  61              	 .global b1IObs
  62              	 .section .bss.b1IObs,"aw",%nobits
  63              	 .align 2
  66              	b1IObs:
  67 0000 00000000 	 .space 4
  68              	 .global b2IObs
  69              	 .section .bss.b2IObs,"aw",%nobits
  70              	 .align 2
  73              	b2IObs:
  74 0000 00000000 	 .space 4
  75              	 .global b3IObs
  76              	 .section .bss.b3IObs,"aw",%nobits
  77              	 .align 2
  80              	b3IObs:
  81 0000 00000000 	 .space 4
  82              	 .global flagStartObs
  83              	 .section .bss.flagStartObs,"aw",%nobits
  84              	 .align 1
  87              	flagStartObs:
  88 0000 0000     	 .space 2
  89              	 .global EalphaHat
  90              	 .section .bss.EalphaHat,"aw",%nobits
  91              	 .align 2
  94              	EalphaHat:
  95 0000 00000000 	 .space 4
  96              	 .global EbetaHat
  97              	 .section .bss.EbetaHat,"aw",%nobits
  98              	 .align 2
 101              	EbetaHat:
 102 0000 00000000 	 .space 4
 103              	 .global IalphaHat
 104              	 .section .bss.IalphaHat,"aw",%nobits
 105              	 .align 2
 108              	IalphaHat:
 109 0000 00000000 	 .space 4
 110              	 .global IbetaHat
 111              	 .section .bss.IbetaHat,"aw",%nobits
 112              	 .align 2
 115              	IbetaHat:
 116 0000 00000000 	 .space 4
 117              	 .global Balpha
 118              	 .section .bss.Balpha,"aw",%nobits
 119              	 .align 2
 122              	Balpha:
 123 0000 00000000 	 .space 4
 124              	 .global Bbeta
 125              	 .section .bss.Bbeta,"aw",%nobits
 126              	 .align 2
 129              	Bbeta:
 130 0000 00000000 	 .space 4
 131              	 .global a1BEMFobs
 132              	 .section .bss.a1BEMFobs,"aw",%nobits
 133              	 .align 2
 136              	a1BEMFobs:
 137 0000 00000000 	 .space 4
 138              	 .global a2BEMFobs
 139              	 .section .bss.a2BEMFobs,"aw",%nobits
 140              	 .align 2
 143              	a2BEMFobs:
 144 0000 00000000 	 .space 4
 145              	 .global b1BEMFobs
 146              	 .section .bss.b1BEMFobs,"aw",%nobits
 147              	 .align 2
 150              	b1BEMFobs:
 151 0000 00000000 	 .space 4
 152              	 .global b2BEMFobs
 153              	 .section .bss.b2BEMFobs,"aw",%nobits
 154              	 .align 2
 157              	b2BEMFobs:
 158 0000 00000000 	 .space 4
 159              	 .global da
 160              	 .section .bss.da,"aw",%nobits
 161              	 .align 1
 164              	da:
 165 0000 0000     	 .space 2
 166              	 .global db
 167              	 .section .bss.db,"aw",%nobits
 168              	 .align 1
 171              	db:
 172 0000 0000     	 .space 2
 173              	 .global dc
 174              	 .section .bss.dc,"aw",%nobits
 175              	 .align 1
 178              	dc:
 179 0000 0000     	 .space 2
 180              	 .global d0
 181              	 .section .bss.d0,"aw",%nobits
 182              	 .align 2
 185              	d0:
 186 0000 00000000 	 .space 4
 187              	 .global d1
 188              	 .section .bss.d1,"aw",%nobits
 189              	 .align 2
 192              	d1:
 193 0000 00000000 	 .space 4
 194              	 .global d2
 195              	 .section .bss.d2,"aw",%nobits
 196              	 .align 2
 199              	d2:
 200 0000 00000000 	 .space 4
 201              	 .global OpenLoop
 202              	 .section .data.OpenLoop,"aw",%progbits
 203              	 .align 1
 206              	OpenLoop:
 207 0000 0100     	 .short 1
 208              	 .global ChangeMode
 209              	 .section .data.ChangeMode,"aw",%progbits
 210              	 .align 1
 213              	ChangeMode:
 214 0000 0100     	 .short 1
 215              	 .global Startup_Lock_Count
 216              	 .section .bss.Startup_Lock_Count,"aw",%nobits
 217              	 .align 1
 220              	Startup_Lock_Count:
 221 0000 0000     	 .space 2
 222              	 .global Speed_Maintain_Cnt1
 223              	 .section .bss.Speed_Maintain_Cnt1,"aw",%nobits
 224              	 .align 1
 227              	Speed_Maintain_Cnt1:
 228 0000 0000     	 .space 2
 229              	 .global SineTheta
 230              	 .section .bss.SineTheta,"aw",%nobits
 231              	 .align 2
 234              	SineTheta:
 235 0000 00000000 	 .space 4
 236              	 .global CosineTheta
 237              	 .section .bss.CosineTheta,"aw",%nobits
 238              	 .align 2
 241              	CosineTheta:
 242 0000 00000000 	 .space 4
 243              	 .global Theta
 244              	 .section .bss.Theta,"aw",%nobits
 245              	 .align 2
 248              	Theta:
 249 0000 00000000 	 .space 4
 250              	 .global Startup_Ramp_Angle_Rads_Per_Sec
 251              	 .section .bss.Startup_Ramp_Angle_Rads_Per_Sec,"aw",%nobits
 252              	 .align 2
 255              	Startup_Ramp_Angle_Rads_Per_Sec:
 256 0000 00000000 	 .space 4
 257              	 .global positionTH
 258              	 .section .bss.positionTH,"aw",%nobits
 259              	 .align 2
 262              	positionTH:
 263 0000 00000000 	 .space 4
 264              	 .global positiondTH
 265              	 .section .bss.positiondTH,"aw",%nobits
 266              	 .align 2
 269              	positiondTH:
 270 0000 00000000 	 .space 4
 271              	 .global positionTHI
 272              	 .section .bss.positionTHI,"aw",%nobits
 273              	 .align 2
 276              	positionTHI:
 277 0000 00000000 	 .space 4
 278              	 .global positionTHO
 279              	 .section .bss.positionTHO,"aw",%nobits
 280              	 .align 2
 283              	positionTHO:
 284 0000 00000000 	 .space 4
 285              	 .global positionzTH
 286              	 .section .bss.positionzTH,"aw",%nobits
 287              	 .align 2
 290              	positionzTH:
 291 0000 00000000 	 .space 4
 292              	 .global closeLoopTHI
 293              	 .section .bss.closeLoopTHI,"aw",%nobits
 294              	 .align 2
 297              	closeLoopTHI:
 298 0000 00000000 	 .space 4
 299              	 .global closeLoopTHO
 300              	 .section .bss.closeLoopTHO,"aw",%nobits
 301              	 .align 2
 304              	closeLoopTHO:
 305 0000 00000000 	 .space 4
 306              	 .global deviationTH
 307              	 .section .bss.deviationTH,"aw",%nobits
 308              	 .align 2
 311              	deviationTH:
 312 0000 00000000 	 .space 4
 313              	 .global decayRateTH
 314              	 .section .bss.decayRateTH,"aw",%nobits
 315              	 .align 2
 318              	decayRateTH:
 319 0000 00000000 	 .space 4
 320              	 .global closeLoopTHstate
 321              	 .section .bss.closeLoopTHstate,"aw",%nobits
 322              	 .align 1
 325              	closeLoopTHstate:
 326 0000 0000     	 .space 2
 327              	 .global finalTHI
 328              	 .section .bss.finalTHI,"aw",%nobits
 329              	 .align 2
 332              	finalTHI:
 333 0000 00000000 	 .space 4
 334              	 .global finalTHO
 335              	 .section .bss.finalTHO,"aw",%nobits
 336              	 .align 2
 339              	finalTHO:
 340 0000 00000000 	 .space 4
 341              	 .global estimatorState
 342              	 .section .bss.estimatorState,"aw",%nobits
 343              	 .align 1
 346              	estimatorState:
 347 0000 0000     	 .space 2
 348              	 .global estimatorStatecnt1
 349              	 .section .bss.estimatorStatecnt1,"aw",%nobits
 350              	 .align 1
 353              	estimatorStatecnt1:
 354 0000 0000     	 .space 2
 355              	 .global speedRefCnt
 356              	 .section .data.speedRefCnt,"aw",%progbits
 357              	 .align 2
 360              	speedRefCnt:
 361 0000 00007A45 	 .word 1165623296
 362              	 .global SUMdTH
 363              	 .section .bss.SUMdTH,"aw",%nobits
 364              	 .align 2
 367              	SUMdTH:
 368 0000 00000000 	 .space 4
 369              	 .global SpeedMea1
 370              	 .section .bss.SpeedMea1,"aw",%nobits
 371              	 .align 2
 374              	SpeedMea1:
 375 0000 00000000 	 .space 4
 376              	 .global SpeedMea
 377              	 .section .bss.SpeedMea,"aw",%nobits
 378              	 .align 2
 381              	SpeedMea:
 382 0000 00000000 	 .space 4
 383              	 .global SpeedRef
 384              	 .section .bss.SpeedRef,"aw",%nobits
 385              	 .align 2
 388              	SpeedRef:
 389 0000 00000000 	 .space 4
 390              	 .comm FIFOdTH,84,4
 391              	 .comm We,4,4
 392              	 .global countFIFO
 393              	 .section .bss.countFIFO,"aw",%nobits
 394              	 .align 1
 397              	countFIFO:
 398 0000 0000     	 .space 2
 399              	 .global current_u
 400              	 .section .bss.current_u,"aw",%nobits
 401              	 .align 2
 404              	current_u:
 405 0000 00000000 	 .space 4
 406              	 .global current_v
 407              	 .section .bss.current_v,"aw",%nobits
 408              	 .align 2
 411              	current_v:
 412 0000 00000000 	 .space 4
 413              	 .global current_alpha
 414              	 .section .bss.current_alpha,"aw",%nobits
 415              	 .align 2
 418              	current_alpha:
 419 0000 00000000 	 .space 4
 420              	 .global current_beta
 421              	 .section .bss.current_beta,"aw",%nobits
 422              	 .align 2
 425              	current_beta:
 426 0000 00000000 	 .space 4
 427              	 .global current_sd
 428              	 .section .bss.current_sd,"aw",%nobits
 429              	 .align 2
 432              	current_sd:
 433 0000 00000000 	 .space 4
 434              	 .global current_sq
 435              	 .section .bss.current_sq,"aw",%nobits
 436              	 .align 2
 439              	current_sq:
 440 0000 00000000 	 .space 4
 441              	 .global SpeedError
 442              	 .section .bss.SpeedError,"aw",%nobits
 443              	 .align 2
 446              	SpeedError:
 447 0000 00000000 	 .space 4
 448              	 .global Kp_IsqRef
 449              	 .section .data.Kp_IsqRef,"aw",%progbits
 450              	 .align 2
 453              	Kp_IsqRef:
 454 0000 0AD7A33C 	 .word 1017370378
 455              	 .global Ki_IsqRef
 456              	 .section .data.Ki_IsqRef,"aw",%progbits
 457              	 .align 2
 460              	Ki_IsqRef:
 461 0000 0AD7A33B 	 .word 1000593162
 462              	 .global sum_IsqRef
 463              	 .section .bss.sum_IsqRef,"aw",%nobits
 464              	 .align 2
 467              	sum_IsqRef:
 468 0000 00000000 	 .space 4
 469              	 .global IsqRef1
 470              	 .section .bss.IsqRef1,"aw",%nobits
 471              	 .align 2
 474              	IsqRef1:
 475 0000 00000000 	 .space 4
 476              	 .global IsqRef
 477              	 .section .bss.IsqRef,"aw",%nobits
 478              	 .align 2
 481              	IsqRef:
 482 0000 00000000 	 .space 4
 483              	 .global IsdError
 484              	 .section .bss.IsdError,"aw",%nobits
 485              	 .align 2
 488              	IsdError:
 489 0000 00000000 	 .space 4
 490              	 .global sum_Usd
 491              	 .section .bss.sum_Usd,"aw",%nobits
 492              	 .align 2
 495              	sum_Usd:
 496 0000 00000000 	 .space 4
 497              	 .global Usd1
 498              	 .section .bss.Usd1,"aw",%nobits
 499              	 .align 2
 502              	Usd1:
 503 0000 00000000 	 .space 4
 504              	 .global Usd
 505              	 .section .bss.Usd,"aw",%nobits
 506              	 .align 2
 509              	Usd:
 510 0000 00000000 	 .space 4
 511              	 .global Kp_Usd
 512              	 .section .data.Kp_Usd,"aw",%progbits
 513              	 .align 2
 516              	Kp_Usd:
 517 0000 0AD7A33C 	 .word 1017370378
 518              	 .global Ki_Usd
 519              	 .section .data.Ki_Usd,"aw",%progbits
 520              	 .align 2
 523              	Ki_Usd:
 524 0000 0AD7A33B 	 .word 1000593162
 525              	 .global IsqError
 526              	 .section .bss.IsqError,"aw",%nobits
 527              	 .align 2
 530              	IsqError:
 531 0000 00000000 	 .space 4
 532              	 .global sum_Usq
 533              	 .section .bss.sum_Usq,"aw",%nobits
 534              	 .align 2
 537              	sum_Usq:
 538 0000 00000000 	 .space 4
 539              	 .global Usq1
 540              	 .section .bss.Usq1,"aw",%nobits
 541              	 .align 2
 544              	Usq1:
 545 0000 00000000 	 .space 4
 546              	 .global Usq
 547              	 .section .bss.Usq,"aw",%nobits
 548              	 .align 2
 551              	Usq:
 552 0000 00000000 	 .space 4
 553              	 .global Kp_Usq
 554              	 .section .data.Kp_Usq,"aw",%progbits
 555              	 .align 2
 558              	Kp_Usq:
 559 0000 0AD7A33C 	 .word 1017370378
 560              	 .global Ki_Usq
 561              	 .section .data.Ki_Usq,"aw",%progbits
 562              	 .align 2
 565              	Ki_Usq:
 566 0000 0AD7A33B 	 .word 1000593162
 567              	 .global Usalpha
 568              	 .section .bss.Usalpha,"aw",%nobits
 569              	 .align 2
 572              	Usalpha:
 573 0000 00000000 	 .space 4
 574              	 .global Usbeta
 575              	 .section .bss.Usbeta,"aw",%nobits
 576              	 .align 2
 579              	Usbeta:
 580 0000 00000000 	 .space 4
 581              	 .global Usa
 582              	 .section .bss.Usa,"aw",%nobits
 583              	 .align 2
 586              	Usa:
 587 0000 00000000 	 .space 4
 588              	 .global Usb
 589              	 .section .bss.Usb,"aw",%nobits
 590              	 .align 2
 593              	Usb:
 594 0000 00000000 	 .space 4
 595              	 .global Usc
 596              	 .section .bss.Usc,"aw",%nobits
 597              	 .align 2
 600              	Usc:
 601 0000 00000000 	 .space 4
 602              	 .global SineTable
 603              	 .section .data.SineTable,"aw",%progbits
 604              	 .align 2
 607              	SineTable:
 608 0000 00000000 	 .word 0
 609 0004 350AC93C 	 .word 1019808309
 610 0008 87FB483D 	 .word 1028193159
 611 000c 3FA9963D 	 .word 1033283903
 612 0010 23BDC83D 	 .word 1036565795
 613 0014 9EB2FA3D 	 .word 1039839902
 614 0018 6440163E 	 .word 1041645668
 615 001c AA102F3E 	 .word 1043271850
 616 0020 ACC5473E 	 .word 1044891052
 617 0024 035C603E 	 .word 1046502403
 618 0028 C0CF783E 	 .word 1048104896
 619 002c 9B8E883E 	 .word 1049136795
 620 0030 3CA0943E 	 .word 1049927740
 621 0034 ED9AA03E 	 .word 1050712813
 622 0038 D97CAC3E 	 .word 1051491545
 623 003c 2844B83E 	 .word 1052263464
 624 0040 07EFC33E 	 .word 1053028103
 625 0044 C07BCF3E 	 .word 1053785024
 626 0048 7DE8DA3E 	 .word 1054533757
 627 004c 6A33E63E 	 .word 1055273834
 628 0050 F35AF13E 	 .word 1056004851
 629 0054 205DFC3E 	 .word 1056726304
 630 0058 419C033F 	 .word 1057201217
 631 005c A1F5083F 	 .word 1057551777
 632 0060 D6390E3F 	 .word 1057896918
 633 0064 2768133F 	 .word 1058236455
 634 0068 BB7F183F 	 .word 1058570171
 635 006c D87F1D3F 	 .word 1058897880
 636 0070 9467223F 	 .word 1059219348
 637 0074 5936273F 	 .word 1059534425
 638 0078 4AEB2B3F 	 .word 1059842890
 639 007c C285303F 	 .word 1060144578
 640 0080 F704353F 	 .word 1060439287
 641 0084 4068393F 	 .word 1060726848
 642 0088 F7AE3D3F 	 .word 1061007095
 643 008c 73D8413F 	 .word 1061279859
 644 0090 FCE3453F 	 .word 1061544956
 645 0094 0BD1493F 	 .word 1061802251
 646 0098 0A9F4D3F 	 .word 1062051594
 647 009c 404D513F 	 .word 1062292800
 648 00a0 38DB543F 	 .word 1062525752
 649 00a4 5A48583F 	 .word 1062750298
 650 00a8 21945B3F 	 .word 1062966305
 651 00ac 06BE5E3F 	 .word 1063173638
 652 00b0 93C5613F 	 .word 1063372179
 653 00b4 54AA643F 	 .word 1063561812
 654 00b8 D36B673F 	 .word 1063742419
 655 00bc AB096A3F 	 .word 1063913899
 656 00c0 66836C3F 	 .word 1064076134
 657 00c4 A1D86E3F 	 .word 1064229025
 658 00c8 0709713F 	 .word 1064372487
 659 00cc 4414733F 	 .word 1064506436
 660 00d0 05FA743F 	 .word 1064630789
 661 00d4 06BA763F 	 .word 1064745478
 662 00d8 F453783F 	 .word 1064850420
 663 00dc 9BC7793F 	 .word 1064945563
 664 00e0 BA147B3F 	 .word 1065030842
 665 00e4 2E3B7C3F 	 .word 1065106222
 666 00e8 B43A7D3F 	 .word 1065171636
 667 00ec 2B137E3F 	 .word 1065227051
 668 00f0 72C47E3F 	 .word 1065272434
 669 00f4 664E7F3F 	 .word 1065307750
 670 00f8 07B17F3F 	 .word 1065332999
 671 00fc 46EC7F3F 	 .word 1065348166
 672 0100 0000803F 	 .word 1065353216
 673 0104 46EC7F3F 	 .word 1065348166
 674 0108 07B17F3F 	 .word 1065332999
 675 010c 664E7F3F 	 .word 1065307750
 676 0110 72C47E3F 	 .word 1065272434
 677 0114 2B137E3F 	 .word 1065227051
 678 0118 B43A7D3F 	 .word 1065171636
 679 011c 2E3B7C3F 	 .word 1065106222
 680 0120 BA147B3F 	 .word 1065030842
 681 0124 9BC7793F 	 .word 1064945563
 682 0128 F453783F 	 .word 1064850420
 683 012c 06BA763F 	 .word 1064745478
 684 0130 05FA743F 	 .word 1064630789
 685 0134 4414733F 	 .word 1064506436
 686 0138 0709713F 	 .word 1064372487
 687 013c A1D86E3F 	 .word 1064229025
 688 0140 66836C3F 	 .word 1064076134
 689 0144 AB096A3F 	 .word 1063913899
 690 0148 D36B673F 	 .word 1063742419
 691 014c 54AA643F 	 .word 1063561812
 692 0150 93C5613F 	 .word 1063372179
 693 0154 06BE5E3F 	 .word 1063173638
 694 0158 21945B3F 	 .word 1062966305
 695 015c 5A48583F 	 .word 1062750298
 696 0160 38DB543F 	 .word 1062525752
 697 0164 404D513F 	 .word 1062292800
 698 0168 0A9F4D3F 	 .word 1062051594
 699 016c 0BD1493F 	 .word 1061802251
 700 0170 FCE3453F 	 .word 1061544956
 701 0174 73D8413F 	 .word 1061279859
 702 0178 F7AE3D3F 	 .word 1061007095
 703 017c 4068393F 	 .word 1060726848
 704 0180 F704353F 	 .word 1060439287
 705 0184 C285303F 	 .word 1060144578
 706 0188 4AEB2B3F 	 .word 1059842890
 707 018c 5936273F 	 .word 1059534425
 708 0190 9467223F 	 .word 1059219348
 709 0194 D87F1D3F 	 .word 1058897880
 710 0198 BB7F183F 	 .word 1058570171
 711 019c 2768133F 	 .word 1058236455
 712 01a0 D6390E3F 	 .word 1057896918
 713 01a4 A1F5083F 	 .word 1057551777
 714 01a8 419C033F 	 .word 1057201217
 715 01ac 205DFC3E 	 .word 1056726304
 716 01b0 F35AF13E 	 .word 1056004851
 717 01b4 6A33E63E 	 .word 1055273834
 718 01b8 7DE8DA3E 	 .word 1054533757
 719 01bc C07BCF3E 	 .word 1053785024
 720 01c0 07EFC33E 	 .word 1053028103
 721 01c4 2844B83E 	 .word 1052263464
 722 01c8 D97CAC3E 	 .word 1051491545
 723 01cc ED9AA03E 	 .word 1050712813
 724 01d0 3CA0943E 	 .word 1049927740
 725 01d4 9B8E883E 	 .word 1049136795
 726 01d8 C0CF783E 	 .word 1048104896
 727 01dc 035C603E 	 .word 1046502403
 728 01e0 ACC5473E 	 .word 1044891052
 729 01e4 AA102F3E 	 .word 1043271850
 730 01e8 6440163E 	 .word 1041645668
 731 01ec 9EB2FA3D 	 .word 1039839902
 732 01f0 23BDC83D 	 .word 1036565795
 733 01f4 3FA9963D 	 .word 1033283903
 734 01f8 87FB483D 	 .word 1028193159
 735 01fc 350AC93C 	 .word 1019808309
 736 0200 00000000 	 .word 0
 737 0204 350AC9BC 	 .word -1127675339
 738 0208 87FB48BD 	 .word -1119290489
 739 020c 3FA996BD 	 .word -1114199745
 740 0210 23BDC8BD 	 .word -1110917853
 741 0214 9EB2FABD 	 .word -1107643746
 742 0218 644016BE 	 .word -1105837980
 743 021c AA102FBE 	 .word -1104211798
 744 0220 ACC547BE 	 .word -1102592596
 745 0224 035C60BE 	 .word -1100981245
 746 0228 C0CF78BE 	 .word -1099378752
 747 022c 9B8E88BE 	 .word -1098346853
 748 0230 3CA094BE 	 .word -1097555908
 749 0234 ED9AA0BE 	 .word -1096770835
 750 0238 D97CACBE 	 .word -1095992103
 751 023c 2844B8BE 	 .word -1095220184
 752 0240 07EFC3BE 	 .word -1094455545
 753 0244 C07BCFBE 	 .word -1093698624
 754 0248 7DE8DABE 	 .word -1092949891
 755 024c 6A33E6BE 	 .word -1092209814
 756 0250 F35AF1BE 	 .word -1091478797
 757 0254 205DFCBE 	 .word -1090757344
 758 0258 419C03BF 	 .word -1090282431
 759 025c A1F508BF 	 .word -1089931871
 760 0260 D6390EBF 	 .word -1089586730
 761 0264 276813BF 	 .word -1089247193
 762 0268 BB7F18BF 	 .word -1088913477
 763 026c D87F1DBF 	 .word -1088585768
 764 0270 946722BF 	 .word -1088264300
 765 0274 593627BF 	 .word -1087949223
 766 0278 4AEB2BBF 	 .word -1087640758
 767 027c C28530BF 	 .word -1087339070
 768 0280 F70435BF 	 .word -1087044361
 769 0284 406839BF 	 .word -1086756800
 770 0288 F7AE3DBF 	 .word -1086476553
 771 028c 73D841BF 	 .word -1086203789
 772 0290 FCE345BF 	 .word -1085938692
 773 0294 0BD149BF 	 .word -1085681397
 774 0298 0A9F4DBF 	 .word -1085432054
 775 029c 404D51BF 	 .word -1085190848
 776 02a0 38DB54BF 	 .word -1084957896
 777 02a4 5A4858BF 	 .word -1084733350
 778 02a8 21945BBF 	 .word -1084517343
 779 02ac 06BE5EBF 	 .word -1084310010
 780 02b0 93C561BF 	 .word -1084111469
 781 02b4 54AA64BF 	 .word -1083921836
 782 02b8 D36B67BF 	 .word -1083741229
 783 02bc AB096ABF 	 .word -1083569749
 784 02c0 66836CBF 	 .word -1083407514
 785 02c4 A1D86EBF 	 .word -1083254623
 786 02c8 070971BF 	 .word -1083111161
 787 02cc 441473BF 	 .word -1082977212
 788 02d0 05FA74BF 	 .word -1082852859
 789 02d4 06BA76BF 	 .word -1082738170
 790 02d8 F45378BF 	 .word -1082633228
 791 02dc 9BC779BF 	 .word -1082538085
 792 02e0 BA147BBF 	 .word -1082452806
 793 02e4 2E3B7CBF 	 .word -1082377426
 794 02e8 B43A7DBF 	 .word -1082312012
 795 02ec 2B137EBF 	 .word -1082256597
 796 02f0 72C47EBF 	 .word -1082211214
 797 02f4 664E7FBF 	 .word -1082175898
 798 02f8 07B17FBF 	 .word -1082150649
 799 02fc 46EC7FBF 	 .word -1082135482
 800 0300 000080BF 	 .word -1082130432
 801 0304 46EC7FBF 	 .word -1082135482
 802 0308 07B17FBF 	 .word -1082150649
 803 030c 664E7FBF 	 .word -1082175898
 804 0310 72C47EBF 	 .word -1082211214
 805 0314 2B137EBF 	 .word -1082256597
 806 0318 B43A7DBF 	 .word -1082312012
 807 031c 2E3B7CBF 	 .word -1082377426
 808 0320 BA147BBF 	 .word -1082452806
 809 0324 9BC779BF 	 .word -1082538085
 810 0328 F45378BF 	 .word -1082633228
 811 032c 06BA76BF 	 .word -1082738170
 812 0330 05FA74BF 	 .word -1082852859
 813 0334 441473BF 	 .word -1082977212
 814 0338 070971BF 	 .word -1083111161
 815 033c A1D86EBF 	 .word -1083254623
 816 0340 66836CBF 	 .word -1083407514
 817 0344 AB096ABF 	 .word -1083569749
 818 0348 D36B67BF 	 .word -1083741229
 819 034c 54AA64BF 	 .word -1083921836
 820 0350 93C561BF 	 .word -1084111469
 821 0354 06BE5EBF 	 .word -1084310010
 822 0358 21945BBF 	 .word -1084517343
 823 035c 5A4858BF 	 .word -1084733350
 824 0360 38DB54BF 	 .word -1084957896
 825 0364 404D51BF 	 .word -1085190848
 826 0368 0A9F4DBF 	 .word -1085432054
 827 036c 0BD149BF 	 .word -1085681397
 828 0370 FCE345BF 	 .word -1085938692
 829 0374 73D841BF 	 .word -1086203789
 830 0378 F7AE3DBF 	 .word -1086476553
 831 037c 406839BF 	 .word -1086756800
 832 0380 F70435BF 	 .word -1087044361
 833 0384 C28530BF 	 .word -1087339070
 834 0388 4AEB2BBF 	 .word -1087640758
 835 038c 593627BF 	 .word -1087949223
 836 0390 946722BF 	 .word -1088264300
 837 0394 D87F1DBF 	 .word -1088585768
 838 0398 BB7F18BF 	 .word -1088913477
 839 039c 276813BF 	 .word -1089247193
 840 03a0 D6390EBF 	 .word -1089586730
 841 03a4 A1F508BF 	 .word -1089931871
 842 03a8 419C03BF 	 .word -1090282431
 843 03ac 205DFCBE 	 .word -1090757344
 844 03b0 F35AF1BE 	 .word -1091478797
 845 03b4 6A33E6BE 	 .word -1092209814
 846 03b8 7DE8DABE 	 .word -1092949891
 847 03bc C07BCFBE 	 .word -1093698624
 848 03c0 07EFC3BE 	 .word -1094455545
 849 03c4 2844B8BE 	 .word -1095220184
 850 03c8 D97CACBE 	 .word -1095992103
 851 03cc ED9AA0BE 	 .word -1096770835
 852 03d0 3CA094BE 	 .word -1097555908
 853 03d4 9B8E88BE 	 .word -1098346853
 854 03d8 C0CF78BE 	 .word -1099378752
 855 03dc 035C60BE 	 .word -1100981245
 856 03e0 ACC547BE 	 .word -1102592596
 857 03e4 AA102FBE 	 .word -1104211798
 858 03e8 644016BE 	 .word -1105837980
 859 03ec 9EB2FABD 	 .word -1107643746
 860 03f0 23BDC8BD 	 .word -1110917853
 861 03f4 3FA996BD 	 .word -1114199745
 862 03f8 87FB48BD 	 .word -1119290489
 863 03fc 350AC9BC 	 .word -1127675339
 864              	 .global CosineTable
 865              	 .section .data.CosineTable,"aw",%progbits
 866              	 .align 2
 869              	CosineTable:
 870 0000 0000803F 	 .word 1065353216
 871 0004 46EC7F3F 	 .word 1065348166
 872 0008 07B17F3F 	 .word 1065332999
 873 000c 664E7F3F 	 .word 1065307750
 874 0010 72C47E3F 	 .word 1065272434
 875 0014 2B137E3F 	 .word 1065227051
 876 0018 B43A7D3F 	 .word 1065171636
 877 001c 2E3B7C3F 	 .word 1065106222
 878 0020 BA147B3F 	 .word 1065030842
 879 0024 9BC7793F 	 .word 1064945563
 880 0028 F453783F 	 .word 1064850420
 881 002c 06BA763F 	 .word 1064745478
 882 0030 05FA743F 	 .word 1064630789
 883 0034 4414733F 	 .word 1064506436
 884 0038 0709713F 	 .word 1064372487
 885 003c A1D86E3F 	 .word 1064229025
 886 0040 66836C3F 	 .word 1064076134
 887 0044 AB096A3F 	 .word 1063913899
 888 0048 D36B673F 	 .word 1063742419
 889 004c 54AA643F 	 .word 1063561812
 890 0050 93C5613F 	 .word 1063372179
 891 0054 06BE5E3F 	 .word 1063173638
 892 0058 21945B3F 	 .word 1062966305
 893 005c 5A48583F 	 .word 1062750298
 894 0060 38DB543F 	 .word 1062525752
 895 0064 404D513F 	 .word 1062292800
 896 0068 0A9F4D3F 	 .word 1062051594
 897 006c 0BD1493F 	 .word 1061802251
 898 0070 FCE3453F 	 .word 1061544956
 899 0074 73D8413F 	 .word 1061279859
 900 0078 F7AE3D3F 	 .word 1061007095
 901 007c 4068393F 	 .word 1060726848
 902 0080 F704353F 	 .word 1060439287
 903 0084 C285303F 	 .word 1060144578
 904 0088 4AEB2B3F 	 .word 1059842890
 905 008c 5936273F 	 .word 1059534425
 906 0090 9467223F 	 .word 1059219348
 907 0094 D87F1D3F 	 .word 1058897880
 908 0098 BB7F183F 	 .word 1058570171
 909 009c 2768133F 	 .word 1058236455
 910 00a0 D6390E3F 	 .word 1057896918
 911 00a4 A1F5083F 	 .word 1057551777
 912 00a8 419C033F 	 .word 1057201217
 913 00ac 205DFC3E 	 .word 1056726304
 914 00b0 F35AF13E 	 .word 1056004851
 915 00b4 6A33E63E 	 .word 1055273834
 916 00b8 7DE8DA3E 	 .word 1054533757
 917 00bc C07BCF3E 	 .word 1053785024
 918 00c0 07EFC33E 	 .word 1053028103
 919 00c4 2844B83E 	 .word 1052263464
 920 00c8 D97CAC3E 	 .word 1051491545
 921 00cc ED9AA03E 	 .word 1050712813
 922 00d0 3CA0943E 	 .word 1049927740
 923 00d4 9B8E883E 	 .word 1049136795
 924 00d8 C0CF783E 	 .word 1048104896
 925 00dc 035C603E 	 .word 1046502403
 926 00e0 ACC5473E 	 .word 1044891052
 927 00e4 AA102F3E 	 .word 1043271850
 928 00e8 6440163E 	 .word 1041645668
 929 00ec 9EB2FA3D 	 .word 1039839902
 930 00f0 23BDC83D 	 .word 1036565795
 931 00f4 3FA9963D 	 .word 1033283903
 932 00f8 87FB483D 	 .word 1028193159
 933 00fc 350AC93C 	 .word 1019808309
 934 0100 00000000 	 .word 0
 935 0104 350AC9BC 	 .word -1127675339
 936 0108 87FB48BD 	 .word -1119290489
 937 010c 3FA996BD 	 .word -1114199745
 938 0110 23BDC8BD 	 .word -1110917853
 939 0114 9EB2FABD 	 .word -1107643746
 940 0118 644016BE 	 .word -1105837980
 941 011c AA102FBE 	 .word -1104211798
 942 0120 ACC547BE 	 .word -1102592596
 943 0124 035C60BE 	 .word -1100981245
 944 0128 C0CF78BE 	 .word -1099378752
 945 012c 9B8E88BE 	 .word -1098346853
 946 0130 3CA094BE 	 .word -1097555908
 947 0134 ED9AA0BE 	 .word -1096770835
 948 0138 D97CACBE 	 .word -1095992103
 949 013c 2844B8BE 	 .word -1095220184
 950 0140 07EFC3BE 	 .word -1094455545
 951 0144 C07BCFBE 	 .word -1093698624
 952 0148 7DE8DABE 	 .word -1092949891
 953 014c 6A33E6BE 	 .word -1092209814
 954 0150 F35AF1BE 	 .word -1091478797
 955 0154 205DFCBE 	 .word -1090757344
 956 0158 419C03BF 	 .word -1090282431
 957 015c A1F508BF 	 .word -1089931871
 958 0160 D6390EBF 	 .word -1089586730
 959 0164 276813BF 	 .word -1089247193
 960 0168 BB7F18BF 	 .word -1088913477
 961 016c D87F1DBF 	 .word -1088585768
 962 0170 946722BF 	 .word -1088264300
 963 0174 593627BF 	 .word -1087949223
 964 0178 4AEB2BBF 	 .word -1087640758
 965 017c C28530BF 	 .word -1087339070
 966 0180 F70435BF 	 .word -1087044361
 967 0184 406839BF 	 .word -1086756800
 968 0188 F7AE3DBF 	 .word -1086476553
 969 018c 73D841BF 	 .word -1086203789
 970 0190 FCE345BF 	 .word -1085938692
 971 0194 0BD149BF 	 .word -1085681397
 972 0198 0A9F4DBF 	 .word -1085432054
 973 019c 404D51BF 	 .word -1085190848
 974 01a0 38DB54BF 	 .word -1084957896
 975 01a4 5A4858BF 	 .word -1084733350
 976 01a8 21945BBF 	 .word -1084517343
 977 01ac 06BE5EBF 	 .word -1084310010
 978 01b0 93C561BF 	 .word -1084111469
 979 01b4 54AA64BF 	 .word -1083921836
 980 01b8 D36B67BF 	 .word -1083741229
 981 01bc AB096ABF 	 .word -1083569749
 982 01c0 66836CBF 	 .word -1083407514
 983 01c4 A1D86EBF 	 .word -1083254623
 984 01c8 070971BF 	 .word -1083111161
 985 01cc 441473BF 	 .word -1082977212
 986 01d0 05FA74BF 	 .word -1082852859
 987 01d4 06BA76BF 	 .word -1082738170
 988 01d8 F45378BF 	 .word -1082633228
 989 01dc 9BC779BF 	 .word -1082538085
 990 01e0 BA147BBF 	 .word -1082452806
 991 01e4 2E3B7CBF 	 .word -1082377426
 992 01e8 B43A7DBF 	 .word -1082312012
 993 01ec 2B137EBF 	 .word -1082256597
 994 01f0 72C47EBF 	 .word -1082211214
 995 01f4 664E7FBF 	 .word -1082175898
 996 01f8 07B17FBF 	 .word -1082150649
 997 01fc 46EC7FBF 	 .word -1082135482
 998 0200 000080BF 	 .word -1082130432
 999 0204 46EC7FBF 	 .word -1082135482
 1000 0208 07B17FBF 	 .word -1082150649
 1001 020c 664E7FBF 	 .word -1082175898
 1002 0210 72C47EBF 	 .word -1082211214
 1003 0214 2B137EBF 	 .word -1082256597
 1004 0218 B43A7DBF 	 .word -1082312012
 1005 021c 2E3B7CBF 	 .word -1082377426
 1006 0220 BA147BBF 	 .word -1082452806
 1007 0224 9BC779BF 	 .word -1082538085
 1008 0228 F45378BF 	 .word -1082633228
 1009 022c 06BA76BF 	 .word -1082738170
 1010 0230 05FA74BF 	 .word -1082852859
 1011 0234 441473BF 	 .word -1082977212
 1012 0238 070971BF 	 .word -1083111161
 1013 023c A1D86EBF 	 .word -1083254623
 1014 0240 66836CBF 	 .word -1083407514
 1015 0244 AB096ABF 	 .word -1083569749
 1016 0248 D36B67BF 	 .word -1083741229
 1017 024c 54AA64BF 	 .word -1083921836
 1018 0250 93C561BF 	 .word -1084111469
 1019 0254 06BE5EBF 	 .word -1084310010
 1020 0258 21945BBF 	 .word -1084517343
 1021 025c 5A4858BF 	 .word -1084733350
 1022 0260 38DB54BF 	 .word -1084957896
 1023 0264 404D51BF 	 .word -1085190848
 1024 0268 0A9F4DBF 	 .word -1085432054
 1025 026c 0BD149BF 	 .word -1085681397
 1026 0270 FCE345BF 	 .word -1085938692
 1027 0274 73D841BF 	 .word -1086203789
 1028 0278 F7AE3DBF 	 .word -1086476553
 1029 027c 406839BF 	 .word -1086756800
 1030 0280 F70435BF 	 .word -1087044361
 1031 0284 C28530BF 	 .word -1087339070
 1032 0288 4AEB2BBF 	 .word -1087640758
 1033 028c 593627BF 	 .word -1087949223
 1034 0290 946722BF 	 .word -1088264300
 1035 0294 D87F1DBF 	 .word -1088585768
 1036 0298 BB7F18BF 	 .word -1088913477
 1037 029c 276813BF 	 .word -1089247193
 1038 02a0 D6390EBF 	 .word -1089586730
 1039 02a4 A1F508BF 	 .word -1089931871
 1040 02a8 419C03BF 	 .word -1090282431
 1041 02ac 205DFCBE 	 .word -1090757344
 1042 02b0 F35AF1BE 	 .word -1091478797
 1043 02b4 6A33E6BE 	 .word -1092209814
 1044 02b8 7DE8DABE 	 .word -1092949891
 1045 02bc C07BCFBE 	 .word -1093698624
 1046 02c0 07EFC3BE 	 .word -1094455545
 1047 02c4 2844B8BE 	 .word -1095220184
 1048 02c8 D97CACBE 	 .word -1095992103
 1049 02cc ED9AA0BE 	 .word -1096770835
 1050 02d0 3CA094BE 	 .word -1097555908
 1051 02d4 9B8E88BE 	 .word -1098346853
 1052 02d8 C0CF78BE 	 .word -1099378752
 1053 02dc 035C60BE 	 .word -1100981245
 1054 02e0 ACC547BE 	 .word -1102592596
 1055 02e4 AA102FBE 	 .word -1104211798
 1056 02e8 644016BE 	 .word -1105837980
 1057 02ec 9EB2FABD 	 .word -1107643746
 1058 02f0 23BDC8BD 	 .word -1110917853
 1059 02f4 3FA996BD 	 .word -1114199745
 1060 02f8 87FB48BD 	 .word -1119290489
 1061 02fc 350AC9BC 	 .word -1127675339
 1062 0300 00000000 	 .word 0
 1063 0304 350AC93C 	 .word 1019808309
 1064 0308 87FB483D 	 .word 1028193159
 1065 030c 3FA9963D 	 .word 1033283903
 1066 0310 23BDC83D 	 .word 1036565795
 1067 0314 9EB2FA3D 	 .word 1039839902
 1068 0318 6440163E 	 .word 1041645668
 1069 031c AA102F3E 	 .word 1043271850
 1070 0320 ACC5473E 	 .word 1044891052
 1071 0324 035C603E 	 .word 1046502403
 1072 0328 C0CF783E 	 .word 1048104896
 1073 032c 9B8E883E 	 .word 1049136795
 1074 0330 3CA0943E 	 .word 1049927740
 1075 0334 ED9AA03E 	 .word 1050712813
 1076 0338 D97CAC3E 	 .word 1051491545
 1077 033c 2844B83E 	 .word 1052263464
 1078 0340 07EFC33E 	 .word 1053028103
 1079 0344 C07BCF3E 	 .word 1053785024
 1080 0348 7DE8DA3E 	 .word 1054533757
 1081 034c 6A33E63E 	 .word 1055273834
 1082 0350 F35AF13E 	 .word 1056004851
 1083 0354 205DFC3E 	 .word 1056726304
 1084 0358 419C033F 	 .word 1057201217
 1085 035c A1F5083F 	 .word 1057551777
 1086 0360 D6390E3F 	 .word 1057896918
 1087 0364 2768133F 	 .word 1058236455
 1088 0368 BB7F183F 	 .word 1058570171
 1089 036c D87F1D3F 	 .word 1058897880
 1090 0370 9467223F 	 .word 1059219348
 1091 0374 5936273F 	 .word 1059534425
 1092 0378 4AEB2B3F 	 .word 1059842890
 1093 037c C285303F 	 .word 1060144578
 1094 0380 F704353F 	 .word 1060439287
 1095 0384 4068393F 	 .word 1060726848
 1096 0388 F7AE3D3F 	 .word 1061007095
 1097 038c 73D8413F 	 .word 1061279859
 1098 0390 FCE3453F 	 .word 1061544956
 1099 0394 0BD1493F 	 .word 1061802251
 1100 0398 0A9F4D3F 	 .word 1062051594
 1101 039c 404D513F 	 .word 1062292800
 1102 03a0 38DB543F 	 .word 1062525752
 1103 03a4 5A48583F 	 .word 1062750298
 1104 03a8 21945B3F 	 .word 1062966305
 1105 03ac 06BE5E3F 	 .word 1063173638
 1106 03b0 93C5613F 	 .word 1063372179
 1107 03b4 54AA643F 	 .word 1063561812
 1108 03b8 D36B673F 	 .word 1063742419
 1109 03bc AB096A3F 	 .word 1063913899
 1110 03c0 66836C3F 	 .word 1064076134
 1111 03c4 A1D86E3F 	 .word 1064229025
 1112 03c8 0709713F 	 .word 1064372487
 1113 03cc 4414733F 	 .word 1064506436
 1114 03d0 05FA743F 	 .word 1064630789
 1115 03d4 06BA763F 	 .word 1064745478
 1116 03d8 F453783F 	 .word 1064850420
 1117 03dc 9BC7793F 	 .word 1064945563
 1118 03e0 BA147B3F 	 .word 1065030842
 1119 03e4 2E3B7C3F 	 .word 1065106222
 1120 03e8 B43A7D3F 	 .word 1065171636
 1121 03ec 2B137E3F 	 .word 1065227051
 1122 03f0 72C47E3F 	 .word 1065272434
 1123 03f4 664E7F3F 	 .word 1065307750
 1124 03f8 07B17F3F 	 .word 1065332999
 1125 03fc 46EC7F3F 	 .word 1065348166
 1126              	 .section .text.main,"ax",%progbits
 1127              	 .align 2
 1128              	 .global main
 1129              	 .code 16
 1130              	 .thumb_func
 1132              	main:
 1133              	.LFB463:
 1134              	 .file 1 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2024 Aug 05 09:00:14
   5:../main.c     ****  *  Author: dell
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** 
  11:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
  12:../main.c     **** #include "parameter.h"
  13:../main.c     **** /**
  14:../main.c     **** 
  15:../main.c     ****  * @brief main() - Application entry point
  16:../main.c     ****  *
  17:../main.c     ****  * <b>Details of function</b><br>
  18:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  19:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  20:../main.c     ****  * code.
  21:../main.c     ****  */
  22:../main.c     **** XMC_VADC_RESULT_SIZE_t current_phaseU,current_phaseV;
  23:../main.c     **** float ADC_scale=max_motor_current/1433;
  24:../main.c     **** unsigned int cumulative_sum_phaseU=0;
  25:../main.c     **** unsigned int cumulative_sum_phaseV=0;
  26:../main.c     **** int32_t moving_average_phaseU=0;
  27:../main.c     **** int32_t moving_average_phaseV=0;
  28:../main.c     **** 
  29:../main.c     **** float aIObs = 0;
  30:../main.c     **** float b1IObs = 0;
  31:../main.c     **** float b2IObs = 0;
  32:../main.c     **** float b3IObs = 0;
  33:../main.c     **** uint16_t flagStartObs=0;
  34:../main.c     **** float EalphaHat=0;
  35:../main.c     **** float EbetaHat=0;
  36:../main.c     **** float IalphaHat=0;
  37:../main.c     **** float IbetaHat=0;
  38:../main.c     **** float Balpha=0;
  39:../main.c     **** float Bbeta=0;
  40:../main.c     **** float a1BEMFobs=0;
  41:../main.c     **** float a2BEMFobs=0;
  42:../main.c     **** float b1BEMFobs=0;
  43:../main.c     **** float b2BEMFobs=0;
  44:../main.c     **** 
  45:../main.c     **** 
  46:../main.c     **** uint16_t da=0,db=0,dc=0;
  47:../main.c     **** float d0=0,d1=0,d2=0;
  48:../main.c     **** 
  49:../main.c     **** uint16_t OpenLoop=1;
  50:../main.c     **** uint16_t ChangeMode=1;
  51:../main.c     **** 
  52:../main.c     **** uint16_t Startup_Lock_Count = 0;
  53:../main.c     **** uint16_t Speed_Maintain_Cnt1=0;
  54:../main.c     **** 
  55:../main.c     **** float SineTheta=0;
  56:../main.c     **** float CosineTheta=0;
  57:../main.c     **** float Theta=0;
  58:../main.c     **** float Startup_Ramp_Angle_Rads_Per_Sec=0;
  59:../main.c     **** float positionTH=0;
  60:../main.c     **** float positiondTH=0;
  61:../main.c     **** float positionTHI=0;
  62:../main.c     **** float positionTHO=0;
  63:../main.c     **** float positionzTH=0;
  64:../main.c     **** float closeLoopTHI=0;
  65:../main.c     **** float closeLoopTHO=0;
  66:../main.c     **** float deviationTH=0;
  67:../main.c     **** float decayRateTH=0;
  68:../main.c     **** uint16_t closeLoopTHstate=0;
  69:../main.c     **** float finalTHI=0;
  70:../main.c     **** float finalTHO=0;
  71:../main.c     **** 
  72:../main.c     **** uint16_t estimatorState=0;
  73:../main.c     **** uint16_t estimatorStatecnt1=0;
  74:../main.c     **** float speedRefCnt=(float)(0.2)*PWM_FREQ;
  75:../main.c     **** 
  76:../main.c     **** float SUMdTH=0;
  77:../main.c     **** float SpeedMea1=0;
  78:../main.c     **** float SpeedMea=0;
  79:../main.c     **** float SpeedRef=0;
  80:../main.c     **** float FIFOdTH[21];
  81:../main.c     **** float We;
  82:../main.c     **** uint16_t countFIFO=0;
  83:../main.c     **** 
  84:../main.c     **** 
  85:../main.c     **** float current_u=0;
  86:../main.c     **** float current_v=0;
  87:../main.c     **** float current_alpha=0;
  88:../main.c     **** float current_beta=0;
  89:../main.c     **** float current_sd=0;
  90:../main.c     **** float current_sq=0;
  91:../main.c     **** 
  92:../main.c     **** float SpeedError=0;
  93:../main.c     **** float Kp_IsqRef=0.02;
  94:../main.c     **** float Ki_IsqRef=0.005;
  95:../main.c     **** float sum_IsqRef=0;
  96:../main.c     **** float IsqRef1=0;
  97:../main.c     **** float IsqRef=0;
  98:../main.c     **** float IsdError=0;
  99:../main.c     **** float sum_Usd=0;
 100:../main.c     **** float Usd1=0;
 101:../main.c     **** float Usd=0;
 102:../main.c     **** float Kp_Usd=0.02;
 103:../main.c     **** float Ki_Usd=0.005;
 104:../main.c     **** float IsqError=0;
 105:../main.c     **** float sum_Usq=0;
 106:../main.c     **** float Usq1=0;
 107:../main.c     **** float Usq=0;
 108:../main.c     **** float Kp_Usq=0.02;
 109:../main.c     **** float Ki_Usq=0.005;
 110:../main.c     **** 
 111:../main.c     **** 
 112:../main.c     **** float Usalpha=0,Usbeta=0;
 113:../main.c     **** float Usa=0,Usb=0,Usc=0;
 114:../main.c     **** float SineTable[256]=
 115:../main.c     **** {
 116:../main.c     **** 0.0f,
 117:../main.c     **** 0.024541f,
 118:../main.c     **** 0.049068f,
 119:../main.c     **** 0.073565f,
 120:../main.c     **** 0.098017f,
 121:../main.c     **** 0.122411f,
 122:../main.c     **** 0.14673f,
 123:../main.c     **** 0.170962f,
 124:../main.c     **** 0.19509f,
 125:../main.c     **** 0.219101f,
 126:../main.c     **** 0.24298f,
 127:../main.c     **** 0.266713f,
 128:../main.c     **** 0.290285f,
 129:../main.c     **** 0.313682f,
 130:../main.c     **** 0.33689f,
 131:../main.c     **** 0.359895f,
 132:../main.c     **** 0.382683f,
 133:../main.c     **** 0.405241f,
 134:../main.c     **** 0.427555f,
 135:../main.c     **** 0.449611f,
 136:../main.c     **** 0.471397f,
 137:../main.c     **** 0.492898f,
 138:../main.c     **** 0.514103f,
 139:../main.c     **** 0.534998f,
 140:../main.c     **** 0.55557f,
 141:../main.c     **** 0.575808f,
 142:../main.c     **** 0.595699f,
 143:../main.c     **** 0.615232f,
 144:../main.c     **** 0.634393f,
 145:../main.c     **** 0.653173f,
 146:../main.c     **** 0.671559f,
 147:../main.c     **** 0.689541f,
 148:../main.c     **** 0.707107f,
 149:../main.c     **** 0.724247f,
 150:../main.c     **** 0.740951f,
 151:../main.c     **** 0.757209f,
 152:../main.c     **** 0.77301f,
 153:../main.c     **** 0.788346f,
 154:../main.c     **** 0.803208f,
 155:../main.c     **** 0.817585f,
 156:../main.c     **** 0.83147f,
 157:../main.c     **** 0.844854f,
 158:../main.c     **** 0.857729f,
 159:../main.c     **** 0.870087f,
 160:../main.c     **** 0.881921f,
 161:../main.c     **** 0.893224f,
 162:../main.c     **** 0.903989f,
 163:../main.c     **** 0.91421f,
 164:../main.c     **** 0.92388f,
 165:../main.c     **** 0.932993f,
 166:../main.c     **** 0.941544f,
 167:../main.c     **** 0.949528f,
 168:../main.c     **** 0.95694f,
 169:../main.c     **** 0.963776f,
 170:../main.c     **** 0.970031f,
 171:../main.c     **** 0.975702f,
 172:../main.c     **** 0.980785f,
 173:../main.c     **** 0.985278f,
 174:../main.c     **** 0.989177f,
 175:../main.c     **** 0.99248f,
 176:../main.c     **** 0.995185f,
 177:../main.c     **** 0.99729f,
 178:../main.c     **** 0.998795f,
 179:../main.c     **** 0.999699f,
 180:../main.c     **** 1.0f,
 181:../main.c     **** 0.999699f,
 182:../main.c     **** 0.998795f,
 183:../main.c     **** 0.99729f,
 184:../main.c     **** 0.995185f,
 185:../main.c     **** 0.99248f,
 186:../main.c     **** 0.989177f,
 187:../main.c     **** 0.985278f,
 188:../main.c     **** 0.980785f,
 189:../main.c     **** 0.975702f,
 190:../main.c     **** 0.970031f,
 191:../main.c     **** 0.963776f,
 192:../main.c     **** 0.95694f,
 193:../main.c     **** 0.949528f,
 194:../main.c     **** 0.941544f,
 195:../main.c     **** 0.932993f,
 196:../main.c     **** 0.92388f,
 197:../main.c     **** 0.91421f,
 198:../main.c     **** 0.903989f,
 199:../main.c     **** 0.893224f,
 200:../main.c     **** 0.881921f,
 201:../main.c     **** 0.870087f,
 202:../main.c     **** 0.857729f,
 203:../main.c     **** 0.844854f,
 204:../main.c     **** 0.83147f,
 205:../main.c     **** 0.817585f,
 206:../main.c     **** 0.803208f,
 207:../main.c     **** 0.788346f,
 208:../main.c     **** 0.77301f,
 209:../main.c     **** 0.757209f,
 210:../main.c     **** 0.740951f,
 211:../main.c     **** 0.724247f,
 212:../main.c     **** 0.707107f,
 213:../main.c     **** 0.689541f,
 214:../main.c     **** 0.671559f,
 215:../main.c     **** 0.653173f,
 216:../main.c     **** 0.634393f,
 217:../main.c     **** 0.615232f,
 218:../main.c     **** 0.595699f,
 219:../main.c     **** 0.575808f,
 220:../main.c     **** 0.55557f,
 221:../main.c     **** 0.534998f,
 222:../main.c     **** 0.514103f,
 223:../main.c     **** 0.492898f,
 224:../main.c     **** 0.471397f,
 225:../main.c     **** 0.449611f,
 226:../main.c     **** 0.427555f,
 227:../main.c     **** 0.405241f,
 228:../main.c     **** 0.382683f,
 229:../main.c     **** 0.359895f,
 230:../main.c     **** 0.33689f,
 231:../main.c     **** 0.313682f,
 232:../main.c     **** 0.290285f,
 233:../main.c     **** 0.266713f,
 234:../main.c     **** 0.24298f,
 235:../main.c     **** 0.219101f,
 236:../main.c     **** 0.19509f,
 237:../main.c     **** 0.170962f,
 238:../main.c     **** 0.14673f,
 239:../main.c     **** 0.122411f,
 240:../main.c     **** 0.098017f,
 241:../main.c     **** 0.073565f,
 242:../main.c     **** 0.049068f,
 243:../main.c     **** 0.024541f,
 244:../main.c     **** 0.0f,
 245:../main.c     **** -0.024541f,
 246:../main.c     **** -0.049068f,
 247:../main.c     **** -0.073565f,
 248:../main.c     **** -0.098017f,
 249:../main.c     **** -0.122411f,
 250:../main.c     **** -0.14673f,
 251:../main.c     **** -0.170962f,
 252:../main.c     **** -0.19509f,
 253:../main.c     **** -0.219101f,
 254:../main.c     **** -0.24298f,
 255:../main.c     **** -0.266713f,
 256:../main.c     **** -0.290285f,
 257:../main.c     **** -0.313682f,
 258:../main.c     **** -0.33689f,
 259:../main.c     **** -0.359895f,
 260:../main.c     **** -0.382683f,
 261:../main.c     **** -0.405241f,
 262:../main.c     **** -0.427555f,
 263:../main.c     **** -0.449611f,
 264:../main.c     **** -0.471397f,
 265:../main.c     **** -0.492898f,
 266:../main.c     **** -0.514103f,
 267:../main.c     **** -0.534998f,
 268:../main.c     **** -0.55557f,
 269:../main.c     **** -0.575808f,
 270:../main.c     **** -0.595699f,
 271:../main.c     **** -0.615232f,
 272:../main.c     **** -0.634393f,
 273:../main.c     **** -0.653173f,
 274:../main.c     **** -0.671559f,
 275:../main.c     **** -0.689541f,
 276:../main.c     **** -0.707107f,
 277:../main.c     **** -0.724247f,
 278:../main.c     **** -0.740951f,
 279:../main.c     **** -0.757209f,
 280:../main.c     **** -0.77301f,
 281:../main.c     **** -0.788346f,
 282:../main.c     **** -0.803208f,
 283:../main.c     **** -0.817585f,
 284:../main.c     **** -0.83147f,
 285:../main.c     **** -0.844854f,
 286:../main.c     **** -0.857729f,
 287:../main.c     **** -0.870087f,
 288:../main.c     **** -0.881921f,
 289:../main.c     **** -0.893224f,
 290:../main.c     **** -0.903989f,
 291:../main.c     **** -0.91421f,
 292:../main.c     **** -0.92388f,
 293:../main.c     **** -0.932993f,
 294:../main.c     **** -0.941544f,
 295:../main.c     **** -0.949528f,
 296:../main.c     **** -0.95694f,
 297:../main.c     **** -0.963776f,
 298:../main.c     **** -0.970031f,
 299:../main.c     **** -0.975702f,
 300:../main.c     **** -0.980785f,
 301:../main.c     **** -0.985278f,
 302:../main.c     **** -0.989177f,
 303:../main.c     **** -0.99248f,
 304:../main.c     **** -0.995185f,
 305:../main.c     **** -0.99729f,
 306:../main.c     **** -0.998795f,
 307:../main.c     **** -0.999699f,
 308:../main.c     **** -1.0f,
 309:../main.c     **** -0.999699f,
 310:../main.c     **** -0.998795f,
 311:../main.c     **** -0.99729f,
 312:../main.c     **** -0.995185f,
 313:../main.c     **** -0.99248f,
 314:../main.c     **** -0.989177f,
 315:../main.c     **** -0.985278f,
 316:../main.c     **** -0.980785f,
 317:../main.c     **** -0.975702f,
 318:../main.c     **** -0.970031f,
 319:../main.c     **** -0.963776f,
 320:../main.c     **** -0.95694f,
 321:../main.c     **** -0.949528f,
 322:../main.c     **** -0.941544f,
 323:../main.c     **** -0.932993f,
 324:../main.c     **** -0.92388f,
 325:../main.c     **** -0.91421f,
 326:../main.c     **** -0.903989f,
 327:../main.c     **** -0.893224f,
 328:../main.c     **** -0.881921f,
 329:../main.c     **** -0.870087f,
 330:../main.c     **** -0.857729f,
 331:../main.c     **** -0.844854f,
 332:../main.c     **** -0.83147f,
 333:../main.c     **** -0.817585f,
 334:../main.c     **** -0.803208f,
 335:../main.c     **** -0.788346f,
 336:../main.c     **** -0.77301f,
 337:../main.c     **** -0.757209f,
 338:../main.c     **** -0.740951f,
 339:../main.c     **** -0.724247f,
 340:../main.c     **** -0.707107f,
 341:../main.c     **** -0.689541f,
 342:../main.c     **** -0.671559f,
 343:../main.c     **** -0.653173f,
 344:../main.c     **** -0.634393f,
 345:../main.c     **** -0.615232f,
 346:../main.c     **** -0.595699f,
 347:../main.c     **** -0.575808f,
 348:../main.c     **** -0.55557f,
 349:../main.c     **** -0.534998f,
 350:../main.c     **** -0.514103f,
 351:../main.c     **** -0.492898f,
 352:../main.c     **** -0.471397f,
 353:../main.c     **** -0.449611f,
 354:../main.c     **** -0.427555f,
 355:../main.c     **** -0.405241f,
 356:../main.c     **** -0.382683f,
 357:../main.c     **** -0.359895f,
 358:../main.c     **** -0.33689f,
 359:../main.c     **** -0.313682f,
 360:../main.c     **** -0.290285f,
 361:../main.c     **** -0.266713f,
 362:../main.c     **** -0.24298f,
 363:../main.c     **** -0.219101f,
 364:../main.c     **** -0.19509f,
 365:../main.c     **** -0.170962f,
 366:../main.c     **** -0.14673f,
 367:../main.c     **** -0.122411f,
 368:../main.c     **** -0.098017f,
 369:../main.c     **** -0.073565f,
 370:../main.c     **** -0.049068f,
 371:../main.c     **** -0.024541f
 372:../main.c     **** };
 373:../main.c     **** float CosineTable[256]=
 374:../main.c     **** {
 375:../main.c     **** 1.0f,
 376:../main.c     **** 0.999699f,
 377:../main.c     **** 0.998795f,
 378:../main.c     **** 0.99729f,
 379:../main.c     **** 0.995185f,
 380:../main.c     **** 0.99248f,
 381:../main.c     **** 0.989177f,
 382:../main.c     **** 0.985278f,
 383:../main.c     **** 0.980785f,
 384:../main.c     **** 0.975702f,
 385:../main.c     **** 0.970031f,
 386:../main.c     **** 0.963776f,
 387:../main.c     **** 0.95694f,
 388:../main.c     **** 0.949528f,
 389:../main.c     **** 0.941544f,
 390:../main.c     **** 0.932993f,
 391:../main.c     **** 0.92388f,
 392:../main.c     **** 0.91421f,
 393:../main.c     **** 0.903989f,
 394:../main.c     **** 0.893224f,
 395:../main.c     **** 0.881921f,
 396:../main.c     **** 0.870087f,
 397:../main.c     **** 0.857729f,
 398:../main.c     **** 0.844854f,
 399:../main.c     **** 0.83147f,
 400:../main.c     **** 0.817585f,
 401:../main.c     **** 0.803208f,
 402:../main.c     **** 0.788346f,
 403:../main.c     **** 0.77301f,
 404:../main.c     **** 0.757209f,
 405:../main.c     **** 0.740951f,
 406:../main.c     **** 0.724247f,
 407:../main.c     **** 0.707107f,
 408:../main.c     **** 0.689541f,
 409:../main.c     **** 0.671559f,
 410:../main.c     **** 0.653173f,
 411:../main.c     **** 0.634393f,
 412:../main.c     **** 0.615232f,
 413:../main.c     **** 0.595699f,
 414:../main.c     **** 0.575808f,
 415:../main.c     **** 0.55557f,
 416:../main.c     **** 0.534998f,
 417:../main.c     **** 0.514103f,
 418:../main.c     **** 0.492898f,
 419:../main.c     **** 0.471397f,
 420:../main.c     **** 0.449611f,
 421:../main.c     **** 0.427555f,
 422:../main.c     **** 0.405241f,
 423:../main.c     **** 0.382683f,
 424:../main.c     **** 0.359895f,
 425:../main.c     **** 0.33689f,
 426:../main.c     **** 0.313682f,
 427:../main.c     **** 0.290285f,
 428:../main.c     **** 0.266713f,
 429:../main.c     **** 0.24298f,
 430:../main.c     **** 0.219101f,
 431:../main.c     **** 0.19509f,
 432:../main.c     **** 0.170962f,
 433:../main.c     **** 0.14673f,
 434:../main.c     **** 0.122411f,
 435:../main.c     **** 0.098017f,
 436:../main.c     **** 0.073565f,
 437:../main.c     **** 0.049068f,
 438:../main.c     **** 0.024541f,
 439:../main.c     **** 0.0f,
 440:../main.c     **** -0.024541f,
 441:../main.c     **** -0.049068f,
 442:../main.c     **** -0.073565f,
 443:../main.c     **** -0.098017f,
 444:../main.c     **** -0.122411f,
 445:../main.c     **** -0.14673f,
 446:../main.c     **** -0.170962f,
 447:../main.c     **** -0.19509f,
 448:../main.c     **** -0.219101f,
 449:../main.c     **** -0.24298f,
 450:../main.c     **** -0.266713f,
 451:../main.c     **** -0.290285f,
 452:../main.c     **** -0.313682f,
 453:../main.c     **** -0.33689f,
 454:../main.c     **** -0.359895f,
 455:../main.c     **** -0.382683f,
 456:../main.c     **** -0.405241f,
 457:../main.c     **** -0.427555f,
 458:../main.c     **** -0.449611f,
 459:../main.c     **** -0.471397f,
 460:../main.c     **** -0.492898f,
 461:../main.c     **** -0.514103f,
 462:../main.c     **** -0.534998f,
 463:../main.c     **** -0.55557f,
 464:../main.c     **** -0.575808f,
 465:../main.c     **** -0.595699f,
 466:../main.c     **** -0.615232f,
 467:../main.c     **** -0.634393f,
 468:../main.c     **** -0.653173f,
 469:../main.c     **** -0.671559f,
 470:../main.c     **** -0.689541f,
 471:../main.c     **** -0.707107f,
 472:../main.c     **** -0.724247f,
 473:../main.c     **** -0.740951f,
 474:../main.c     **** -0.757209f,
 475:../main.c     **** -0.77301f,
 476:../main.c     **** -0.788346f,
 477:../main.c     **** -0.803208f,
 478:../main.c     **** -0.817585f,
 479:../main.c     **** -0.83147f,
 480:../main.c     **** -0.844854f,
 481:../main.c     **** -0.857729f,
 482:../main.c     **** -0.870087f,
 483:../main.c     **** -0.881921f,
 484:../main.c     **** -0.893224f,
 485:../main.c     **** -0.903989f,
 486:../main.c     **** -0.91421f,
 487:../main.c     **** -0.92388f,
 488:../main.c     **** -0.932993f,
 489:../main.c     **** -0.941544f,
 490:../main.c     **** -0.949528f,
 491:../main.c     **** -0.95694f,
 492:../main.c     **** -0.963776f,
 493:../main.c     **** -0.970031f,
 494:../main.c     **** -0.975702f,
 495:../main.c     **** -0.980785f,
 496:../main.c     **** -0.985278f,
 497:../main.c     **** -0.989177f,
 498:../main.c     **** -0.99248f,
 499:../main.c     **** -0.995185f,
 500:../main.c     **** -0.99729f,
 501:../main.c     **** -0.998795f,
 502:../main.c     **** -0.999699f,
 503:../main.c     **** -1.0f,
 504:../main.c     **** -0.999699f,
 505:../main.c     **** -0.998795f,
 506:../main.c     **** -0.99729f,
 507:../main.c     **** -0.995185f,
 508:../main.c     **** -0.99248f,
 509:../main.c     **** -0.989177f,
 510:../main.c     **** -0.985278f,
 511:../main.c     **** -0.980785f,
 512:../main.c     **** -0.975702f,
 513:../main.c     **** -0.970031f,
 514:../main.c     **** -0.963776f,
 515:../main.c     **** -0.95694f,
 516:../main.c     **** -0.949528f,
 517:../main.c     **** -0.941544f,
 518:../main.c     **** -0.932993f,
 519:../main.c     **** -0.92388f,
 520:../main.c     **** -0.91421f,
 521:../main.c     **** -0.903989f,
 522:../main.c     **** -0.893224f,
 523:../main.c     **** -0.881921f,
 524:../main.c     **** -0.870087f,
 525:../main.c     **** -0.857729f,
 526:../main.c     **** -0.844854f,
 527:../main.c     **** -0.83147f,
 528:../main.c     **** -0.817585f,
 529:../main.c     **** -0.803208f,
 530:../main.c     **** -0.788346f,
 531:../main.c     **** -0.77301f,
 532:../main.c     **** -0.757209f,
 533:../main.c     **** -0.740951f,
 534:../main.c     **** -0.724247f,
 535:../main.c     **** -0.707107f,
 536:../main.c     **** -0.689541f,
 537:../main.c     **** -0.671559f,
 538:../main.c     **** -0.653173f,
 539:../main.c     **** -0.634393f,
 540:../main.c     **** -0.615232f,
 541:../main.c     **** -0.595699f,
 542:../main.c     **** -0.575808f,
 543:../main.c     **** -0.55557f,
 544:../main.c     **** -0.534998f,
 545:../main.c     **** -0.514103f,
 546:../main.c     **** -0.492898f,
 547:../main.c     **** -0.471397f,
 548:../main.c     **** -0.449611f,
 549:../main.c     **** -0.427555f,
 550:../main.c     **** -0.405241f,
 551:../main.c     **** -0.382683f,
 552:../main.c     **** -0.359895f,
 553:../main.c     **** -0.33689f,
 554:../main.c     **** -0.313682f,
 555:../main.c     **** -0.290285f,
 556:../main.c     **** -0.266713f,
 557:../main.c     **** -0.24298f,
 558:../main.c     **** -0.219101f,
 559:../main.c     **** -0.19509f,
 560:../main.c     **** -0.170962f,
 561:../main.c     **** -0.14673f,
 562:../main.c     **** -0.122411f,
 563:../main.c     **** -0.098017f,
 564:../main.c     **** -0.073565f,
 565:../main.c     **** -0.049068f,
 566:../main.c     **** -0.024541f,
 567:../main.c     **** 0.0f,
 568:../main.c     **** 0.024541f,
 569:../main.c     **** 0.049068f,
 570:../main.c     **** 0.073565f,
 571:../main.c     **** 0.098017f,
 572:../main.c     **** 0.122411f,
 573:../main.c     **** 0.14673f,
 574:../main.c     **** 0.170962f,
 575:../main.c     **** 0.19509f,
 576:../main.c     **** 0.219101f,
 577:../main.c     **** 0.24298f,
 578:../main.c     **** 0.266713f,
 579:../main.c     **** 0.290285f,
 580:../main.c     **** 0.313682f,
 581:../main.c     **** 0.33689f,
 582:../main.c     **** 0.359895f,
 583:../main.c     **** 0.382683f,
 584:../main.c     **** 0.405241f,
 585:../main.c     **** 0.427555f,
 586:../main.c     **** 0.449611f,
 587:../main.c     **** 0.471397f,
 588:../main.c     **** 0.492898f,
 589:../main.c     **** 0.514103f,
 590:../main.c     **** 0.534998f,
 591:../main.c     **** 0.55557f,
 592:../main.c     **** 0.575808f,
 593:../main.c     **** 0.595699f,
 594:../main.c     **** 0.615232f,
 595:../main.c     **** 0.634393f,
 596:../main.c     **** 0.653173f,
 597:../main.c     **** 0.671559f,
 598:../main.c     **** 0.689541f,
 599:../main.c     **** 0.707107f,
 600:../main.c     **** 0.724247f,
 601:../main.c     **** 0.740951f,
 602:../main.c     **** 0.757209f,
 603:../main.c     **** 0.77301f,
 604:../main.c     **** 0.788346f,
 605:../main.c     **** 0.803208f,
 606:../main.c     **** 0.817585f,
 607:../main.c     **** 0.83147f,
 608:../main.c     **** 0.844854f,
 609:../main.c     **** 0.857729f,
 610:../main.c     **** 0.870087f,
 611:../main.c     **** 0.881921f,
 612:../main.c     **** 0.893224f,
 613:../main.c     **** 0.903989f,
 614:../main.c     **** 0.91421f,
 615:../main.c     **** 0.92388f,
 616:../main.c     **** 0.932993f,
 617:../main.c     **** 0.941544f,
 618:../main.c     **** 0.949528f,
 619:../main.c     **** 0.95694f,
 620:../main.c     **** 0.963776f,
 621:../main.c     **** 0.970031f,
 622:../main.c     **** 0.975702f,
 623:../main.c     **** 0.980785f,
 624:../main.c     **** 0.985278f,
 625:../main.c     **** 0.989177f,
 626:../main.c     **** 0.99248f,
 627:../main.c     **** 0.995185f,
 628:../main.c     **** 0.99729f,
 629:../main.c     **** 0.998795f,
 630:../main.c     **** 0.999699f
 631:../main.c     **** };
 632:../main.c     **** 
 633:../main.c     **** int main(void)
 634:../main.c     **** {
 1135              	 .loc 1 634 0
 1136              	 .cfi_startproc
 1137 0000 90B5     	 push {r4,r7,lr}
 1138              	.LCFI0:
 1139              	 .cfi_def_cfa_offset 12
 1140              	 .cfi_offset 4,-12
 1141              	 .cfi_offset 7,-8
 1142              	 .cfi_offset 14,-4
 1143 0002 83B0     	 sub sp,sp,#12
 1144              	.LCFI1:
 1145              	 .cfi_def_cfa_offset 24
 1146 0004 00AF     	 add r7,sp,#0
 1147              	.LCFI2:
 1148              	 .cfi_def_cfa_register 7
 635:../main.c     ****   DAVE_STATUS_t status;
 636:../main.c     **** 
 637:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1149              	 .loc 1 637 0
 1150 0006 FC1D     	 add r4,r7,#7
 1151 0008 FFF7FEFF 	 bl DAVE_Init
 1152 000c 031C     	 mov r3,r0
 1153 000e 2370     	 strb r3,[r4]
 638:../main.c     **** 
 639:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 1154              	 .loc 1 639 0
 1155 0010 FB1D     	 add r3,r7,#7
 1156 0012 1B78     	 ldrb r3,[r3]
 1157 0014 002B     	 cmp r3,#0
 1158 0016 00D0     	 beq .L2
 1159              	.L3:
 640:../main.c     ****   {
 641:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 642:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 643:../main.c     **** 
 644:../main.c     ****     while(1U)
 645:../main.c     ****     {
 646:../main.c     **** 
 647:../main.c     ****     }
 1160              	 .loc 1 647 0 discriminator 1
 1161 0018 FEE7     	 b .L3
 1162              	.L2:
 648:../main.c     ****   }
 649:../main.c     **** 
 650:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 651:../main.c     ****   while(1U)
 652:../main.c     ****   {
 653:../main.c     **** 
 654:../main.c     ****   }
 1163              	 .loc 1 654 0 discriminator 2
 1164 001a FEE7     	 b .L2
 1165              	 .cfi_endproc
 1166              	.LFE463:
 1168              	 .global __aeabi_i2f
 1169              	 .global __aeabi_fmul
 1170              	 .section .text.IRQ15_Handler,"ax",%progbits
 1171              	 .align 2
 1172              	 .global IRQ15_Handler
 1173              	 .code 16
 1174              	 .thumb_func
 1176              	IRQ15_Handler:
 1177              	.LFB464:
 655:../main.c     **** }
 656:../main.c     **** 
 657:../main.c     **** 
 658:../main.c     **** 
 659:../main.c     **** /*
 660:../main.c     ****  Function: Doc ADC dong do ve tren dai 4095 bit qua bo loc moving average filter, tra ve gia tri th
 661:../main.c     ****  Input:current_phaseU, current_phaseV
 662:../main.c     ****  Output:current_u, current_v
 663:../main.c     ****  */
 664:../main.c     **** void Adc_Measurement_Handler(void){
 1178              	 .loc 1 664 0
 1179              	 .cfi_startproc
 1180 0000 80B5     	 push {r7,lr}
 1181              	.LCFI3:
 1182              	 .cfi_def_cfa_offset 8
 1183              	 .cfi_offset 7,-8
 1184              	 .cfi_offset 14,-4
 1185 0002 00AF     	 add r7,sp,#0
 1186              	.LCFI4:
 1187              	 .cfi_def_cfa_register 7
 665:../main.c     **** 	current_phaseU=ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Current_PhaseU);
 1188              	 .loc 1 665 0
 1189 0004 414B     	 ldr r3,.L9
 1190 0006 181C     	 mov r0,r3
 1191 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 1192 000c 031C     	 mov r3,r0
 1193 000e 1A1C     	 mov r2,r3
 1194 0010 3F4B     	 ldr r3,.L9+4
 1195 0012 1A80     	 strh r2,[r3]
 666:../main.c     **** 	current_phaseV=ADC_MEASUREMENT_GetResult(&ADC_MEASUREMENT_Current_PhaseV);
 1196              	 .loc 1 666 0
 1197 0014 3F4B     	 ldr r3,.L9+8
 1198 0016 181C     	 mov r0,r3
 1199 0018 FFF7FEFF 	 bl ADC_MEASUREMENT_GetResult
 1200 001c 031C     	 mov r3,r0
 1201 001e 1A1C     	 mov r2,r3
 1202 0020 3D4B     	 ldr r3,.L9+12
 1203 0022 1A80     	 strh r2,[r3]
 667:../main.c     **** 
 668:../main.c     **** 	cumulative_sum_phaseU  =  (uint32_t)((int32_t)((int32_t)cumulative_sum_phaseU + current_phaseU - m
 1204              	 .loc 1 668 0
 1205 0024 3A4B     	 ldr r3,.L9+4
 1206 0026 1B88     	 ldrh r3,[r3]
 1207 0028 1A1C     	 mov r2,r3
 1208 002a 3C4B     	 ldr r3,.L9+16
 1209 002c 1B68     	 ldr r3,[r3]
 1210 002e D218     	 add r2,r2,r3
 1211 0030 3B4B     	 ldr r3,.L9+20
 1212 0032 1B68     	 ldr r3,[r3]
 1213 0034 D31A     	 sub r3,r2,r3
 1214 0036 1A1C     	 mov r2,r3
 1215 0038 384B     	 ldr r3,.L9+16
 1216 003a 1A60     	 str r2,[r3]
 669:../main.c     **** 	moving_average_phaseU  = (int32_t)((uint32_t)(cumulative_sum_phaseU >> MOVING_AVG_WINDOW_SIZE));
 1217              	 .loc 1 669 0
 1218 003c 374B     	 ldr r3,.L9+16
 1219 003e 1B68     	 ldr r3,[r3]
 1220 0040 9B0C     	 lsr r3,r3,#18
 1221 0042 1A1C     	 mov r2,r3
 1222 0044 364B     	 ldr r3,.L9+20
 1223 0046 1A60     	 str r2,[r3]
 670:../main.c     **** 	if (moving_average_phaseU > CURRENT_OFFSET_MAX)
 1224              	 .loc 1 670 0
 1225 0048 354B     	 ldr r3,.L9+20
 1226 004a 1B68     	 ldr r3,[r3]
 1227 004c 354A     	 ldr r2,.L9+24
 1228 004e 9342     	 cmp r3,r2
 1229 0050 02DD     	 ble .L5
 671:../main.c     **** 	    {
 672:../main.c     **** 	        moving_average_phaseU = CURRENT_OFFSET_MAX;
 1230              	 .loc 1 672 0
 1231 0052 334B     	 ldr r3,.L9+20
 1232 0054 334A     	 ldr r2,.L9+24
 1233 0056 1A60     	 str r2,[r3]
 1234              	.L5:
 673:../main.c     **** 	    }
 674:../main.c     **** 	if (moving_average_phaseU < CURRENT_OFFSET_MIN)
 1235              	 .loc 1 674 0
 1236 0058 314B     	 ldr r3,.L9+20
 1237 005a 1B68     	 ldr r3,[r3]
 1238 005c 324A     	 ldr r2,.L9+28
 1239 005e 9342     	 cmp r3,r2
 1240 0060 03DC     	 bgt .L6
 675:../main.c     **** 	    {
 676:../main.c     **** 	        moving_average_phaseU = CURRENT_OFFSET_MIN;
 1241              	 .loc 1 676 0
 1242 0062 2F4B     	 ldr r3,.L9+20
 1243 0064 AD22     	 mov r2,#173
 1244 0066 D200     	 lsl r2,r2,#3
 1245 0068 1A60     	 str r2,[r3]
 1246              	.L6:
 677:../main.c     **** 	    }
 678:../main.c     **** 
 679:../main.c     **** 	cumulative_sum_phaseV  = (uint32_t)((int32_t)((int32_t)cumulative_sum_phaseV + current_phaseV - mo
 1247              	 .loc 1 679 0
 1248 006a 2B4B     	 ldr r3,.L9+12
 1249 006c 1B88     	 ldrh r3,[r3]
 1250 006e 1A1C     	 mov r2,r3
 1251 0070 2E4B     	 ldr r3,.L9+32
 1252 0072 1B68     	 ldr r3,[r3]
 1253 0074 D218     	 add r2,r2,r3
 1254 0076 2E4B     	 ldr r3,.L9+36
 1255 0078 1B68     	 ldr r3,[r3]
 1256 007a D31A     	 sub r3,r2,r3
 1257 007c 1A1C     	 mov r2,r3
 1258 007e 2B4B     	 ldr r3,.L9+32
 1259 0080 1A60     	 str r2,[r3]
 680:../main.c     **** 	moving_average_phaseV  = (int32_t)((uint32_t)(cumulative_sum_phaseV >> MOVING_AVG_WINDOW_SIZE));
 1260              	 .loc 1 680 0
 1261 0082 2A4B     	 ldr r3,.L9+32
 1262 0084 1B68     	 ldr r3,[r3]
 1263 0086 9B0C     	 lsr r3,r3,#18
 1264 0088 1A1C     	 mov r2,r3
 1265 008a 294B     	 ldr r3,.L9+36
 1266 008c 1A60     	 str r2,[r3]
 681:../main.c     **** 
 682:../main.c     **** 	if (moving_average_phaseV > CURRENT_OFFSET_MAX)
 1267              	 .loc 1 682 0
 1268 008e 284B     	 ldr r3,.L9+36
 1269 0090 1B68     	 ldr r3,[r3]
 1270 0092 244A     	 ldr r2,.L9+24
 1271 0094 9342     	 cmp r3,r2
 1272 0096 02DD     	 ble .L7
 683:../main.c     **** 	    {
 684:../main.c     **** 	        moving_average_phaseV = CURRENT_OFFSET_MAX;
 1273              	 .loc 1 684 0
 1274 0098 254B     	 ldr r3,.L9+36
 1275 009a 224A     	 ldr r2,.L9+24
 1276 009c 1A60     	 str r2,[r3]
 1277              	.L7:
 685:../main.c     **** 	    }
 686:../main.c     **** 	if (moving_average_phaseV < CURRENT_OFFSET_MIN)
 1278              	 .loc 1 686 0
 1279 009e 244B     	 ldr r3,.L9+36
 1280 00a0 1B68     	 ldr r3,[r3]
 1281 00a2 214A     	 ldr r2,.L9+28
 1282 00a4 9342     	 cmp r3,r2
 1283 00a6 03DC     	 bgt .L8
 687:../main.c     **** 	    {
 688:../main.c     **** 	        moving_average_phaseV = CURRENT_OFFSET_MIN;
 1284              	 .loc 1 688 0
 1285 00a8 214B     	 ldr r3,.L9+36
 1286 00aa AD22     	 mov r2,#173
 1287 00ac D200     	 lsl r2,r2,#3
 1288 00ae 1A60     	 str r2,[r3]
 1289              	.L8:
 689:../main.c     **** 	    }
 690:../main.c     ****     current_u = ((current_phaseU - (int16_t)moving_average_phaseU)*ADC_scale);
 1290              	 .loc 1 690 0
 1291 00b0 174B     	 ldr r3,.L9+4
 1292 00b2 1B88     	 ldrh r3,[r3]
 1293 00b4 1A1C     	 mov r2,r3
 1294 00b6 1A4B     	 ldr r3,.L9+20
 1295 00b8 1B68     	 ldr r3,[r3]
 1296 00ba 9BB2     	 uxth r3,r3
 1297 00bc 1BB2     	 sxth r3,r3
 1298 00be D31A     	 sub r3,r2,r3
 1299 00c0 181C     	 mov r0,r3
 1300 00c2 FFF7FEFF 	 bl __aeabi_i2f
 1301 00c6 021C     	 add r2,r0,#0
 1302 00c8 1A4B     	 ldr r3,.L9+40
 1303 00ca 1B68     	 ldr r3,[r3]
 1304 00cc 101C     	 add r0,r2,#0
 1305 00ce 191C     	 add r1,r3,#0
 1306 00d0 FFF7FEFF 	 bl __aeabi_fmul
 1307 00d4 031C     	 add r3,r0,#0
 1308 00d6 1A1C     	 add r2,r3,#0
 1309 00d8 174B     	 ldr r3,.L9+44
 1310 00da 1A60     	 str r2,[r3]
 691:../main.c     ****     current_v = ((current_phaseV - (int16_t)moving_average_phaseV)*ADC_scale);
 1311              	 .loc 1 691 0
 1312 00dc 0E4B     	 ldr r3,.L9+12
 1313 00de 1B88     	 ldrh r3,[r3]
 1314 00e0 1A1C     	 mov r2,r3
 1315 00e2 134B     	 ldr r3,.L9+36
 1316 00e4 1B68     	 ldr r3,[r3]
 1317 00e6 9BB2     	 uxth r3,r3
 1318 00e8 1BB2     	 sxth r3,r3
 1319 00ea D31A     	 sub r3,r2,r3
 1320 00ec 181C     	 mov r0,r3
 1321 00ee FFF7FEFF 	 bl __aeabi_i2f
 1322 00f2 021C     	 add r2,r0,#0
 1323 00f4 0F4B     	 ldr r3,.L9+40
 1324 00f6 1B68     	 ldr r3,[r3]
 1325 00f8 101C     	 add r0,r2,#0
 1326 00fa 191C     	 add r1,r3,#0
 1327 00fc FFF7FEFF 	 bl __aeabi_fmul
 1328 0100 031C     	 add r3,r0,#0
 1329 0102 1A1C     	 add r2,r3,#0
 1330 0104 0D4B     	 ldr r3,.L9+48
 1331 0106 1A60     	 str r2,[r3]
 692:../main.c     **** }
 1332              	 .loc 1 692 0
 1333 0108 BD46     	 mov sp,r7
 1334              	 
 1335 010a 80BD     	 pop {r7,pc}
 1336              	.L10:
 1337              	 .align 2
 1338              	.L9:
 1339 010c 00000000 	 .word ADC_MEASUREMENT_Current_PhaseU_handle
 1340 0110 00000000 	 .word current_phaseU
 1341 0114 00000000 	 .word ADC_MEASUREMENT_Current_PhaseV_handle
 1342 0118 00000000 	 .word current_phaseV
 1343 011c 00000000 	 .word cumulative_sum_phaseU
 1344 0120 00000000 	 .word moving_average_phaseU
 1345 0124 CA050000 	 .word 1482
 1346 0128 67050000 	 .word 1383
 1347 012c 00000000 	 .word cumulative_sum_phaseV
 1348 0130 00000000 	 .word moving_average_phaseV
 1349 0134 00000000 	 .word ADC_scale
 1350 0138 00000000 	 .word current_u
 1351 013c 00000000 	 .word current_v
 1352              	 .cfi_endproc
 1353              	.LFE464:
 1355              	 .section .text.UpdatePWMDutyCycle,"ax",%progbits
 1356              	 .align 2
 1357              	 .global UpdatePWMDutyCycle
 1358              	 .code 16
 1359              	 .thumb_func
 1361              	UpdatePWMDutyCycle:
 1362              	.LFB465:
 693:../main.c     **** /*
 694:../main.c     ****  Function:Cap nhat duty cycle o tung nhanh van
 695:../main.c     ****  Input:da, db, dc
 696:../main.c     ****  Output:Duty cycle nhanh van pha U,V,W
 697:../main.c     ****  */
 698:../main.c     **** void UpdatePWMDutyCycle(void){
 1363              	 .loc 1 698 0
 1364              	 .cfi_startproc
 1365 0000 80B5     	 push {r7,lr}
 1366              	.LCFI5:
 1367              	 .cfi_def_cfa_offset 8
 1368              	 .cfi_offset 7,-8
 1369              	 .cfi_offset 14,-4
 1370 0002 00AF     	 add r7,sp,#0
 1371              	.LCFI6:
 1372              	 .cfi_def_cfa_register 7
 699:../main.c     **** 	PWM_CCU8_Start(&PWM_CCU8_0);
 1373              	 .loc 1 699 0
 1374 0004 124B     	 ldr r3,.L12
 1375 0006 181C     	 mov r0,r3
 1376 0008 FFF7FEFF 	 bl PWM_CCU8_Start
 700:../main.c     **** 	PWM_CCU8_Start(&PWM_CCU8_1);
 1377              	 .loc 1 700 0
 1378 000c 114B     	 ldr r3,.L12+4
 1379 000e 181C     	 mov r0,r3
 1380 0010 FFF7FEFF 	 bl PWM_CCU8_Start
 701:../main.c     **** 	PWM_CCU8_Start(&PWM_CCU8_2);
 1381              	 .loc 1 701 0
 1382 0014 104B     	 ldr r3,.L12+8
 1383 0016 181C     	 mov r0,r3
 1384 0018 FFF7FEFF 	 bl PWM_CCU8_Start
 702:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_0, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, da);
 1385              	 .loc 1 702 0
 1386 001c 0F4B     	 ldr r3,.L12+12
 1387 001e 1B88     	 ldrh r3,[r3]
 1388 0020 1A1C     	 mov r2,r3
 1389 0022 0B4B     	 ldr r3,.L12
 1390 0024 181C     	 mov r0,r3
 1391 0026 0021     	 mov r1,#0
 1392 0028 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 703:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_1, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, db);
 1393              	 .loc 1 703 0
 1394 002c 0C4B     	 ldr r3,.L12+16
 1395 002e 1B88     	 ldrh r3,[r3]
 1396 0030 1A1C     	 mov r2,r3
 1397 0032 084B     	 ldr r3,.L12+4
 1398 0034 181C     	 mov r0,r3
 1399 0036 0021     	 mov r1,#0
 1400 0038 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 704:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_2, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, dc);
 1401              	 .loc 1 704 0
 1402 003c 094B     	 ldr r3,.L12+20
 1403 003e 1B88     	 ldrh r3,[r3]
 1404 0040 1A1C     	 mov r2,r3
 1405 0042 054B     	 ldr r3,.L12+8
 1406 0044 181C     	 mov r0,r3
 1407 0046 0021     	 mov r1,#0
 1408 0048 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 705:../main.c     **** }
 1409              	 .loc 1 705 0
 1410 004c BD46     	 mov sp,r7
 1411              	 
 1412 004e 80BD     	 pop {r7,pc}
 1413              	.L13:
 1414              	 .align 2
 1415              	.L12:
 1416 0050 00000000 	 .word PWM_CCU8_0
 1417 0054 00000000 	 .word PWM_CCU8_1
 1418 0058 00000000 	 .word PWM_CCU8_2
 1419 005c 00000000 	 .word da
 1420 0060 00000000 	 .word db
 1421 0064 00000000 	 .word dc
 1422              	 .cfi_endproc
 1423              	.LFE465:
 1425              	 .global __aeabi_fadd
 1426              	 .section .text.AlphaBetaTrans_Current,"ax",%progbits
 1427              	 .align 2
 1428              	 .global AlphaBetaTrans_Current
 1429              	 .code 16
 1430              	 .thumb_func
 1432              	AlphaBetaTrans_Current:
 1433              	.LFB466:
 706:../main.c     **** /*
 707:../main.c     ****  Function:Chuyen he toa dong dien do abc sang alpha-beta
 708:../main.c     ****  Input:current_u, current_v
 709:../main.c     ****  Output:current_alpha, current_beta
 710:../main.c     ****  */
 711:../main.c     **** void AlphaBetaTrans_Current(void){
 1434              	 .loc 1 711 0
 1435              	 .cfi_startproc
 1436 0000 80B5     	 push {r7,lr}
 1437              	.LCFI7:
 1438              	 .cfi_def_cfa_offset 8
 1439              	 .cfi_offset 7,-8
 1440              	 .cfi_offset 14,-4
 1441 0002 00AF     	 add r7,sp,#0
 1442              	.LCFI8:
 1443              	 .cfi_def_cfa_register 7
 712:../main.c     **** 	current_alpha=current_u;
 1444              	 .loc 1 712 0
 1445 0004 0E4B     	 ldr r3,.L15
 1446 0006 1A68     	 ldr r2,[r3]
 1447 0008 0E4B     	 ldr r3,.L15+4
 1448 000a 1A60     	 str r2,[r3]
 713:../main.c     **** 	current_beta=one_on_sqrt_3*(current_u+2*current_v);
 1449              	 .loc 1 713 0
 1450 000c 0E4B     	 ldr r3,.L15+8
 1451 000e 1B68     	 ldr r3,[r3]
 1452 0010 181C     	 add r0,r3,#0
 1453 0012 191C     	 add r1,r3,#0
 1454 0014 FFF7FEFF 	 bl __aeabi_fadd
 1455 0018 031C     	 add r3,r0,#0
 1456 001a 1A1C     	 add r2,r3,#0
 1457 001c 084B     	 ldr r3,.L15
 1458 001e 1B68     	 ldr r3,[r3]
 1459 0020 101C     	 add r0,r2,#0
 1460 0022 191C     	 add r1,r3,#0
 1461 0024 FFF7FEFF 	 bl __aeabi_fadd
 1462 0028 031C     	 add r3,r0,#0
 1463 002a 181C     	 add r0,r3,#0
 1464 002c 0749     	 ldr r1,.L15+12
 1465 002e FFF7FEFF 	 bl __aeabi_fmul
 1466 0032 031C     	 add r3,r0,#0
 1467 0034 1A1C     	 add r2,r3,#0
 1468 0036 064B     	 ldr r3,.L15+16
 1469 0038 1A60     	 str r2,[r3]
 714:../main.c     **** }
 1470              	 .loc 1 714 0
 1471 003a BD46     	 mov sp,r7
 1472              	 
 1473 003c 80BD     	 pop {r7,pc}
 1474              	.L16:
 1475 003e C046     	 .align 2
 1476              	.L15:
 1477 0040 00000000 	 .word current_u
 1478 0044 00000000 	 .word current_alpha
 1479 0048 00000000 	 .word current_v
 1480 004c 36CD133F 	 .word 1058262326
 1481 0050 00000000 	 .word current_beta
 1482              	 .cfi_endproc
 1483              	.LFE466:
 1485              	 .section .text.DQTrans_Current,"ax",%progbits
 1486              	 .align 2
 1487              	 .global DQTrans_Current
 1488              	 .code 16
 1489              	 .thumb_func
 1491              	DQTrans_Current:
 1492              	.LFB467:
 715:../main.c     **** /*
 716:../main.c     ****  Function:Chuyen he toa do dong dien alpha-beta sang he toa do dq
 717:../main.c     ****  Input:current_alpha, current_beta
 718:../main.c     ****  Output:current_sd, current_sq
 719:../main.c     ****  */
 720:../main.c     **** void DQTrans_Current(void){
 1493              	 .loc 1 720 0
 1494              	 .cfi_startproc
 1495 0000 98B5     	 push {r3,r4,r7,lr}
 1496              	.LCFI9:
 1497              	 .cfi_def_cfa_offset 16
 1498              	 .cfi_offset 3,-16
 1499              	 .cfi_offset 4,-12
 1500              	 .cfi_offset 7,-8
 1501              	 .cfi_offset 14,-4
 1502 0002 00AF     	 add r7,sp,#0
 1503              	.LCFI10:
 1504              	 .cfi_def_cfa_register 7
 721:../main.c     **** 	current_sd=current_alpha*CosineTheta+current_beta*SineTheta;
 1505              	 .loc 1 721 0
 1506 0004 1D4B     	 ldr r3,.L18
 1507 0006 1A68     	 ldr r2,[r3]
 1508 0008 1D4B     	 ldr r3,.L18+4
 1509 000a 1B68     	 ldr r3,[r3]
 1510 000c 101C     	 add r0,r2,#0
 1511 000e 191C     	 add r1,r3,#0
 1512 0010 FFF7FEFF 	 bl __aeabi_fmul
 1513 0014 031C     	 add r3,r0,#0
 1514 0016 1C1C     	 add r4,r3,#0
 1515 0018 1A4B     	 ldr r3,.L18+8
 1516 001a 1A68     	 ldr r2,[r3]
 1517 001c 1A4B     	 ldr r3,.L18+12
 1518 001e 1B68     	 ldr r3,[r3]
 1519 0020 101C     	 add r0,r2,#0
 1520 0022 191C     	 add r1,r3,#0
 1521 0024 FFF7FEFF 	 bl __aeabi_fmul
 1522 0028 031C     	 add r3,r0,#0
 1523 002a 201C     	 add r0,r4,#0
 1524 002c 191C     	 add r1,r3,#0
 1525 002e FFF7FEFF 	 bl __aeabi_fadd
 1526 0032 031C     	 add r3,r0,#0
 1527 0034 1A1C     	 add r2,r3,#0
 1528 0036 154B     	 ldr r3,.L18+16
 1529 0038 1A60     	 str r2,[r3]
 722:../main.c     ****     current_sq=(-1)*current_alpha*SineTheta+current_beta*CosineTheta;
 1530              	 .loc 1 722 0
 1531 003a 104B     	 ldr r3,.L18
 1532 003c 1B68     	 ldr r3,[r3]
 1533 003e 8022     	 mov r2,#128
 1534 0040 1206     	 lsl r2,r2,#24
 1535 0042 5A40     	 eor r2,r3
 1536 0044 104B     	 ldr r3,.L18+12
 1537 0046 1B68     	 ldr r3,[r3]
 1538 0048 101C     	 add r0,r2,#0
 1539 004a 191C     	 add r1,r3,#0
 1540 004c FFF7FEFF 	 bl __aeabi_fmul
 1541 0050 031C     	 add r3,r0,#0
 1542 0052 1C1C     	 add r4,r3,#0
 1543 0054 0B4B     	 ldr r3,.L18+8
 1544 0056 1A68     	 ldr r2,[r3]
 1545 0058 094B     	 ldr r3,.L18+4
 1546 005a 1B68     	 ldr r3,[r3]
 1547 005c 101C     	 add r0,r2,#0
 1548 005e 191C     	 add r1,r3,#0
 1549 0060 FFF7FEFF 	 bl __aeabi_fmul
 1550 0064 031C     	 add r3,r0,#0
 1551 0066 201C     	 add r0,r4,#0
 1552 0068 191C     	 add r1,r3,#0
 1553 006a FFF7FEFF 	 bl __aeabi_fadd
 1554 006e 031C     	 add r3,r0,#0
 1555 0070 1A1C     	 add r2,r3,#0
 1556 0072 074B     	 ldr r3,.L18+20
 1557 0074 1A60     	 str r2,[r3]
 723:../main.c     **** }
 1558              	 .loc 1 723 0
 1559 0076 BD46     	 mov sp,r7
 1560              	 
 1561 0078 98BD     	 pop {r3,r4,r7,pc}
 1562              	.L19:
 1563 007a C046     	 .align 2
 1564              	.L18:
 1565 007c 00000000 	 .word current_alpha
 1566 0080 00000000 	 .word CosineTheta
 1567 0084 00000000 	 .word current_beta
 1568 0088 00000000 	 .word SineTheta
 1569 008c 00000000 	 .word current_sd
 1570 0090 00000000 	 .word current_sq
 1571              	 .cfi_endproc
 1572              	.LFE467:
 1574              	 .global __aeabi_fsub
 1575              	 .section .text.IsqRefCal,"ax",%progbits
 1576              	 .align 2
 1577              	 .global IsqRefCal
 1578              	 .code 16
 1579              	 .thumb_func
 1581              	IsqRefCal:
 1582              	.LFB468:
 724:../main.c     **** /*
 725:../main.c     ****  Function:Tinh toan gia tri q axis stator current reference su dung bdk PI
 726:../main.c     ****  Input:SpeedRef(toc do dat), SpeedMea(toc do do ve),Ts(chu ky trich mau), Kp_IsqRef, Ki_IsqRef
 727:../main.c     ****  Output:IsqRef
 728:../main.c     ****  */
 729:../main.c     **** void IsqRefCal(void){
 1583              	 .loc 1 729 0
 1584              	 .cfi_startproc
 1585 0000 98B5     	 push {r3,r4,r7,lr}
 1586              	.LCFI11:
 1587              	 .cfi_def_cfa_offset 16
 1588              	 .cfi_offset 3,-16
 1589              	 .cfi_offset 4,-12
 1590              	 .cfi_offset 7,-8
 1591              	 .cfi_offset 14,-4
 1592 0002 00AF     	 add r7,sp,#0
 1593              	.LCFI12:
 1594              	 .cfi_def_cfa_register 7
 730:../main.c     **** 	SpeedError=SpeedRef-SpeedMea;
 1595              	 .loc 1 730 0
 1596 0004 234B     	 ldr r3,.L21
 1597 0006 1A68     	 ldr r2,[r3]
 1598 0008 234B     	 ldr r3,.L21+4
 1599 000a 1B68     	 ldr r3,[r3]
 1600 000c 101C     	 add r0,r2,#0
 1601 000e 191C     	 add r1,r3,#0
 1602 0010 FFF7FEFF 	 bl __aeabi_fsub
 1603 0014 031C     	 add r3,r0,#0
 1604 0016 1A1C     	 add r2,r3,#0
 1605 0018 204B     	 ldr r3,.L21+8
 1606 001a 1A60     	 str r2,[r3]
 731:../main.c     **** 	sum_IsqRef=sum_IsqRef+SpeedError*Ts;
 1607              	 .loc 1 731 0
 1608 001c 1F4B     	 ldr r3,.L21+8
 1609 001e 1B68     	 ldr r3,[r3]
 1610 0020 181C     	 add r0,r3,#0
 1611 0022 0021     	 mov r1,#0
 1612 0024 FFF7FEFF 	 bl __aeabi_fmul
 1613 0028 031C     	 add r3,r0,#0
 1614 002a 1A1C     	 add r2,r3,#0
 1615 002c 1C4B     	 ldr r3,.L21+12
 1616 002e 1B68     	 ldr r3,[r3]
 1617 0030 101C     	 add r0,r2,#0
 1618 0032 191C     	 add r1,r3,#0
 1619 0034 FFF7FEFF 	 bl __aeabi_fadd
 1620 0038 031C     	 add r3,r0,#0
 1621 003a 1A1C     	 add r2,r3,#0
 1622 003c 184B     	 ldr r3,.L21+12
 1623 003e 1A60     	 str r2,[r3]
 732:../main.c     **** 	IsqRef1=Kp_IsqRef*SpeedError+Ki_IsqRef*sum_IsqRef;
 1624              	 .loc 1 732 0
 1625 0040 184B     	 ldr r3,.L21+16
 1626 0042 1A68     	 ldr r2,[r3]
 1627 0044 154B     	 ldr r3,.L21+8
 1628 0046 1B68     	 ldr r3,[r3]
 1629 0048 101C     	 add r0,r2,#0
 1630 004a 191C     	 add r1,r3,#0
 1631 004c FFF7FEFF 	 bl __aeabi_fmul
 1632 0050 031C     	 add r3,r0,#0
 1633 0052 1C1C     	 add r4,r3,#0
 1634 0054 144B     	 ldr r3,.L21+20
 1635 0056 1A68     	 ldr r2,[r3]
 1636 0058 114B     	 ldr r3,.L21+12
 1637 005a 1B68     	 ldr r3,[r3]
 1638 005c 101C     	 add r0,r2,#0
 1639 005e 191C     	 add r1,r3,#0
 1640 0060 FFF7FEFF 	 bl __aeabi_fmul
 1641 0064 031C     	 add r3,r0,#0
 1642 0066 201C     	 add r0,r4,#0
 1643 0068 191C     	 add r1,r3,#0
 1644 006a FFF7FEFF 	 bl __aeabi_fadd
 1645 006e 031C     	 add r3,r0,#0
 1646 0070 1A1C     	 add r2,r3,#0
 1647 0072 0E4B     	 ldr r3,.L21+24
 1648 0074 1A60     	 str r2,[r3]
 733:../main.c     ****     IsqRef=IsqRef+IsqRef1;
 1649              	 .loc 1 733 0
 1650 0076 0E4B     	 ldr r3,.L21+28
 1651 0078 1A68     	 ldr r2,[r3]
 1652 007a 0C4B     	 ldr r3,.L21+24
 1653 007c 1B68     	 ldr r3,[r3]
 1654 007e 101C     	 add r0,r2,#0
 1655 0080 191C     	 add r1,r3,#0
 1656 0082 FFF7FEFF 	 bl __aeabi_fadd
 1657 0086 031C     	 add r3,r0,#0
 1658 0088 1A1C     	 add r2,r3,#0
 1659 008a 094B     	 ldr r3,.L21+28
 1660 008c 1A60     	 str r2,[r3]
 734:../main.c     **** }
 1661              	 .loc 1 734 0
 1662 008e BD46     	 mov sp,r7
 1663              	 
 1664 0090 98BD     	 pop {r3,r4,r7,pc}
 1665              	.L22:
 1666 0092 C046     	 .align 2
 1667              	.L21:
 1668 0094 00000000 	 .word SpeedRef
 1669 0098 00000000 	 .word SpeedMea
 1670 009c 00000000 	 .word SpeedError
 1671 00a0 00000000 	 .word sum_IsqRef
 1672 00a4 00000000 	 .word Kp_IsqRef
 1673 00a8 00000000 	 .word Ki_IsqRef
 1674 00ac 00000000 	 .word IsqRef1
 1675 00b0 00000000 	 .word IsqRef
 1676              	 .cfi_endproc
 1677              	.LFE468:
 1679              	 .section .text.UsdCal,"ax",%progbits
 1680              	 .align 2
 1681              	 .global UsdCal
 1682              	 .code 16
 1683              	 .thumb_func
 1685              	UsdCal:
 1686              	.LFB469:
 735:../main.c     **** /*
 736:../main.c     ****  Function:Tinh toan gia tri d axis stator voltage su dung bdk PI
 737:../main.c     ****  Input:current_sd, Ts, Kp_Usd, Ki_Usd
 738:../main.c     ****  Output:Usd
 739:../main.c     ****  */
 740:../main.c     **** void UsdCal(void){
 1687              	 .loc 1 740 0
 1688              	 .cfi_startproc
 1689 0000 98B5     	 push {r3,r4,r7,lr}
 1690              	.LCFI13:
 1691              	 .cfi_def_cfa_offset 16
 1692              	 .cfi_offset 3,-16
 1693              	 .cfi_offset 4,-12
 1694              	 .cfi_offset 7,-8
 1695              	 .cfi_offset 14,-4
 1696 0002 00AF     	 add r7,sp,#0
 1697              	.LCFI14:
 1698              	 .cfi_def_cfa_register 7
 741:../main.c     ****     IsdError=0-current_sd;
 1699              	 .loc 1 741 0
 1700 0004 224B     	 ldr r3,.L24
 1701 0006 1B68     	 ldr r3,[r3]
 1702 0008 0020     	 mov r0,#0
 1703 000a 191C     	 add r1,r3,#0
 1704 000c FFF7FEFF 	 bl __aeabi_fsub
 1705 0010 031C     	 add r3,r0,#0
 1706 0012 1A1C     	 add r2,r3,#0
 1707 0014 1F4B     	 ldr r3,.L24+4
 1708 0016 1A60     	 str r2,[r3]
 742:../main.c     ****     sum_Usd=sum_Usd+IsdError*Ts;
 1709              	 .loc 1 742 0
 1710 0018 1E4B     	 ldr r3,.L24+4
 1711 001a 1B68     	 ldr r3,[r3]
 1712 001c 181C     	 add r0,r3,#0
 1713 001e 0021     	 mov r1,#0
 1714 0020 FFF7FEFF 	 bl __aeabi_fmul
 1715 0024 031C     	 add r3,r0,#0
 1716 0026 1A1C     	 add r2,r3,#0
 1717 0028 1B4B     	 ldr r3,.L24+8
 1718 002a 1B68     	 ldr r3,[r3]
 1719 002c 101C     	 add r0,r2,#0
 1720 002e 191C     	 add r1,r3,#0
 1721 0030 FFF7FEFF 	 bl __aeabi_fadd
 1722 0034 031C     	 add r3,r0,#0
 1723 0036 1A1C     	 add r2,r3,#0
 1724 0038 174B     	 ldr r3,.L24+8
 1725 003a 1A60     	 str r2,[r3]
 743:../main.c     ****     Usd1=Kp_Usd*IsdError+Ki_Usd*sum_Usd;
 1726              	 .loc 1 743 0
 1727 003c 174B     	 ldr r3,.L24+12
 1728 003e 1A68     	 ldr r2,[r3]
 1729 0040 144B     	 ldr r3,.L24+4
 1730 0042 1B68     	 ldr r3,[r3]
 1731 0044 101C     	 add r0,r2,#0
 1732 0046 191C     	 add r1,r3,#0
 1733 0048 FFF7FEFF 	 bl __aeabi_fmul
 1734 004c 031C     	 add r3,r0,#0
 1735 004e 1C1C     	 add r4,r3,#0
 1736 0050 134B     	 ldr r3,.L24+16
 1737 0052 1A68     	 ldr r2,[r3]
 1738 0054 104B     	 ldr r3,.L24+8
 1739 0056 1B68     	 ldr r3,[r3]
 1740 0058 101C     	 add r0,r2,#0
 1741 005a 191C     	 add r1,r3,#0
 1742 005c FFF7FEFF 	 bl __aeabi_fmul
 1743 0060 031C     	 add r3,r0,#0
 1744 0062 201C     	 add r0,r4,#0
 1745 0064 191C     	 add r1,r3,#0
 1746 0066 FFF7FEFF 	 bl __aeabi_fadd
 1747 006a 031C     	 add r3,r0,#0
 1748 006c 1A1C     	 add r2,r3,#0
 1749 006e 0D4B     	 ldr r3,.L24+20
 1750 0070 1A60     	 str r2,[r3]
 744:../main.c     ****     Usd=Usd+Usd1;
 1751              	 .loc 1 744 0
 1752 0072 0D4B     	 ldr r3,.L24+24
 1753 0074 1A68     	 ldr r2,[r3]
 1754 0076 0B4B     	 ldr r3,.L24+20
 1755 0078 1B68     	 ldr r3,[r3]
 1756 007a 101C     	 add r0,r2,#0
 1757 007c 191C     	 add r1,r3,#0
 1758 007e FFF7FEFF 	 bl __aeabi_fadd
 1759 0082 031C     	 add r3,r0,#0
 1760 0084 1A1C     	 add r2,r3,#0
 1761 0086 084B     	 ldr r3,.L24+24
 1762 0088 1A60     	 str r2,[r3]
 745:../main.c     **** }
 1763              	 .loc 1 745 0
 1764 008a BD46     	 mov sp,r7
 1765              	 
 1766 008c 98BD     	 pop {r3,r4,r7,pc}
 1767              	.L25:
 1768 008e C046     	 .align 2
 1769              	.L24:
 1770 0090 00000000 	 .word current_sd
 1771 0094 00000000 	 .word IsdError
 1772 0098 00000000 	 .word sum_Usd
 1773 009c 00000000 	 .word Kp_Usd
 1774 00a0 00000000 	 .word Ki_Usd
 1775 00a4 00000000 	 .word Usd1
 1776 00a8 00000000 	 .word Usd
 1777              	 .cfi_endproc
 1778              	.LFE469:
 1780              	 .section .text.UsqCal,"ax",%progbits
 1781              	 .align 2
 1782              	 .global UsqCal
 1783              	 .code 16
 1784              	 .thumb_func
 1786              	UsqCal:
 1787              	.LFB470:
 746:../main.c     **** /*
 747:../main.c     ****  Function:Tinh toan gia tri q axis stator voltage su dung bdk PI
 748:../main.c     ****  Input:IsqRef, current_sq, Ts, Kp_Usq, Ki_Usq
 749:../main.c     ****  Output:Usq
 750:../main.c     ****  */
 751:../main.c     **** void UsqCal(void){
 1788              	 .loc 1 751 0
 1789              	 .cfi_startproc
 1790 0000 98B5     	 push {r3,r4,r7,lr}
 1791              	.LCFI15:
 1792              	 .cfi_def_cfa_offset 16
 1793              	 .cfi_offset 3,-16
 1794              	 .cfi_offset 4,-12
 1795              	 .cfi_offset 7,-8
 1796              	 .cfi_offset 14,-4
 1797 0002 00AF     	 add r7,sp,#0
 1798              	.LCFI16:
 1799              	 .cfi_def_cfa_register 7
 752:../main.c     ****     IsqError=IsqRef-current_sq;
 1800              	 .loc 1 752 0
 1801 0004 234B     	 ldr r3,.L27
 1802 0006 1A68     	 ldr r2,[r3]
 1803 0008 234B     	 ldr r3,.L27+4
 1804 000a 1B68     	 ldr r3,[r3]
 1805 000c 101C     	 add r0,r2,#0
 1806 000e 191C     	 add r1,r3,#0
 1807 0010 FFF7FEFF 	 bl __aeabi_fsub
 1808 0014 031C     	 add r3,r0,#0
 1809 0016 1A1C     	 add r2,r3,#0
 1810 0018 204B     	 ldr r3,.L27+8
 1811 001a 1A60     	 str r2,[r3]
 753:../main.c     ****     sum_Usq=sum_Usq+IsqError*Ts;
 1812              	 .loc 1 753 0
 1813 001c 1F4B     	 ldr r3,.L27+8
 1814 001e 1B68     	 ldr r3,[r3]
 1815 0020 181C     	 add r0,r3,#0
 1816 0022 0021     	 mov r1,#0
 1817 0024 FFF7FEFF 	 bl __aeabi_fmul
 1818 0028 031C     	 add r3,r0,#0
 1819 002a 1A1C     	 add r2,r3,#0
 1820 002c 1C4B     	 ldr r3,.L27+12
 1821 002e 1B68     	 ldr r3,[r3]
 1822 0030 101C     	 add r0,r2,#0
 1823 0032 191C     	 add r1,r3,#0
 1824 0034 FFF7FEFF 	 bl __aeabi_fadd
 1825 0038 031C     	 add r3,r0,#0
 1826 003a 1A1C     	 add r2,r3,#0
 1827 003c 184B     	 ldr r3,.L27+12
 1828 003e 1A60     	 str r2,[r3]
 754:../main.c     ****     Usq1=Kp_Usq*IsqError+Ki_Usq*sum_Usq;
 1829              	 .loc 1 754 0
 1830 0040 184B     	 ldr r3,.L27+16
 1831 0042 1A68     	 ldr r2,[r3]
 1832 0044 154B     	 ldr r3,.L27+8
 1833 0046 1B68     	 ldr r3,[r3]
 1834 0048 101C     	 add r0,r2,#0
 1835 004a 191C     	 add r1,r3,#0
 1836 004c FFF7FEFF 	 bl __aeabi_fmul
 1837 0050 031C     	 add r3,r0,#0
 1838 0052 1C1C     	 add r4,r3,#0
 1839 0054 144B     	 ldr r3,.L27+20
 1840 0056 1A68     	 ldr r2,[r3]
 1841 0058 114B     	 ldr r3,.L27+12
 1842 005a 1B68     	 ldr r3,[r3]
 1843 005c 101C     	 add r0,r2,#0
 1844 005e 191C     	 add r1,r3,#0
 1845 0060 FFF7FEFF 	 bl __aeabi_fmul
 1846 0064 031C     	 add r3,r0,#0
 1847 0066 201C     	 add r0,r4,#0
 1848 0068 191C     	 add r1,r3,#0
 1849 006a FFF7FEFF 	 bl __aeabi_fadd
 1850 006e 031C     	 add r3,r0,#0
 1851 0070 1A1C     	 add r2,r3,#0
 1852 0072 0E4B     	 ldr r3,.L27+24
 1853 0074 1A60     	 str r2,[r3]
 755:../main.c     ****     Usq=Usq+Usq1;
 1854              	 .loc 1 755 0
 1855 0076 0E4B     	 ldr r3,.L27+28
 1856 0078 1A68     	 ldr r2,[r3]
 1857 007a 0C4B     	 ldr r3,.L27+24
 1858 007c 1B68     	 ldr r3,[r3]
 1859 007e 101C     	 add r0,r2,#0
 1860 0080 191C     	 add r1,r3,#0
 1861 0082 FFF7FEFF 	 bl __aeabi_fadd
 1862 0086 031C     	 add r3,r0,#0
 1863 0088 1A1C     	 add r2,r3,#0
 1864 008a 094B     	 ldr r3,.L27+28
 1865 008c 1A60     	 str r2,[r3]
 756:../main.c     **** }
 1866              	 .loc 1 756 0
 1867 008e BD46     	 mov sp,r7
 1868              	 
 1869 0090 98BD     	 pop {r3,r4,r7,pc}
 1870              	.L28:
 1871 0092 C046     	 .align 2
 1872              	.L27:
 1873 0094 00000000 	 .word IsqRef
 1874 0098 00000000 	 .word current_sq
 1875 009c 00000000 	 .word IsqError
 1876 00a0 00000000 	 .word sum_Usq
 1877 00a4 00000000 	 .word Kp_Usq
 1878 00a8 00000000 	 .word Ki_Usq
 1879 00ac 00000000 	 .word Usq1
 1880 00b0 00000000 	 .word Usq
 1881              	 .cfi_endproc
 1882              	.LFE470:
 1884              	 .section .text.UsdqtoUsalphabeta,"ax",%progbits
 1885              	 .align 2
 1886              	 .global UsdqtoUsalphabeta
 1887              	 .code 16
 1888              	 .thumb_func
 1890              	UsdqtoUsalphabeta:
 1891              	.LFB471:
 757:../main.c     **** /*
 758:../main.c     ****  Function:Chuyen he toa do dien ap dq sang alpha-beta
 759:../main.c     ****  Input:Usd, Usq
 760:../main.c     ****  Output:Usalpha, Usbeta
 761:../main.c     ****  */
 762:../main.c     **** void UsdqtoUsalphabeta(void){
 1892              	 .loc 1 762 0
 1893              	 .cfi_startproc
 1894 0000 98B5     	 push {r3,r4,r7,lr}
 1895              	.LCFI17:
 1896              	 .cfi_def_cfa_offset 16
 1897              	 .cfi_offset 3,-16
 1898              	 .cfi_offset 4,-12
 1899              	 .cfi_offset 7,-8
 1900              	 .cfi_offset 14,-4
 1901 0002 00AF     	 add r7,sp,#0
 1902              	.LCFI18:
 1903              	 .cfi_def_cfa_register 7
 763:../main.c     **** 	Usalpha=Usd*CosineTheta-Usq*SineTheta;
 1904              	 .loc 1 763 0
 1905 0004 1B4B     	 ldr r3,.L30
 1906 0006 1A68     	 ldr r2,[r3]
 1907 0008 1B4B     	 ldr r3,.L30+4
 1908 000a 1B68     	 ldr r3,[r3]
 1909 000c 101C     	 add r0,r2,#0
 1910 000e 191C     	 add r1,r3,#0
 1911 0010 FFF7FEFF 	 bl __aeabi_fmul
 1912 0014 031C     	 add r3,r0,#0
 1913 0016 1C1C     	 add r4,r3,#0
 1914 0018 184B     	 ldr r3,.L30+8
 1915 001a 1A68     	 ldr r2,[r3]
 1916 001c 184B     	 ldr r3,.L30+12
 1917 001e 1B68     	 ldr r3,[r3]
 1918 0020 101C     	 add r0,r2,#0
 1919 0022 191C     	 add r1,r3,#0
 1920 0024 FFF7FEFF 	 bl __aeabi_fmul
 1921 0028 031C     	 add r3,r0,#0
 1922 002a 201C     	 add r0,r4,#0
 1923 002c 191C     	 add r1,r3,#0
 1924 002e FFF7FEFF 	 bl __aeabi_fsub
 1925 0032 031C     	 add r3,r0,#0
 1926 0034 1A1C     	 add r2,r3,#0
 1927 0036 134B     	 ldr r3,.L30+16
 1928 0038 1A60     	 str r2,[r3]
 764:../main.c     **** 	Usbeta=Usq*CosineTheta+Usd*SineTheta;
 1929              	 .loc 1 764 0
 1930 003a 104B     	 ldr r3,.L30+8
 1931 003c 1A68     	 ldr r2,[r3]
 1932 003e 0E4B     	 ldr r3,.L30+4
 1933 0040 1B68     	 ldr r3,[r3]
 1934 0042 101C     	 add r0,r2,#0
 1935 0044 191C     	 add r1,r3,#0
 1936 0046 FFF7FEFF 	 bl __aeabi_fmul
 1937 004a 031C     	 add r3,r0,#0
 1938 004c 1C1C     	 add r4,r3,#0
 1939 004e 094B     	 ldr r3,.L30
 1940 0050 1A68     	 ldr r2,[r3]
 1941 0052 0B4B     	 ldr r3,.L30+12
 1942 0054 1B68     	 ldr r3,[r3]
 1943 0056 101C     	 add r0,r2,#0
 1944 0058 191C     	 add r1,r3,#0
 1945 005a FFF7FEFF 	 bl __aeabi_fmul
 1946 005e 031C     	 add r3,r0,#0
 1947 0060 201C     	 add r0,r4,#0
 1948 0062 191C     	 add r1,r3,#0
 1949 0064 FFF7FEFF 	 bl __aeabi_fadd
 1950 0068 031C     	 add r3,r0,#0
 1951 006a 1A1C     	 add r2,r3,#0
 1952 006c 064B     	 ldr r3,.L30+20
 1953 006e 1A60     	 str r2,[r3]
 765:../main.c     **** }
 1954              	 .loc 1 765 0
 1955 0070 BD46     	 mov sp,r7
 1956              	 
 1957 0072 98BD     	 pop {r3,r4,r7,pc}
 1958              	.L31:
 1959              	 .align 2
 1960              	.L30:
 1961 0074 00000000 	 .word Usd
 1962 0078 00000000 	 .word CosineTheta
 1963 007c 00000000 	 .word Usq
 1964 0080 00000000 	 .word SineTheta
 1965 0084 00000000 	 .word Usalpha
 1966 0088 00000000 	 .word Usbeta
 1967              	 .cfi_endproc
 1968              	.LFE471:
 1970              	 .global __aeabi_fdiv
 1971              	 .section .text.UsalphabetatoUsabc,"ax",%progbits
 1972              	 .align 2
 1973              	 .global UsalphabetatoUsabc
 1974              	 .code 16
 1975              	 .thumb_func
 1977              	UsalphabetatoUsabc:
 1978              	.LFB472:
 766:../main.c     **** /*
 767:../main.c     ****  Function:Chuyen he toa do dien ap alpha-beta sang abc
 768:../main.c     ****  Input:Usalpha, Usbeta
 769:../main.c     ****  Output:Usa, Usb, Usc
 770:../main.c     ****  */
 771:../main.c     **** void UsalphabetatoUsabc(void){
 1979              	 .loc 1 771 0
 1980              	 .cfi_startproc
 1981 0000 98B5     	 push {r3,r4,r7,lr}
 1982              	.LCFI19:
 1983              	 .cfi_def_cfa_offset 16
 1984              	 .cfi_offset 3,-16
 1985              	 .cfi_offset 4,-12
 1986              	 .cfi_offset 7,-8
 1987              	 .cfi_offset 14,-4
 1988 0002 00AF     	 add r7,sp,#0
 1989              	.LCFI20:
 1990              	 .cfi_def_cfa_register 7
 772:../main.c     **** 	Usa=Usalpha;
 1991              	 .loc 1 772 0
 1992 0004 1D4B     	 ldr r3,.L33
 1993 0006 1A68     	 ldr r2,[r3]
 1994 0008 1D4B     	 ldr r3,.L33+4
 1995 000a 1A60     	 str r2,[r3]
 773:../main.c     **** 	Usb=(-Usalpha/2)+(sqrt_3/2)*Usbeta;
 1996              	 .loc 1 773 0
 1997 000c 1B4B     	 ldr r3,.L33
 1998 000e 1B68     	 ldr r3,[r3]
 1999 0010 8022     	 mov r2,#128
 2000 0012 1206     	 lsl r2,r2,#24
 2001 0014 5340     	 eor r3,r2
 2002 0016 181C     	 add r0,r3,#0
 2003 0018 8021     	 mov r1,#128
 2004 001a C905     	 lsl r1,r1,#23
 2005 001c FFF7FEFF 	 bl __aeabi_fdiv
 2006 0020 031C     	 add r3,r0,#0
 2007 0022 1C1C     	 add r4,r3,#0
 2008 0024 174B     	 ldr r3,.L33+8
 2009 0026 1B68     	 ldr r3,[r3]
 2010 0028 181C     	 add r0,r3,#0
 2011 002a 1749     	 ldr r1,.L33+12
 2012 002c FFF7FEFF 	 bl __aeabi_fmul
 2013 0030 031C     	 add r3,r0,#0
 2014 0032 201C     	 add r0,r4,#0
 2015 0034 191C     	 add r1,r3,#0
 2016 0036 FFF7FEFF 	 bl __aeabi_fadd
 2017 003a 031C     	 add r3,r0,#0
 2018 003c 1A1C     	 add r2,r3,#0
 2019 003e 134B     	 ldr r3,.L33+16
 2020 0040 1A60     	 str r2,[r3]
 774:../main.c     ****     Usc=(-Usalpha/2)-(sqrt_3/2)*Usbeta;
 2021              	 .loc 1 774 0
 2022 0042 0E4B     	 ldr r3,.L33
 2023 0044 1B68     	 ldr r3,[r3]
 2024 0046 8022     	 mov r2,#128
 2025 0048 1206     	 lsl r2,r2,#24
 2026 004a 5340     	 eor r3,r2
 2027 004c 181C     	 add r0,r3,#0
 2028 004e 8021     	 mov r1,#128
 2029 0050 C905     	 lsl r1,r1,#23
 2030 0052 FFF7FEFF 	 bl __aeabi_fdiv
 2031 0056 031C     	 add r3,r0,#0
 2032 0058 1C1C     	 add r4,r3,#0
 2033 005a 0A4B     	 ldr r3,.L33+8
 2034 005c 1B68     	 ldr r3,[r3]
 2035 005e 181C     	 add r0,r3,#0
 2036 0060 0949     	 ldr r1,.L33+12
 2037 0062 FFF7FEFF 	 bl __aeabi_fmul
 2038 0066 031C     	 add r3,r0,#0
 2039 0068 201C     	 add r0,r4,#0
 2040 006a 191C     	 add r1,r3,#0
 2041 006c FFF7FEFF 	 bl __aeabi_fsub
 2042 0070 031C     	 add r3,r0,#0
 2043 0072 1A1C     	 add r2,r3,#0
 2044 0074 064B     	 ldr r3,.L33+20
 2045 0076 1A60     	 str r2,[r3]
 775:../main.c     **** }
 2046              	 .loc 1 775 0
 2047 0078 BD46     	 mov sp,r7
 2048              	 
 2049 007a 98BD     	 pop {r3,r4,r7,pc}
 2050              	.L34:
 2051              	 .align 2
 2052              	.L33:
 2053 007c 00000000 	 .word Usalpha
 2054 0080 00000000 	 .word Usa
 2055 0084 00000000 	 .word Usbeta
 2056 0088 D0B35D3F 	 .word 1063105488
 2057 008c 00000000 	 .word Usb
 2058 0090 00000000 	 .word Usc
 2059              	 .cfi_endproc
 2060              	.LFE472:
 2062              	 .global __aeabi_fcmpge
 2063              	 .global __aeabi_f2uiz
 2064              	 .section .text.SVMAlgorithm,"ax",%progbits
 2065              	 .align 2
 2066              	 .global SVMAlgorithm
 2067              	 .code 16
 2068              	 .thumb_func
 2070              	SVMAlgorithm:
 2071              	.LFB473:
 776:../main.c     **** /*
 777:../main.c     ****  Function:Thuat toan SVM tinh toan duty cycle cho 3 nhanh van, nhanh van direct tuong ung voi da, d
 778:../main.c     ****  Input:Usa, Usb, Usc, Usalpha, Usbeta, VDC
 779:../main.c     ****  Output:da, db, dc
 780:../main.c     ****  */
 781:../main.c     **** void SVMAlgorithm(void){
 2072              	 .loc 1 781 0
 2073              	 .cfi_startproc
 2074 0000 90B5     	 push {r4,r7,lr}
 2075              	.LCFI21:
 2076              	 .cfi_def_cfa_offset 12
 2077              	 .cfi_offset 4,-12
 2078              	 .cfi_offset 7,-8
 2079              	 .cfi_offset 14,-4
 2080 0002 85B0     	 sub sp,sp,#20
 2081              	.LCFI22:
 2082              	 .cfi_def_cfa_offset 32
 2083 0004 00AF     	 add r7,sp,#0
 2084              	.LCFI23:
 2085              	 .cfi_def_cfa_register 7
 782:../main.c     **** 	int16_t sector_a, sector_b, sector_c, sector, k;
 783:../main.c     **** 	if (Usa>=Usb){
 2086              	 .loc 1 783 0
 2087 0006 DC4B     	 ldr r3,.L69
 2088 0008 1A68     	 ldr r2,[r3]
 2089 000a DC4B     	 ldr r3,.L69+4
 2090 000c 1B68     	 ldr r3,[r3]
 2091 000e 101C     	 add r0,r2,#0
 2092 0010 191C     	 add r1,r3,#0
 2093 0012 FFF7FEFF 	 bl __aeabi_fcmpge
 2094 0016 031E     	 sub r3,r0,#0
 2095 0018 04D0     	 beq .L66
 784:../main.c     **** 		sector_a=4;
 2096              	 .loc 1 784 0
 2097 001a 0E23     	 mov r3,#14
 2098 001c FB18     	 add r3,r7,r3
 2099 001e 0422     	 mov r2,#4
 2100 0020 1A80     	 strh r2,[r3]
 2101 0022 03E0     	 b .L38
 2102              	.L66:
 785:../main.c     **** 	}
 786:../main.c     **** 	else{
 787:../main.c     **** 		sector_a=0;
 2103              	 .loc 1 787 0
 2104 0024 0E23     	 mov r3,#14
 2105 0026 FB18     	 add r3,r7,r3
 2106 0028 0022     	 mov r2,#0
 2107 002a 1A80     	 strh r2,[r3]
 2108              	.L38:
 788:../main.c     **** 	}
 789:../main.c     **** 	if (Usb>=Usc){
 2109              	 .loc 1 789 0
 2110 002c D34B     	 ldr r3,.L69+4
 2111 002e 1A68     	 ldr r2,[r3]
 2112 0030 D34B     	 ldr r3,.L69+8
 2113 0032 1B68     	 ldr r3,[r3]
 2114 0034 101C     	 add r0,r2,#0
 2115 0036 191C     	 add r1,r3,#0
 2116 0038 FFF7FEFF 	 bl __aeabi_fcmpge
 2117 003c 031E     	 sub r3,r0,#0
 2118 003e 04D0     	 beq .L67
 790:../main.c     **** 		sector_b=2;
 2119              	 .loc 1 790 0
 2120 0040 0C23     	 mov r3,#12
 2121 0042 FB18     	 add r3,r7,r3
 2122 0044 0222     	 mov r2,#2
 2123 0046 1A80     	 strh r2,[r3]
 2124 0048 03E0     	 b .L41
 2125              	.L67:
 791:../main.c     **** 	}
 792:../main.c     **** 	else{
 793:../main.c     **** 		sector_b=0;
 2126              	 .loc 1 793 0
 2127 004a 0C23     	 mov r3,#12
 2128 004c FB18     	 add r3,r7,r3
 2129 004e 0022     	 mov r2,#0
 2130 0050 1A80     	 strh r2,[r3]
 2131              	.L41:
 794:../main.c     **** 	}
 795:../main.c     **** 	if (Usc>=Usa){
 2132              	 .loc 1 795 0
 2133 0052 CB4B     	 ldr r3,.L69+8
 2134 0054 1A68     	 ldr r2,[r3]
 2135 0056 C84B     	 ldr r3,.L69
 2136 0058 1B68     	 ldr r3,[r3]
 2137 005a 101C     	 add r0,r2,#0
 2138 005c 191C     	 add r1,r3,#0
 2139 005e FFF7FEFF 	 bl __aeabi_fcmpge
 2140 0062 031E     	 sub r3,r0,#0
 2141 0064 04D0     	 beq .L68
 796:../main.c     **** 		sector_c=1;
 2142              	 .loc 1 796 0
 2143 0066 0A23     	 mov r3,#10
 2144 0068 FB18     	 add r3,r7,r3
 2145 006a 0122     	 mov r2,#1
 2146 006c 1A80     	 strh r2,[r3]
 2147 006e 03E0     	 b .L44
 2148              	.L68:
 797:../main.c     **** 	}
 798:../main.c     **** 	else{
 799:../main.c     **** 		sector_c=0;
 2149              	 .loc 1 799 0
 2150 0070 0A23     	 mov r3,#10
 2151 0072 FB18     	 add r3,r7,r3
 2152 0074 0022     	 mov r2,#0
 2153 0076 1A80     	 strh r2,[r3]
 2154              	.L44:
 800:../main.c     **** 	}
 801:../main.c     **** 	k=sector_a+sector_b+sector_c;
 2155              	 .loc 1 801 0
 2156 0078 0E23     	 mov r3,#14
 2157 007a FB18     	 add r3,r7,r3
 2158 007c 1A88     	 ldrh r2,[r3]
 2159 007e 0C23     	 mov r3,#12
 2160 0080 FB18     	 add r3,r7,r3
 2161 0082 1B88     	 ldrh r3,[r3]
 2162 0084 D318     	 add r3,r2,r3
 2163 0086 9AB2     	 uxth r2,r3
 2164 0088 0A23     	 mov r3,#10
 2165 008a FB18     	 add r3,r7,r3
 2166 008c 1B88     	 ldrh r3,[r3]
 2167 008e D318     	 add r3,r2,r3
 2168 0090 9AB2     	 uxth r2,r3
 2169 0092 BB1D     	 add r3,r7,#6
 2170 0094 1A80     	 strh r2,[r3]
 802:../main.c     ****     switch (k){
 2171              	 .loc 1 802 0
 2172 0096 BB1D     	 add r3,r7,#6
 2173 0098 0022     	 mov r2,#0
 2174 009a 9B5E     	 ldrsh r3,[r3,r2]
 2175 009c 072B     	 cmp r3,#7
 2176 009e 2CD8     	 bhi .L45
 2177 00a0 9A00     	 lsl r2,r3,#2
 2178 00a2 B84B     	 ldr r3,.L69+12
 2179 00a4 D318     	 add r3,r2,r3
 2180 00a6 1B68     	 ldr r3,[r3]
 2181 00a8 9F46     	 mov pc,r3
 2182              	 .section .rodata.SVMAlgorithm,"a",%progbits
 2183              	 .align 2
 2184              	.L47:
 2185 0000 AA000000 	 .word .L46
 2186 0004 B4000000 	 .word .L48
 2187 0008 BE000000 	 .word .L49
 2188 000c C8000000 	 .word .L50
 2189 0010 D2000000 	 .word .L51
 2190 0014 DC000000 	 .word .L52
 2191 0018 E6000000 	 .word .L53
 2192 001c F0000000 	 .word .L54
 2193              	 .section .text.SVMAlgorithm
 2194              	.L46:
 803:../main.c     ****     case 0:
 804:../main.c     ****     	sector=4;
 2195              	 .loc 1 804 0
 2196 00aa 0823     	 mov r3,#8
 2197 00ac FB18     	 add r3,r7,r3
 2198 00ae 0422     	 mov r2,#4
 2199 00b0 1A80     	 strh r2,[r3]
 805:../main.c     ****     	break;
 2200              	 .loc 1 805 0
 2201 00b2 22E0     	 b .L45
 2202              	.L48:
 806:../main.c     ****     case 1:
 807:../main.c     ****     	sector=4;
 2203              	 .loc 1 807 0
 2204 00b4 0823     	 mov r3,#8
 2205 00b6 FB18     	 add r3,r7,r3
 2206 00b8 0422     	 mov r2,#4
 2207 00ba 1A80     	 strh r2,[r3]
 808:../main.c     ****     	break;
 2208              	 .loc 1 808 0
 2209 00bc 1DE0     	 b .L45
 2210              	.L49:
 809:../main.c     ****     case 2:
 810:../main.c     ****     	sector=2;
 2211              	 .loc 1 810 0
 2212 00be 0823     	 mov r3,#8
 2213 00c0 FB18     	 add r3,r7,r3
 2214 00c2 0222     	 mov r2,#2
 2215 00c4 1A80     	 strh r2,[r3]
 811:../main.c     ****     	break;
 2216              	 .loc 1 811 0
 2217 00c6 18E0     	 b .L45
 2218              	.L50:
 812:../main.c     ****     case 3:
 813:../main.c     ****     	sector=3;
 2219              	 .loc 1 813 0
 2220 00c8 0823     	 mov r3,#8
 2221 00ca FB18     	 add r3,r7,r3
 2222 00cc 0322     	 mov r2,#3
 2223 00ce 1A80     	 strh r2,[r3]
 814:../main.c     ****     	break;
 2224              	 .loc 1 814 0
 2225 00d0 13E0     	 b .L45
 2226              	.L51:
 815:../main.c     ****     case 4:
 816:../main.c     ****     	sector=6;
 2227              	 .loc 1 816 0
 2228 00d2 0823     	 mov r3,#8
 2229 00d4 FB18     	 add r3,r7,r3
 2230 00d6 0622     	 mov r2,#6
 2231 00d8 1A80     	 strh r2,[r3]
 817:../main.c     ****     	break;
 2232              	 .loc 1 817 0
 2233 00da 0EE0     	 b .L45
 2234              	.L52:
 818:../main.c     ****     case 5:
 819:../main.c     ****     	sector=5;
 2235              	 .loc 1 819 0
 2236 00dc 0823     	 mov r3,#8
 2237 00de FB18     	 add r3,r7,r3
 2238 00e0 0522     	 mov r2,#5
 2239 00e2 1A80     	 strh r2,[r3]
 820:../main.c     ****     	break;
 2240              	 .loc 1 820 0
 2241 00e4 09E0     	 b .L45
 2242              	.L53:
 821:../main.c     ****     case 6:
 822:../main.c     ****     	sector=1;
 2243              	 .loc 1 822 0
 2244 00e6 0823     	 mov r3,#8
 2245 00e8 FB18     	 add r3,r7,r3
 2246 00ea 0122     	 mov r2,#1
 2247 00ec 1A80     	 strh r2,[r3]
 823:../main.c     ****     	break;
 2248              	 .loc 1 823 0
 2249 00ee 04E0     	 b .L45
 2250              	.L54:
 824:../main.c     ****     case 7:
 825:../main.c     ****     	sector=1;
 2251              	 .loc 1 825 0
 2252 00f0 0823     	 mov r3,#8
 2253 00f2 FB18     	 add r3,r7,r3
 2254 00f4 0122     	 mov r2,#1
 2255 00f6 1A80     	 strh r2,[r3]
 826:../main.c     ****     	break;
 2256              	 .loc 1 826 0
 2257 00f8 C046     	 mov r8,r8
 2258              	.L45:
 827:../main.c     ****     }
 828:../main.c     ****     switch (sector){
 2259              	 .loc 1 828 0
 2260 00fa 0823     	 mov r3,#8
 2261 00fc FB18     	 add r3,r7,r3
 2262 00fe 0022     	 mov r2,#0
 2263 0100 9B5E     	 ldrsh r3,[r3,r2]
 2264 0102 062B     	 cmp r3,#6
 2265 0104 00D9     	 bls .LCB1037
 2266 0106 D4E3     	 b .L35
 2267              	.LCB1037:
 2268 0108 9A00     	 lsl r2,r3,#2
 2269 010a 9F4B     	 ldr r3,.L69+16
 2270 010c D318     	 add r3,r2,r3
 2271 010e 1B68     	 ldr r3,[r3]
 2272 0110 9F46     	 mov pc,r3
 2273              	 .section .rodata.SVMAlgorithm
 2274              	 .align 2
 2275              	.L57:
 2276 0020 B2080000 	 .word .L35
 2277 0024 12010000 	 .word .L56
 2278 0028 38020000 	 .word .L58
 2279 002c C4030000 	 .word .L59
 2280 0030 EA040000 	 .word .L60
 2281 0034 10060000 	 .word .L61
 2282 0038 8C070000 	 .word .L62
 2283              	 .section .text.SVMAlgorithm
 2284              	.L56:
 829:../main.c     ****     case 1:
 830:../main.c     ****     	d1=(float)((3*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2285              	 .loc 1 830 0
 2286 0112 9E4B     	 ldr r3,.L69+20
 2287 0114 1B68     	 ldr r3,[r3]
 2288 0116 181C     	 add r0,r3,#0
 2289 0118 9D49     	 ldr r1,.L69+24
 2290 011a FFF7FEFF 	 bl __aeabi_fmul
 2291 011e 031C     	 add r3,r0,#0
 2292 0120 1C1C     	 add r4,r3,#0
 2293 0122 9C4B     	 ldr r3,.L69+28
 2294 0124 1B68     	 ldr r3,[r3]
 2295 0126 181C     	 add r0,r3,#0
 2296 0128 9B49     	 ldr r1,.L69+32
 2297 012a FFF7FEFF 	 bl __aeabi_fmul
 2298 012e 031C     	 add r3,r0,#0
 2299 0130 201C     	 add r0,r4,#0
 2300 0132 191C     	 add r1,r3,#0
 2301 0134 FFF7FEFF 	 bl __aeabi_fsub
 2302 0138 031C     	 add r3,r0,#0
 2303 013a 181C     	 add r0,r3,#0
 2304 013c 9749     	 ldr r1,.L69+36
 2305 013e FFF7FEFF 	 bl __aeabi_fdiv
 2306 0142 031C     	 add r3,r0,#0
 2307 0144 1A1C     	 add r2,r3,#0
 2308 0146 964B     	 ldr r3,.L69+40
 2309 0148 1A60     	 str r2,[r3]
 831:../main.c     ****     	d2=(float)((sqrt_3*Usbeta)/VDC);
 2310              	 .loc 1 831 0
 2311 014a 924B     	 ldr r3,.L69+28
 2312 014c 1B68     	 ldr r3,[r3]
 2313 014e 181C     	 add r0,r3,#0
 2314 0150 9149     	 ldr r1,.L69+32
 2315 0152 FFF7FEFF 	 bl __aeabi_fmul
 2316 0156 031C     	 add r3,r0,#0
 2317 0158 181C     	 add r0,r3,#0
 2318 015a 9249     	 ldr r1,.L69+44
 2319 015c FFF7FEFF 	 bl __aeabi_fdiv
 2320 0160 031C     	 add r3,r0,#0
 2321 0162 1A1C     	 add r2,r3,#0
 2322 0164 904B     	 ldr r3,.L69+48
 2323 0166 1A60     	 str r2,[r3]
 832:../main.c     ****     	d0=1-d1-d2;
 2324              	 .loc 1 832 0
 2325 0168 8D4B     	 ldr r3,.L69+40
 2326 016a 1B68     	 ldr r3,[r3]
 2327 016c FE20     	 mov r0,#254
 2328 016e 8005     	 lsl r0,r0,#22
 2329 0170 191C     	 add r1,r3,#0
 2330 0172 FFF7FEFF 	 bl __aeabi_fsub
 2331 0176 031C     	 add r3,r0,#0
 2332 0178 1A1C     	 add r2,r3,#0
 2333 017a 8B4B     	 ldr r3,.L69+48
 2334 017c 1B68     	 ldr r3,[r3]
 2335 017e 101C     	 add r0,r2,#0
 2336 0180 191C     	 add r1,r3,#0
 2337 0182 FFF7FEFF 	 bl __aeabi_fsub
 2338 0186 031C     	 add r3,r0,#0
 2339 0188 1A1C     	 add r2,r3,#0
 2340 018a 884B     	 ldr r3,.L69+52
 2341 018c 1A60     	 str r2,[r3]
 833:../main.c     ****     	da=(uint16_t)((d0/2)*10000);
 2342              	 .loc 1 833 0
 2343 018e 874B     	 ldr r3,.L69+52
 2344 0190 1B68     	 ldr r3,[r3]
 2345 0192 181C     	 add r0,r3,#0
 2346 0194 8021     	 mov r1,#128
 2347 0196 C905     	 lsl r1,r1,#23
 2348 0198 FFF7FEFF 	 bl __aeabi_fdiv
 2349 019c 031C     	 add r3,r0,#0
 2350 019e 181C     	 add r0,r3,#0
 2351 01a0 8349     	 ldr r1,.L69+56
 2352 01a2 FFF7FEFF 	 bl __aeabi_fmul
 2353 01a6 031C     	 add r3,r0,#0
 2354 01a8 181C     	 add r0,r3,#0
 2355 01aa FFF7FEFF 	 bl __aeabi_f2uiz
 2356 01ae 031C     	 mov r3,r0
 2357 01b0 9AB2     	 uxth r2,r3
 2358 01b2 804B     	 ldr r3,.L69+60
 2359 01b4 1A80     	 strh r2,[r3]
 834:../main.c     ****     	db=(uint16_t)(((d0/2)+d1)*10000);
 2360              	 .loc 1 834 0
 2361 01b6 7D4B     	 ldr r3,.L69+52
 2362 01b8 1B68     	 ldr r3,[r3]
 2363 01ba 181C     	 add r0,r3,#0
 2364 01bc 8021     	 mov r1,#128
 2365 01be C905     	 lsl r1,r1,#23
 2366 01c0 FFF7FEFF 	 bl __aeabi_fdiv
 2367 01c4 031C     	 add r3,r0,#0
 2368 01c6 1A1C     	 add r2,r3,#0
 2369 01c8 754B     	 ldr r3,.L69+40
 2370 01ca 1B68     	 ldr r3,[r3]
 2371 01cc 101C     	 add r0,r2,#0
 2372 01ce 191C     	 add r1,r3,#0
 2373 01d0 FFF7FEFF 	 bl __aeabi_fadd
 2374 01d4 031C     	 add r3,r0,#0
 2375 01d6 181C     	 add r0,r3,#0
 2376 01d8 7549     	 ldr r1,.L69+56
 2377 01da FFF7FEFF 	 bl __aeabi_fmul
 2378 01de 031C     	 add r3,r0,#0
 2379 01e0 181C     	 add r0,r3,#0
 2380 01e2 FFF7FEFF 	 bl __aeabi_f2uiz
 2381 01e6 031C     	 mov r3,r0
 2382 01e8 9AB2     	 uxth r2,r3
 2383 01ea 734B     	 ldr r3,.L69+64
 2384 01ec 1A80     	 strh r2,[r3]
 835:../main.c     ****     	dc=(uint16_t)(((d0/2)+d1+d2)*10000);
 2385              	 .loc 1 835 0
 2386 01ee 6F4B     	 ldr r3,.L69+52
 2387 01f0 1B68     	 ldr r3,[r3]
 2388 01f2 181C     	 add r0,r3,#0
 2389 01f4 8021     	 mov r1,#128
 2390 01f6 C905     	 lsl r1,r1,#23
 2391 01f8 FFF7FEFF 	 bl __aeabi_fdiv
 2392 01fc 031C     	 add r3,r0,#0
 2393 01fe 1A1C     	 add r2,r3,#0
 2394 0200 674B     	 ldr r3,.L69+40
 2395 0202 1B68     	 ldr r3,[r3]
 2396 0204 101C     	 add r0,r2,#0
 2397 0206 191C     	 add r1,r3,#0
 2398 0208 FFF7FEFF 	 bl __aeabi_fadd
 2399 020c 031C     	 add r3,r0,#0
 2400 020e 1A1C     	 add r2,r3,#0
 2401 0210 654B     	 ldr r3,.L69+48
 2402 0212 1B68     	 ldr r3,[r3]
 2403 0214 101C     	 add r0,r2,#0
 2404 0216 191C     	 add r1,r3,#0
 2405 0218 FFF7FEFF 	 bl __aeabi_fadd
 2406 021c 031C     	 add r3,r0,#0
 2407 021e 181C     	 add r0,r3,#0
 2408 0220 6349     	 ldr r1,.L69+56
 2409 0222 FFF7FEFF 	 bl __aeabi_fmul
 2410 0226 031C     	 add r3,r0,#0
 2411 0228 181C     	 add r0,r3,#0
 2412 022a FFF7FEFF 	 bl __aeabi_f2uiz
 2413 022e 031C     	 mov r3,r0
 2414 0230 9AB2     	 uxth r2,r3
 2415 0232 624B     	 ldr r3,.L69+68
 2416 0234 1A80     	 strh r2,[r3]
 836:../main.c     ****     	break;
 2417              	 .loc 1 836 0
 2418 0236 3CE3     	 b .L35
 2419              	.L58:
 837:../main.c     ****     case 2:
 838:../main.c     ****     	d1=(float)(((-3)*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 2420              	 .loc 1 838 0
 2421 0238 544B     	 ldr r3,.L69+20
 2422 023a 1B68     	 ldr r3,[r3]
 2423 023c 181C     	 add r0,r3,#0
 2424 023e 6049     	 ldr r1,.L69+72
 2425 0240 FFF7FEFF 	 bl __aeabi_fmul
 2426 0244 031C     	 add r3,r0,#0
 2427 0246 1C1C     	 add r4,r3,#0
 2428 0248 524B     	 ldr r3,.L69+28
 2429 024a 1B68     	 ldr r3,[r3]
 2430 024c 181C     	 add r0,r3,#0
 2431 024e 5249     	 ldr r1,.L69+32
 2432 0250 FFF7FEFF 	 bl __aeabi_fmul
 2433 0254 031C     	 add r3,r0,#0
 2434 0256 201C     	 add r0,r4,#0
 2435 0258 191C     	 add r1,r3,#0
 2436 025a FFF7FEFF 	 bl __aeabi_fadd
 2437 025e 031C     	 add r3,r0,#0
 2438 0260 181C     	 add r0,r3,#0
 2439 0262 4E49     	 ldr r1,.L69+36
 2440 0264 FFF7FEFF 	 bl __aeabi_fdiv
 2441 0268 031C     	 add r3,r0,#0
 2442 026a 1A1C     	 add r2,r3,#0
 2443 026c 4C4B     	 ldr r3,.L69+40
 2444 026e 1A60     	 str r2,[r3]
 839:../main.c     ****     	d2=(float)((3*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 2445              	 .loc 1 839 0
 2446 0270 464B     	 ldr r3,.L69+20
 2447 0272 1B68     	 ldr r3,[r3]
 2448 0274 181C     	 add r0,r3,#0
 2449 0276 4649     	 ldr r1,.L69+24
 2450 0278 FFF7FEFF 	 bl __aeabi_fmul
 2451 027c 031C     	 add r3,r0,#0
 2452 027e 1C1C     	 add r4,r3,#0
 2453 0280 444B     	 ldr r3,.L69+28
 2454 0282 1B68     	 ldr r3,[r3]
 2455 0284 181C     	 add r0,r3,#0
 2456 0286 4449     	 ldr r1,.L69+32
 2457 0288 FFF7FEFF 	 bl __aeabi_fmul
 2458 028c 031C     	 add r3,r0,#0
 2459 028e 201C     	 add r0,r4,#0
 2460 0290 191C     	 add r1,r3,#0
 2461 0292 FFF7FEFF 	 bl __aeabi_fadd
 2462 0296 031C     	 add r3,r0,#0
 2463 0298 181C     	 add r0,r3,#0
 2464 029a 4049     	 ldr r1,.L69+36
 2465 029c FFF7FEFF 	 bl __aeabi_fdiv
 2466 02a0 031C     	 add r3,r0,#0
 2467 02a2 1A1C     	 add r2,r3,#0
 2468 02a4 404B     	 ldr r3,.L69+48
 2469 02a6 1A60     	 str r2,[r3]
 840:../main.c     ****     	d0=1-d1-d2;
 2470              	 .loc 1 840 0
 2471 02a8 3D4B     	 ldr r3,.L69+40
 2472 02aa 1B68     	 ldr r3,[r3]
 2473 02ac FE20     	 mov r0,#254
 2474 02ae 8005     	 lsl r0,r0,#22
 2475 02b0 191C     	 add r1,r3,#0
 2476 02b2 FFF7FEFF 	 bl __aeabi_fsub
 2477 02b6 031C     	 add r3,r0,#0
 2478 02b8 1A1C     	 add r2,r3,#0
 2479 02ba 3B4B     	 ldr r3,.L69+48
 2480 02bc 1B68     	 ldr r3,[r3]
 2481 02be 101C     	 add r0,r2,#0
 2482 02c0 191C     	 add r1,r3,#0
 2483 02c2 FFF7FEFF 	 bl __aeabi_fsub
 2484 02c6 031C     	 add r3,r0,#0
 2485 02c8 1A1C     	 add r2,r3,#0
 2486 02ca 384B     	 ldr r3,.L69+52
 2487 02cc 1A60     	 str r2,[r3]
 841:../main.c     ****     	da=(uint16_t)(((d0/2)+d1)*10000);
 2488              	 .loc 1 841 0
 2489 02ce 374B     	 ldr r3,.L69+52
 2490 02d0 1B68     	 ldr r3,[r3]
 2491 02d2 181C     	 add r0,r3,#0
 2492 02d4 8021     	 mov r1,#128
 2493 02d6 C905     	 lsl r1,r1,#23
 2494 02d8 FFF7FEFF 	 bl __aeabi_fdiv
 2495 02dc 031C     	 add r3,r0,#0
 2496 02de 1A1C     	 add r2,r3,#0
 2497 02e0 2F4B     	 ldr r3,.L69+40
 2498 02e2 1B68     	 ldr r3,[r3]
 2499 02e4 101C     	 add r0,r2,#0
 2500 02e6 191C     	 add r1,r3,#0
 2501 02e8 FFF7FEFF 	 bl __aeabi_fadd
 2502 02ec 031C     	 add r3,r0,#0
 2503 02ee 181C     	 add r0,r3,#0
 2504 02f0 2F49     	 ldr r1,.L69+56
 2505 02f2 FFF7FEFF 	 bl __aeabi_fmul
 2506 02f6 031C     	 add r3,r0,#0
 2507 02f8 181C     	 add r0,r3,#0
 2508 02fa FFF7FEFF 	 bl __aeabi_f2uiz
 2509 02fe 031C     	 mov r3,r0
 2510 0300 9AB2     	 uxth r2,r3
 2511 0302 2C4B     	 ldr r3,.L69+60
 2512 0304 1A80     	 strh r2,[r3]
 842:../main.c     ****     	db=(uint16_t)((d0/2)*10000);
 2513              	 .loc 1 842 0
 2514 0306 294B     	 ldr r3,.L69+52
 2515 0308 1B68     	 ldr r3,[r3]
 2516 030a 181C     	 add r0,r3,#0
 2517 030c 8021     	 mov r1,#128
 2518 030e C905     	 lsl r1,r1,#23
 2519 0310 FFF7FEFF 	 bl __aeabi_fdiv
 2520 0314 031C     	 add r3,r0,#0
 2521 0316 181C     	 add r0,r3,#0
 2522 0318 2549     	 ldr r1,.L69+56
 2523 031a FFF7FEFF 	 bl __aeabi_fmul
 2524 031e 031C     	 add r3,r0,#0
 2525 0320 181C     	 add r0,r3,#0
 2526 0322 FFF7FEFF 	 bl __aeabi_f2uiz
 2527 0326 031C     	 mov r3,r0
 2528 0328 9AB2     	 uxth r2,r3
 2529 032a 234B     	 ldr r3,.L69+64
 2530 032c 1A80     	 strh r2,[r3]
 843:../main.c     ****     	dc=(uint16_t)(((d0/2)+d1+d2)*10000);
 2531              	 .loc 1 843 0
 2532 032e 1F4B     	 ldr r3,.L69+52
 2533 0330 1B68     	 ldr r3,[r3]
 2534 0332 181C     	 add r0,r3,#0
 2535 0334 8021     	 mov r1,#128
 2536 0336 C905     	 lsl r1,r1,#23
 2537 0338 FFF7FEFF 	 bl __aeabi_fdiv
 2538 033c 031C     	 add r3,r0,#0
 2539 033e 1A1C     	 add r2,r3,#0
 2540 0340 174B     	 ldr r3,.L69+40
 2541 0342 1B68     	 ldr r3,[r3]
 2542 0344 101C     	 add r0,r2,#0
 2543 0346 191C     	 add r1,r3,#0
 2544 0348 FFF7FEFF 	 bl __aeabi_fadd
 2545 034c 031C     	 add r3,r0,#0
 2546 034e 1A1C     	 add r2,r3,#0
 2547 0350 154B     	 ldr r3,.L69+48
 2548 0352 1B68     	 ldr r3,[r3]
 2549 0354 101C     	 add r0,r2,#0
 2550 0356 191C     	 add r1,r3,#0
 2551 0358 FFF7FEFF 	 bl __aeabi_fadd
 2552 035c 031C     	 add r3,r0,#0
 2553 035e 181C     	 add r0,r3,#0
 2554 0360 1349     	 ldr r1,.L69+56
 2555 0362 FFF7FEFF 	 bl __aeabi_fmul
 2556 0366 031C     	 add r3,r0,#0
 2557 0368 181C     	 add r0,r3,#0
 2558 036a FFF7FEFF 	 bl __aeabi_f2uiz
 2559 036e 031C     	 mov r3,r0
 2560 0370 9AB2     	 uxth r2,r3
 2561 0372 124B     	 ldr r3,.L69+68
 2562 0374 1A80     	 strh r2,[r3]
 844:../main.c     ****     	break;
 2563              	 .loc 1 844 0
 2564 0376 9CE2     	 b .L35
 2565              	.L70:
 2566              	 .align 2
 2567              	.L69:
 2568 0378 00000000 	 .word Usa
 2569 037c 00000000 	 .word Usb
 2570 0380 00000000 	 .word Usc
 2571 0384 00000000 	 .word .L47
 2572 0388 20000000 	 .word .L57
 2573 038c 00000000 	 .word Usalpha
 2574 0390 00004040 	 .word 1077936128
 2575 0394 00000000 	 .word Usbeta
 2576 0398 D0B3DD3F 	 .word 1071494096
 2577 039c 00004042 	 .word 1111490560
 2578 03a0 00000000 	 .word d1
 2579 03a4 0000C041 	 .word 1103101952
 2580 03a8 00000000 	 .word d2
 2581 03ac 00000000 	 .word d0
 2582 03b0 00401C46 	 .word 1176256512
 2583 03b4 00000000 	 .word da
 2584 03b8 00000000 	 .word db
 2585 03bc 00000000 	 .word dc
 2586 03c0 000040C0 	 .word -1069547520
 2587              	.L59:
 845:../main.c     ****     case 3:
 846:../main.c     ****     	d1=(float)((sqrt_3*Usbeta)/VDC);
 2588              	 .loc 1 846 0
 2589 03c4 E24B     	 ldr r3,.L71
 2590 03c6 1B68     	 ldr r3,[r3]
 2591 03c8 181C     	 add r0,r3,#0
 2592 03ca E249     	 ldr r1,.L71+4
 2593 03cc FFF7FEFF 	 bl __aeabi_fmul
 2594 03d0 031C     	 add r3,r0,#0
 2595 03d2 181C     	 add r0,r3,#0
 2596 03d4 E049     	 ldr r1,.L71+8
 2597 03d6 FFF7FEFF 	 bl __aeabi_fdiv
 2598 03da 031C     	 add r3,r0,#0
 2599 03dc 1A1C     	 add r2,r3,#0
 2600 03de DF4B     	 ldr r3,.L71+12
 2601 03e0 1A60     	 str r2,[r3]
 847:../main.c     ****     	d2=(float)(((-3)*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2602              	 .loc 1 847 0
 2603 03e2 DF4B     	 ldr r3,.L71+16
 2604 03e4 1B68     	 ldr r3,[r3]
 2605 03e6 181C     	 add r0,r3,#0
 2606 03e8 DE49     	 ldr r1,.L71+20
 2607 03ea FFF7FEFF 	 bl __aeabi_fmul
 2608 03ee 031C     	 add r3,r0,#0
 2609 03f0 1C1C     	 add r4,r3,#0
 2610 03f2 D74B     	 ldr r3,.L71
 2611 03f4 1B68     	 ldr r3,[r3]
 2612 03f6 181C     	 add r0,r3,#0
 2613 03f8 D649     	 ldr r1,.L71+4
 2614 03fa FFF7FEFF 	 bl __aeabi_fmul
 2615 03fe 031C     	 add r3,r0,#0
 2616 0400 201C     	 add r0,r4,#0
 2617 0402 191C     	 add r1,r3,#0
 2618 0404 FFF7FEFF 	 bl __aeabi_fsub
 2619 0408 031C     	 add r3,r0,#0
 2620 040a 181C     	 add r0,r3,#0
 2621 040c D649     	 ldr r1,.L71+24
 2622 040e FFF7FEFF 	 bl __aeabi_fdiv
 2623 0412 031C     	 add r3,r0,#0
 2624 0414 1A1C     	 add r2,r3,#0
 2625 0416 D54B     	 ldr r3,.L71+28
 2626 0418 1A60     	 str r2,[r3]
 848:../main.c     ****     	d0=1-d1-d2;
 2627              	 .loc 1 848 0
 2628 041a D04B     	 ldr r3,.L71+12
 2629 041c 1B68     	 ldr r3,[r3]
 2630 041e FE20     	 mov r0,#254
 2631 0420 8005     	 lsl r0,r0,#22
 2632 0422 191C     	 add r1,r3,#0
 2633 0424 FFF7FEFF 	 bl __aeabi_fsub
 2634 0428 031C     	 add r3,r0,#0
 2635 042a 1A1C     	 add r2,r3,#0
 2636 042c CF4B     	 ldr r3,.L71+28
 2637 042e 1B68     	 ldr r3,[r3]
 2638 0430 101C     	 add r0,r2,#0
 2639 0432 191C     	 add r1,r3,#0
 2640 0434 FFF7FEFF 	 bl __aeabi_fsub
 2641 0438 031C     	 add r3,r0,#0
 2642 043a 1A1C     	 add r2,r3,#0
 2643 043c CC4B     	 ldr r3,.L71+32
 2644 043e 1A60     	 str r2,[r3]
 849:../main.c     ****     	da=(uint16_t)(((d0/2)+d1+d2)*10000);
 2645              	 .loc 1 849 0
 2646 0440 CB4B     	 ldr r3,.L71+32
 2647 0442 1B68     	 ldr r3,[r3]
 2648 0444 181C     	 add r0,r3,#0
 2649 0446 8021     	 mov r1,#128
 2650 0448 C905     	 lsl r1,r1,#23
 2651 044a FFF7FEFF 	 bl __aeabi_fdiv
 2652 044e 031C     	 add r3,r0,#0
 2653 0450 1A1C     	 add r2,r3,#0
 2654 0452 C24B     	 ldr r3,.L71+12
 2655 0454 1B68     	 ldr r3,[r3]
 2656 0456 101C     	 add r0,r2,#0
 2657 0458 191C     	 add r1,r3,#0
 2658 045a FFF7FEFF 	 bl __aeabi_fadd
 2659 045e 031C     	 add r3,r0,#0
 2660 0460 1A1C     	 add r2,r3,#0
 2661 0462 C24B     	 ldr r3,.L71+28
 2662 0464 1B68     	 ldr r3,[r3]
 2663 0466 101C     	 add r0,r2,#0
 2664 0468 191C     	 add r1,r3,#0
 2665 046a FFF7FEFF 	 bl __aeabi_fadd
 2666 046e 031C     	 add r3,r0,#0
 2667 0470 181C     	 add r0,r3,#0
 2668 0472 C049     	 ldr r1,.L71+36
 2669 0474 FFF7FEFF 	 bl __aeabi_fmul
 2670 0478 031C     	 add r3,r0,#0
 2671 047a 181C     	 add r0,r3,#0
 2672 047c FFF7FEFF 	 bl __aeabi_f2uiz
 2673 0480 031C     	 mov r3,r0
 2674 0482 9AB2     	 uxth r2,r3
 2675 0484 BC4B     	 ldr r3,.L71+40
 2676 0486 1A80     	 strh r2,[r3]
 850:../main.c     ****     	db=(uint16_t)((d0/2)*10000);
 2677              	 .loc 1 850 0
 2678 0488 B94B     	 ldr r3,.L71+32
 2679 048a 1B68     	 ldr r3,[r3]
 2680 048c 181C     	 add r0,r3,#0
 2681 048e 8021     	 mov r1,#128
 2682 0490 C905     	 lsl r1,r1,#23
 2683 0492 FFF7FEFF 	 bl __aeabi_fdiv
 2684 0496 031C     	 add r3,r0,#0
 2685 0498 181C     	 add r0,r3,#0
 2686 049a B649     	 ldr r1,.L71+36
 2687 049c FFF7FEFF 	 bl __aeabi_fmul
 2688 04a0 031C     	 add r3,r0,#0
 2689 04a2 181C     	 add r0,r3,#0
 2690 04a4 FFF7FEFF 	 bl __aeabi_f2uiz
 2691 04a8 031C     	 mov r3,r0
 2692 04aa 9AB2     	 uxth r2,r3
 2693 04ac B34B     	 ldr r3,.L71+44
 2694 04ae 1A80     	 strh r2,[r3]
 851:../main.c     ****     	dc=(uint16_t)(((d0/2)+d1)*10000);
 2695              	 .loc 1 851 0
 2696 04b0 AF4B     	 ldr r3,.L71+32
 2697 04b2 1B68     	 ldr r3,[r3]
 2698 04b4 181C     	 add r0,r3,#0
 2699 04b6 8021     	 mov r1,#128
 2700 04b8 C905     	 lsl r1,r1,#23
 2701 04ba FFF7FEFF 	 bl __aeabi_fdiv
 2702 04be 031C     	 add r3,r0,#0
 2703 04c0 1A1C     	 add r2,r3,#0
 2704 04c2 A64B     	 ldr r3,.L71+12
 2705 04c4 1B68     	 ldr r3,[r3]
 2706 04c6 101C     	 add r0,r2,#0
 2707 04c8 191C     	 add r1,r3,#0
 2708 04ca FFF7FEFF 	 bl __aeabi_fadd
 2709 04ce 031C     	 add r3,r0,#0
 2710 04d0 181C     	 add r0,r3,#0
 2711 04d2 A849     	 ldr r1,.L71+36
 2712 04d4 FFF7FEFF 	 bl __aeabi_fmul
 2713 04d8 031C     	 add r3,r0,#0
 2714 04da 181C     	 add r0,r3,#0
 2715 04dc FFF7FEFF 	 bl __aeabi_f2uiz
 2716 04e0 031C     	 mov r3,r0
 2717 04e2 9AB2     	 uxth r2,r3
 2718 04e4 A64B     	 ldr r3,.L71+48
 2719 04e6 1A80     	 strh r2,[r3]
 852:../main.c     ****     	break;
 2720              	 .loc 1 852 0
 2721 04e8 E3E1     	 b .L35
 2722              	.L60:
 853:../main.c     ****     case 4:
 854:../main.c     ****     	d1=(float)(((-sqrt_3)*Usbeta)/VDC);
 2723              	 .loc 1 854 0
 2724 04ea 994B     	 ldr r3,.L71
 2725 04ec 1B68     	 ldr r3,[r3]
 2726 04ee 181C     	 add r0,r3,#0
 2727 04f0 A449     	 ldr r1,.L71+52
 2728 04f2 FFF7FEFF 	 bl __aeabi_fmul
 2729 04f6 031C     	 add r3,r0,#0
 2730 04f8 181C     	 add r0,r3,#0
 2731 04fa 9749     	 ldr r1,.L71+8
 2732 04fc FFF7FEFF 	 bl __aeabi_fdiv
 2733 0500 031C     	 add r3,r0,#0
 2734 0502 1A1C     	 add r2,r3,#0
 2735 0504 954B     	 ldr r3,.L71+12
 2736 0506 1A60     	 str r2,[r3]
 855:../main.c     ****     	d2=(float)(((-3)*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 2737              	 .loc 1 855 0
 2738 0508 954B     	 ldr r3,.L71+16
 2739 050a 1B68     	 ldr r3,[r3]
 2740 050c 181C     	 add r0,r3,#0
 2741 050e 9549     	 ldr r1,.L71+20
 2742 0510 FFF7FEFF 	 bl __aeabi_fmul
 2743 0514 031C     	 add r3,r0,#0
 2744 0516 1C1C     	 add r4,r3,#0
 2745 0518 8D4B     	 ldr r3,.L71
 2746 051a 1B68     	 ldr r3,[r3]
 2747 051c 181C     	 add r0,r3,#0
 2748 051e 8D49     	 ldr r1,.L71+4
 2749 0520 FFF7FEFF 	 bl __aeabi_fmul
 2750 0524 031C     	 add r3,r0,#0
 2751 0526 201C     	 add r0,r4,#0
 2752 0528 191C     	 add r1,r3,#0
 2753 052a FFF7FEFF 	 bl __aeabi_fadd
 2754 052e 031C     	 add r3,r0,#0
 2755 0530 181C     	 add r0,r3,#0
 2756 0532 8D49     	 ldr r1,.L71+24
 2757 0534 FFF7FEFF 	 bl __aeabi_fdiv
 2758 0538 031C     	 add r3,r0,#0
 2759 053a 1A1C     	 add r2,r3,#0
 2760 053c 8B4B     	 ldr r3,.L71+28
 2761 053e 1A60     	 str r2,[r3]
 856:../main.c     ****     	d0=1-d1-d2;
 2762              	 .loc 1 856 0
 2763 0540 864B     	 ldr r3,.L71+12
 2764 0542 1B68     	 ldr r3,[r3]
 2765 0544 FE20     	 mov r0,#254
 2766 0546 8005     	 lsl r0,r0,#22
 2767 0548 191C     	 add r1,r3,#0
 2768 054a FFF7FEFF 	 bl __aeabi_fsub
 2769 054e 031C     	 add r3,r0,#0
 2770 0550 1A1C     	 add r2,r3,#0
 2771 0552 864B     	 ldr r3,.L71+28
 2772 0554 1B68     	 ldr r3,[r3]
 2773 0556 101C     	 add r0,r2,#0
 2774 0558 191C     	 add r1,r3,#0
 2775 055a FFF7FEFF 	 bl __aeabi_fsub
 2776 055e 031C     	 add r3,r0,#0
 2777 0560 1A1C     	 add r2,r3,#0
 2778 0562 834B     	 ldr r3,.L71+32
 2779 0564 1A60     	 str r2,[r3]
 857:../main.c     ****     	da=(uint16_t)(((d0/2)+d1+d2)*10000);
 2780              	 .loc 1 857 0
 2781 0566 824B     	 ldr r3,.L71+32
 2782 0568 1B68     	 ldr r3,[r3]
 2783 056a 181C     	 add r0,r3,#0
 2784 056c 8021     	 mov r1,#128
 2785 056e C905     	 lsl r1,r1,#23
 2786 0570 FFF7FEFF 	 bl __aeabi_fdiv
 2787 0574 031C     	 add r3,r0,#0
 2788 0576 1A1C     	 add r2,r3,#0
 2789 0578 784B     	 ldr r3,.L71+12
 2790 057a 1B68     	 ldr r3,[r3]
 2791 057c 101C     	 add r0,r2,#0
 2792 057e 191C     	 add r1,r3,#0
 2793 0580 FFF7FEFF 	 bl __aeabi_fadd
 2794 0584 031C     	 add r3,r0,#0
 2795 0586 1A1C     	 add r2,r3,#0
 2796 0588 784B     	 ldr r3,.L71+28
 2797 058a 1B68     	 ldr r3,[r3]
 2798 058c 101C     	 add r0,r2,#0
 2799 058e 191C     	 add r1,r3,#0
 2800 0590 FFF7FEFF 	 bl __aeabi_fadd
 2801 0594 031C     	 add r3,r0,#0
 2802 0596 181C     	 add r0,r3,#0
 2803 0598 7649     	 ldr r1,.L71+36
 2804 059a FFF7FEFF 	 bl __aeabi_fmul
 2805 059e 031C     	 add r3,r0,#0
 2806 05a0 181C     	 add r0,r3,#0
 2807 05a2 FFF7FEFF 	 bl __aeabi_f2uiz
 2808 05a6 031C     	 mov r3,r0
 2809 05a8 9AB2     	 uxth r2,r3
 2810 05aa 734B     	 ldr r3,.L71+40
 2811 05ac 1A80     	 strh r2,[r3]
 858:../main.c     ****     	db=(uint16_t)(((d0/2)+d1)*10000);
 2812              	 .loc 1 858 0
 2813 05ae 704B     	 ldr r3,.L71+32
 2814 05b0 1B68     	 ldr r3,[r3]
 2815 05b2 181C     	 add r0,r3,#0
 2816 05b4 8021     	 mov r1,#128
 2817 05b6 C905     	 lsl r1,r1,#23
 2818 05b8 FFF7FEFF 	 bl __aeabi_fdiv
 2819 05bc 031C     	 add r3,r0,#0
 2820 05be 1A1C     	 add r2,r3,#0
 2821 05c0 664B     	 ldr r3,.L71+12
 2822 05c2 1B68     	 ldr r3,[r3]
 2823 05c4 101C     	 add r0,r2,#0
 2824 05c6 191C     	 add r1,r3,#0
 2825 05c8 FFF7FEFF 	 bl __aeabi_fadd
 2826 05cc 031C     	 add r3,r0,#0
 2827 05ce 181C     	 add r0,r3,#0
 2828 05d0 6849     	 ldr r1,.L71+36
 2829 05d2 FFF7FEFF 	 bl __aeabi_fmul
 2830 05d6 031C     	 add r3,r0,#0
 2831 05d8 181C     	 add r0,r3,#0
 2832 05da FFF7FEFF 	 bl __aeabi_f2uiz
 2833 05de 031C     	 mov r3,r0
 2834 05e0 9AB2     	 uxth r2,r3
 2835 05e2 664B     	 ldr r3,.L71+44
 2836 05e4 1A80     	 strh r2,[r3]
 859:../main.c     ****     	dc=(uint16_t)((d0/2)*10000);
 2837              	 .loc 1 859 0
 2838 05e6 624B     	 ldr r3,.L71+32
 2839 05e8 1B68     	 ldr r3,[r3]
 2840 05ea 181C     	 add r0,r3,#0
 2841 05ec 8021     	 mov r1,#128
 2842 05ee C905     	 lsl r1,r1,#23
 2843 05f0 FFF7FEFF 	 bl __aeabi_fdiv
 2844 05f4 031C     	 add r3,r0,#0
 2845 05f6 181C     	 add r0,r3,#0
 2846 05f8 5E49     	 ldr r1,.L71+36
 2847 05fa FFF7FEFF 	 bl __aeabi_fmul
 2848 05fe 031C     	 add r3,r0,#0
 2849 0600 181C     	 add r0,r3,#0
 2850 0602 FFF7FEFF 	 bl __aeabi_f2uiz
 2851 0606 031C     	 mov r3,r0
 2852 0608 9AB2     	 uxth r2,r3
 2853 060a 5D4B     	 ldr r3,.L71+48
 2854 060c 1A80     	 strh r2,[r3]
 860:../main.c     ****     	break;
 2855              	 .loc 1 860 0
 2856 060e 50E1     	 b .L35
 2857              	.L61:
 861:../main.c     ****     case 5:
 862:../main.c     ****     	d1=(float)(((-3)*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2858              	 .loc 1 862 0
 2859 0610 534B     	 ldr r3,.L71+16
 2860 0612 1B68     	 ldr r3,[r3]
 2861 0614 181C     	 add r0,r3,#0
 2862 0616 5349     	 ldr r1,.L71+20
 2863 0618 FFF7FEFF 	 bl __aeabi_fmul
 2864 061c 031C     	 add r3,r0,#0
 2865 061e 1C1C     	 add r4,r3,#0
 2866 0620 4B4B     	 ldr r3,.L71
 2867 0622 1B68     	 ldr r3,[r3]
 2868 0624 181C     	 add r0,r3,#0
 2869 0626 4B49     	 ldr r1,.L71+4
 2870 0628 FFF7FEFF 	 bl __aeabi_fmul
 2871 062c 031C     	 add r3,r0,#0
 2872 062e 201C     	 add r0,r4,#0
 2873 0630 191C     	 add r1,r3,#0
 2874 0632 FFF7FEFF 	 bl __aeabi_fsub
 2875 0636 031C     	 add r3,r0,#0
 2876 0638 181C     	 add r0,r3,#0
 2877 063a 4B49     	 ldr r1,.L71+24
 2878 063c FFF7FEFF 	 bl __aeabi_fdiv
 2879 0640 031C     	 add r3,r0,#0
 2880 0642 1A1C     	 add r2,r3,#0
 2881 0644 454B     	 ldr r3,.L71+12
 2882 0646 1A60     	 str r2,[r3]
 863:../main.c     ****     	d2=(float)((3*Usalpha-sqrt_3*Usbeta)/(2*VDC));
 2883              	 .loc 1 863 0
 2884 0648 454B     	 ldr r3,.L71+16
 2885 064a 1B68     	 ldr r3,[r3]
 2886 064c 181C     	 add r0,r3,#0
 2887 064e 4E49     	 ldr r1,.L71+56
 2888 0650 FFF7FEFF 	 bl __aeabi_fmul
 2889 0654 031C     	 add r3,r0,#0
 2890 0656 1C1C     	 add r4,r3,#0
 2891 0658 3D4B     	 ldr r3,.L71
 2892 065a 1B68     	 ldr r3,[r3]
 2893 065c 181C     	 add r0,r3,#0
 2894 065e 3D49     	 ldr r1,.L71+4
 2895 0660 FFF7FEFF 	 bl __aeabi_fmul
 2896 0664 031C     	 add r3,r0,#0
 2897 0666 201C     	 add r0,r4,#0
 2898 0668 191C     	 add r1,r3,#0
 2899 066a FFF7FEFF 	 bl __aeabi_fsub
 2900 066e 031C     	 add r3,r0,#0
 2901 0670 181C     	 add r0,r3,#0
 2902 0672 3D49     	 ldr r1,.L71+24
 2903 0674 FFF7FEFF 	 bl __aeabi_fdiv
 2904 0678 031C     	 add r3,r0,#0
 2905 067a 1A1C     	 add r2,r3,#0
 2906 067c 3B4B     	 ldr r3,.L71+28
 2907 067e 1A60     	 str r2,[r3]
 864:../main.c     ****     	d0=1-d1-d2;
 2908              	 .loc 1 864 0
 2909 0680 364B     	 ldr r3,.L71+12
 2910 0682 1B68     	 ldr r3,[r3]
 2911 0684 FE20     	 mov r0,#254
 2912 0686 8005     	 lsl r0,r0,#22
 2913 0688 191C     	 add r1,r3,#0
 2914 068a FFF7FEFF 	 bl __aeabi_fsub
 2915 068e 031C     	 add r3,r0,#0
 2916 0690 1A1C     	 add r2,r3,#0
 2917 0692 364B     	 ldr r3,.L71+28
 2918 0694 1B68     	 ldr r3,[r3]
 2919 0696 101C     	 add r0,r2,#0
 2920 0698 191C     	 add r1,r3,#0
 2921 069a FFF7FEFF 	 bl __aeabi_fsub
 2922 069e 031C     	 add r3,r0,#0
 2923 06a0 1A1C     	 add r2,r3,#0
 2924 06a2 334B     	 ldr r3,.L71+32
 2925 06a4 1A60     	 str r2,[r3]
 865:../main.c     ****     	da=(uint16_t)(((d0/2)+d1)*10000);
 2926              	 .loc 1 865 0
 2927 06a6 324B     	 ldr r3,.L71+32
 2928 06a8 1B68     	 ldr r3,[r3]
 2929 06aa 181C     	 add r0,r3,#0
 2930 06ac 8021     	 mov r1,#128
 2931 06ae C905     	 lsl r1,r1,#23
 2932 06b0 FFF7FEFF 	 bl __aeabi_fdiv
 2933 06b4 031C     	 add r3,r0,#0
 2934 06b6 1A1C     	 add r2,r3,#0
 2935 06b8 284B     	 ldr r3,.L71+12
 2936 06ba 1B68     	 ldr r3,[r3]
 2937 06bc 101C     	 add r0,r2,#0
 2938 06be 191C     	 add r1,r3,#0
 2939 06c0 FFF7FEFF 	 bl __aeabi_fadd
 2940 06c4 031C     	 add r3,r0,#0
 2941 06c6 181C     	 add r0,r3,#0
 2942 06c8 2A49     	 ldr r1,.L71+36
 2943 06ca FFF7FEFF 	 bl __aeabi_fmul
 2944 06ce 031C     	 add r3,r0,#0
 2945 06d0 181C     	 add r0,r3,#0
 2946 06d2 FFF7FEFF 	 bl __aeabi_f2uiz
 2947 06d6 031C     	 mov r3,r0
 2948 06d8 9AB2     	 uxth r2,r3
 2949 06da 274B     	 ldr r3,.L71+40
 2950 06dc 1A80     	 strh r2,[r3]
 866:../main.c     ****     	db=(uint16_t)(((d0/2)+d1+d2)*10000);
 2951              	 .loc 1 866 0
 2952 06de 244B     	 ldr r3,.L71+32
 2953 06e0 1B68     	 ldr r3,[r3]
 2954 06e2 181C     	 add r0,r3,#0
 2955 06e4 8021     	 mov r1,#128
 2956 06e6 C905     	 lsl r1,r1,#23
 2957 06e8 FFF7FEFF 	 bl __aeabi_fdiv
 2958 06ec 031C     	 add r3,r0,#0
 2959 06ee 1A1C     	 add r2,r3,#0
 2960 06f0 1A4B     	 ldr r3,.L71+12
 2961 06f2 1B68     	 ldr r3,[r3]
 2962 06f4 101C     	 add r0,r2,#0
 2963 06f6 191C     	 add r1,r3,#0
 2964 06f8 FFF7FEFF 	 bl __aeabi_fadd
 2965 06fc 031C     	 add r3,r0,#0
 2966 06fe 1A1C     	 add r2,r3,#0
 2967 0700 1A4B     	 ldr r3,.L71+28
 2968 0702 1B68     	 ldr r3,[r3]
 2969 0704 101C     	 add r0,r2,#0
 2970 0706 191C     	 add r1,r3,#0
 2971 0708 FFF7FEFF 	 bl __aeabi_fadd
 2972 070c 031C     	 add r3,r0,#0
 2973 070e 181C     	 add r0,r3,#0
 2974 0710 1849     	 ldr r1,.L71+36
 2975 0712 FFF7FEFF 	 bl __aeabi_fmul
 2976 0716 031C     	 add r3,r0,#0
 2977 0718 181C     	 add r0,r3,#0
 2978 071a FFF7FEFF 	 bl __aeabi_f2uiz
 2979 071e 031C     	 mov r3,r0
 2980 0720 9AB2     	 uxth r2,r3
 2981 0722 164B     	 ldr r3,.L71+44
 2982 0724 1A80     	 strh r2,[r3]
 867:../main.c     ****     	dc=(uint16_t)((d0/2)*10000);
 2983              	 .loc 1 867 0
 2984 0726 124B     	 ldr r3,.L71+32
 2985 0728 1B68     	 ldr r3,[r3]
 2986 072a 181C     	 add r0,r3,#0
 2987 072c 8021     	 mov r1,#128
 2988 072e C905     	 lsl r1,r1,#23
 2989 0730 FFF7FEFF 	 bl __aeabi_fdiv
 2990 0734 031C     	 add r3,r0,#0
 2991 0736 181C     	 add r0,r3,#0
 2992 0738 0E49     	 ldr r1,.L71+36
 2993 073a FFF7FEFF 	 bl __aeabi_fmul
 2994 073e 031C     	 add r3,r0,#0
 2995 0740 181C     	 add r0,r3,#0
 2996 0742 FFF7FEFF 	 bl __aeabi_f2uiz
 2997 0746 031C     	 mov r3,r0
 2998 0748 9AB2     	 uxth r2,r3
 2999 074a 0D4B     	 ldr r3,.L71+48
 3000 074c 1A80     	 strh r2,[r3]
 868:../main.c     ****     	break;
 3001              	 .loc 1 868 0
 3002 074e B0E0     	 b .L35
 3003              	.L72:
 3004              	 .align 2
 3005              	.L71:
 3006 0750 00000000 	 .word Usbeta
 3007 0754 D0B3DD3F 	 .word 1071494096
 3008 0758 0000C041 	 .word 1103101952
 3009 075c 00000000 	 .word d1
 3010 0760 00000000 	 .word Usalpha
 3011 0764 000040C0 	 .word -1069547520
 3012 0768 00004042 	 .word 1111490560
 3013 076c 00000000 	 .word d2
 3014 0770 00000000 	 .word d0
 3015 0774 00401C46 	 .word 1176256512
 3016 0778 00000000 	 .word da
 3017 077c 00000000 	 .word db
 3018 0780 00000000 	 .word dc
 3019 0784 D0B3DDBF 	 .word -1075989552
 3020 0788 00004040 	 .word 1077936128
 3021              	.L62:
 869:../main.c     ****     case 6:
 870:../main.c     ****         d1=(float)((3*Usalpha+sqrt_3*Usbeta)/(2*VDC));
 3022              	 .loc 1 870 0
 3023 078c 4A4B     	 ldr r3,.L73
 3024 078e 1B68     	 ldr r3,[r3]
 3025 0790 181C     	 add r0,r3,#0
 3026 0792 4A49     	 ldr r1,.L73+4
 3027 0794 FFF7FEFF 	 bl __aeabi_fmul
 3028 0798 031C     	 add r3,r0,#0
 3029 079a 1C1C     	 add r4,r3,#0
 3030 079c 484B     	 ldr r3,.L73+8
 3031 079e 1B68     	 ldr r3,[r3]
 3032 07a0 181C     	 add r0,r3,#0
 3033 07a2 4849     	 ldr r1,.L73+12
 3034 07a4 FFF7FEFF 	 bl __aeabi_fmul
 3035 07a8 031C     	 add r3,r0,#0
 3036 07aa 201C     	 add r0,r4,#0
 3037 07ac 191C     	 add r1,r3,#0
 3038 07ae FFF7FEFF 	 bl __aeabi_fadd
 3039 07b2 031C     	 add r3,r0,#0
 3040 07b4 181C     	 add r0,r3,#0
 3041 07b6 4449     	 ldr r1,.L73+16
 3042 07b8 FFF7FEFF 	 bl __aeabi_fdiv
 3043 07bc 031C     	 add r3,r0,#0
 3044 07be 1A1C     	 add r2,r3,#0
 3045 07c0 424B     	 ldr r3,.L73+20
 3046 07c2 1A60     	 str r2,[r3]
 871:../main.c     ****         d2=(float)((-3)*Usbeta/VDC);\
 3047              	 .loc 1 871 0
 3048 07c4 3E4B     	 ldr r3,.L73+8
 3049 07c6 1B68     	 ldr r3,[r3]
 3050 07c8 181C     	 add r0,r3,#0
 3051 07ca 4149     	 ldr r1,.L73+24
 3052 07cc FFF7FEFF 	 bl __aeabi_fmul
 3053 07d0 031C     	 add r3,r0,#0
 3054 07d2 181C     	 add r0,r3,#0
 3055 07d4 3F49     	 ldr r1,.L73+28
 3056 07d6 FFF7FEFF 	 bl __aeabi_fdiv
 3057 07da 031C     	 add r3,r0,#0
 3058 07dc 1A1C     	 add r2,r3,#0
 3059 07de 3E4B     	 ldr r3,.L73+32
 3060 07e0 1A60     	 str r2,[r3]
 872:../main.c     ****         d0=1-d1-d2;
 3061              	 .loc 1 872 0
 3062 07e2 3A4B     	 ldr r3,.L73+20
 3063 07e4 1B68     	 ldr r3,[r3]
 3064 07e6 FE20     	 mov r0,#254
 3065 07e8 8005     	 lsl r0,r0,#22
 3066 07ea 191C     	 add r1,r3,#0
 3067 07ec FFF7FEFF 	 bl __aeabi_fsub
 3068 07f0 031C     	 add r3,r0,#0
 3069 07f2 1A1C     	 add r2,r3,#0
 3070 07f4 384B     	 ldr r3,.L73+32
 3071 07f6 1B68     	 ldr r3,[r3]
 3072 07f8 101C     	 add r0,r2,#0
 3073 07fa 191C     	 add r1,r3,#0
 3074 07fc FFF7FEFF 	 bl __aeabi_fsub
 3075 0800 031C     	 add r3,r0,#0
 3076 0802 1A1C     	 add r2,r3,#0
 3077 0804 354B     	 ldr r3,.L73+36
 3078 0806 1A60     	 str r2,[r3]
 873:../main.c     ****         da=(uint16_t)((d0/2)*10000);
 3079              	 .loc 1 873 0
 3080 0808 344B     	 ldr r3,.L73+36
 3081 080a 1B68     	 ldr r3,[r3]
 3082 080c 181C     	 add r0,r3,#0
 3083 080e 8021     	 mov r1,#128
 3084 0810 C905     	 lsl r1,r1,#23
 3085 0812 FFF7FEFF 	 bl __aeabi_fdiv
 3086 0816 031C     	 add r3,r0,#0
 3087 0818 181C     	 add r0,r3,#0
 3088 081a 3149     	 ldr r1,.L73+40
 3089 081c FFF7FEFF 	 bl __aeabi_fmul
 3090 0820 031C     	 add r3,r0,#0
 3091 0822 181C     	 add r0,r3,#0
 3092 0824 FFF7FEFF 	 bl __aeabi_f2uiz
 3093 0828 031C     	 mov r3,r0
 3094 082a 9AB2     	 uxth r2,r3
 3095 082c 2D4B     	 ldr r3,.L73+44
 3096 082e 1A80     	 strh r2,[r3]
 874:../main.c     ****         db=(uint16_t)(((d0/2)+d1+d2)*10000);
 3097              	 .loc 1 874 0
 3098 0830 2A4B     	 ldr r3,.L73+36
 3099 0832 1B68     	 ldr r3,[r3]
 3100 0834 181C     	 add r0,r3,#0
 3101 0836 8021     	 mov r1,#128
 3102 0838 C905     	 lsl r1,r1,#23
 3103 083a FFF7FEFF 	 bl __aeabi_fdiv
 3104 083e 031C     	 add r3,r0,#0
 3105 0840 1A1C     	 add r2,r3,#0
 3106 0842 224B     	 ldr r3,.L73+20
 3107 0844 1B68     	 ldr r3,[r3]
 3108 0846 101C     	 add r0,r2,#0
 3109 0848 191C     	 add r1,r3,#0
 3110 084a FFF7FEFF 	 bl __aeabi_fadd
 3111 084e 031C     	 add r3,r0,#0
 3112 0850 1A1C     	 add r2,r3,#0
 3113 0852 214B     	 ldr r3,.L73+32
 3114 0854 1B68     	 ldr r3,[r3]
 3115 0856 101C     	 add r0,r2,#0
 3116 0858 191C     	 add r1,r3,#0
 3117 085a FFF7FEFF 	 bl __aeabi_fadd
 3118 085e 031C     	 add r3,r0,#0
 3119 0860 181C     	 add r0,r3,#0
 3120 0862 1F49     	 ldr r1,.L73+40
 3121 0864 FFF7FEFF 	 bl __aeabi_fmul
 3122 0868 031C     	 add r3,r0,#0
 3123 086a 181C     	 add r0,r3,#0
 3124 086c FFF7FEFF 	 bl __aeabi_f2uiz
 3125 0870 031C     	 mov r3,r0
 3126 0872 9AB2     	 uxth r2,r3
 3127 0874 1C4B     	 ldr r3,.L73+48
 3128 0876 1A80     	 strh r2,[r3]
 875:../main.c     ****         dc=(uint16_t)(((d0/2)+d1)*10000);
 3129              	 .loc 1 875 0
 3130 0878 184B     	 ldr r3,.L73+36
 3131 087a 1B68     	 ldr r3,[r3]
 3132 087c 181C     	 add r0,r3,#0
 3133 087e 8021     	 mov r1,#128
 3134 0880 C905     	 lsl r1,r1,#23
 3135 0882 FFF7FEFF 	 bl __aeabi_fdiv
 3136 0886 031C     	 add r3,r0,#0
 3137 0888 1A1C     	 add r2,r3,#0
 3138 088a 104B     	 ldr r3,.L73+20
 3139 088c 1B68     	 ldr r3,[r3]
 3140 088e 101C     	 add r0,r2,#0
 3141 0890 191C     	 add r1,r3,#0
 3142 0892 FFF7FEFF 	 bl __aeabi_fadd
 3143 0896 031C     	 add r3,r0,#0
 3144 0898 181C     	 add r0,r3,#0
 3145 089a 1149     	 ldr r1,.L73+40
 3146 089c FFF7FEFF 	 bl __aeabi_fmul
 3147 08a0 031C     	 add r3,r0,#0
 3148 08a2 181C     	 add r0,r3,#0
 3149 08a4 FFF7FEFF 	 bl __aeabi_f2uiz
 3150 08a8 031C     	 mov r3,r0
 3151 08aa 9AB2     	 uxth r2,r3
 3152 08ac 0F4B     	 ldr r3,.L73+52
 3153 08ae 1A80     	 strh r2,[r3]
 876:../main.c     ****         break;
 3154              	 .loc 1 876 0
 3155 08b0 C046     	 mov r8,r8
 3156              	.L35:
 877:../main.c     ****     }
 878:../main.c     **** }
 3157              	 .loc 1 878 0
 3158 08b2 BD46     	 mov sp,r7
 3159 08b4 05B0     	 add sp,sp,#20
 3160              	 
 3161 08b6 90BD     	 pop {r4,r7,pc}
 3162              	.L74:
 3163              	 .align 2
 3164              	.L73:
 3165 08b8 00000000 	 .word Usalpha
 3166 08bc 00004040 	 .word 1077936128
 3167 08c0 00000000 	 .word Usbeta
 3168 08c4 D0B3DD3F 	 .word 1071494096
 3169 08c8 00004042 	 .word 1111490560
 3170 08cc 00000000 	 .word d1
 3171 08d0 000040C0 	 .word -1069547520
 3172 08d4 0000C041 	 .word 1103101952
 3173 08d8 00000000 	 .word d2
 3174 08dc 00000000 	 .word d0
 3175 08e0 00401C46 	 .word 1176256512
 3176 08e4 00000000 	 .word da
 3177 08e8 00000000 	 .word db
 3178 08ec 00000000 	 .word dc
 3179              	 .cfi_endproc
 3180              	.LFE473:
 3182              	 .global __aeabi_f2iz
 3183              	 .section .text.SinCosCheck,"ax",%progbits
 3184              	 .align 2
 3185              	 .global SinCosCheck
 3186              	 .code 16
 3187              	 .thumb_func
 3189              	SinCosCheck:
 3190              	.LFB474:
 879:../main.c     **** /*
 880:../main.c     ****  Function:Tinh toan sine, cosine cua goc dong co quay, check xem goc dong co quay >2pi dua ve trong
 881:../main.c     ****  Input:Theta
 882:../main.c     ****  Output:SineTheta, CosineTheta
 883:../main.c     ****  */
 884:../main.c     **** void SinCosCheck(void){
 3191              	 .loc 1 884 0
 3192              	 .cfi_startproc
 3193 0000 90B5     	 push {r4,r7,lr}
 3194              	.LCFI24:
 3195              	 .cfi_def_cfa_offset 12
 3196              	 .cfi_offset 4,-12
 3197              	 .cfi_offset 7,-8
 3198              	 .cfi_offset 14,-4
 3199 0002 87B0     	 sub sp,sp,#28
 3200              	.LCFI25:
 3201              	 .cfi_def_cfa_offset 40
 3202 0004 00AF     	 add r7,sp,#0
 3203              	.LCFI26:
 3204              	 .cfi_def_cfa_register 7
 885:../main.c     ****         int16_t y0_Index;
 886:../main.c     ****         int16_t y0_IndexNext;
 887:../main.c     ****         float x0, y0, y1, temp;
 888:../main.c     **** 	    y0_Index = (int16_t)((float)(Theta * (float)((float)256 / (2.0f*PI))));
 3205              	 .loc 1 888 0
 3206 0006 474B     	 ldr r3,.L78
 3207 0008 1B68     	 ldr r3,[r3]
 3208 000a 181C     	 add r0,r3,#0
 3209 000c 4649     	 ldr r1,.L78+4
 3210 000e FFF7FEFF 	 bl __aeabi_fmul
 3211 0012 031C     	 add r3,r0,#0
 3212 0014 1622     	 mov r2,#22
 3213 0016 BC18     	 add r4,r7,r2
 3214 0018 181C     	 add r0,r3,#0
 3215 001a FFF7FEFF 	 bl __aeabi_f2iz
 3216 001e 031C     	 mov r3,r0
 3217 0020 2380     	 strh r3,[r4]
 889:../main.c     **** 	    y0_IndexNext = y0_Index + 1;
 3218              	 .loc 1 889 0
 3219 0022 1623     	 mov r3,#22
 3220 0024 FB18     	 add r3,r7,r3
 3221 0026 1B88     	 ldrh r3,[r3]
 3222 0028 0133     	 add r3,r3,#1
 3223 002a 9AB2     	 uxth r2,r3
 3224 002c 1423     	 mov r3,#20
 3225 002e FB18     	 add r3,r7,r3
 3226 0030 1A80     	 strh r2,[r3]
 890:../main.c     **** 
 891:../main.c     **** 	    if(255 <= y0_Index)
 3227              	 .loc 1 891 0
 3228 0032 1623     	 mov r3,#22
 3229 0034 FB18     	 add r3,r7,r3
 3230 0036 0022     	 mov r2,#0
 3231 0038 9B5E     	 ldrsh r3,[r3,r2]
 3232 003a FE2B     	 cmp r3,#254
 3233 003c 08DD     	 ble .L76
 892:../main.c     **** 	    {
 893:../main.c     **** 	        y0_Index = 255;
 3234              	 .loc 1 893 0
 3235 003e 1623     	 mov r3,#22
 3236 0040 FB18     	 add r3,r7,r3
 3237 0042 FF22     	 mov r2,#255
 3238 0044 1A80     	 strh r2,[r3]
 894:../main.c     **** 	        y0_IndexNext = 0;
 3239              	 .loc 1 894 0
 3240 0046 1423     	 mov r3,#20
 3241 0048 FB18     	 add r3,r7,r3
 3242 004a 0022     	 mov r2,#0
 3243 004c 1A80     	 strh r2,[r3]
 3244 004e 07E0     	 b .L77
 3245              	.L76:
 895:../main.c     **** 	    }
 896:../main.c     **** 	    else
 897:../main.c     **** 	    {
 898:../main.c     **** 	        y0_Index = 0;
 3246              	 .loc 1 898 0
 3247 0050 1623     	 mov r3,#22
 3248 0052 FB18     	 add r3,r7,r3
 3249 0054 0022     	 mov r2,#0
 3250 0056 1A80     	 strh r2,[r3]
 899:../main.c     **** 	        y0_IndexNext = 1;
 3251              	 .loc 1 899 0
 3252 0058 1423     	 mov r3,#20
 3253 005a FB18     	 add r3,r7,r3
 3254 005c 0122     	 mov r2,#1
 3255 005e 1A80     	 strh r2,[r3]
 3256              	.L77:
 900:../main.c     **** 	    }
 901:../main.c     **** 	    x0 = ((float)y0_Index * (float)((2.0f*PI) / (float)256));
 3257              	 .loc 1 901 0
 3258 0060 1623     	 mov r3,#22
 3259 0062 FB18     	 add r3,r7,r3
 3260 0064 0022     	 mov r2,#0
 3261 0066 9B5E     	 ldrsh r3,[r3,r2]
 3262 0068 181C     	 mov r0,r3
 3263 006a FFF7FEFF 	 bl __aeabi_i2f
 3264 006e 031C     	 add r3,r0,#0
 3265 0070 181C     	 add r0,r3,#0
 3266 0072 2E49     	 ldr r1,.L78+8
 3267 0074 FFF7FEFF 	 bl __aeabi_fmul
 3268 0078 031C     	 add r3,r0,#0
 3269 007a 3B61     	 str r3,[r7,#16]
 902:../main.c     **** 		temp = ((Theta - x0) * (float)((float)256 / (2.0f*PI)));
 3270              	 .loc 1 902 0
 3271 007c 294B     	 ldr r3,.L78
 3272 007e 1B68     	 ldr r3,[r3]
 3273 0080 181C     	 add r0,r3,#0
 3274 0082 3969     	 ldr r1,[r7,#16]
 3275 0084 FFF7FEFF 	 bl __aeabi_fsub
 3276 0088 031C     	 add r3,r0,#0
 3277 008a 181C     	 add r0,r3,#0
 3278 008c 2649     	 ldr r1,.L78+4
 3279 008e FFF7FEFF 	 bl __aeabi_fmul
 3280 0092 031C     	 add r3,r0,#0
 3281 0094 FB60     	 str r3,[r7,#12]
 903:../main.c     **** 
 904:../main.c     **** 		// Find Sine
 905:../main.c     **** 	    y0 = SineTable[y0_Index];
 3282              	 .loc 1 905 0
 3283 0096 1623     	 mov r3,#22
 3284 0098 FB18     	 add r3,r7,r3
 3285 009a 0022     	 mov r2,#0
 3286 009c 9A5E     	 ldrsh r2,[r3,r2]
 3287 009e 244B     	 ldr r3,.L78+12
 3288 00a0 9200     	 lsl r2,r2,#2
 3289 00a2 D358     	 ldr r3,[r2,r3]
 3290 00a4 BB60     	 str r3,[r7,#8]
 906:../main.c     **** 	    y1 = SineTable[y0_IndexNext];
 3291              	 .loc 1 906 0
 3292 00a6 1423     	 mov r3,#20
 3293 00a8 FB18     	 add r3,r7,r3
 3294 00aa 0022     	 mov r2,#0
 3295 00ac 9A5E     	 ldrsh r2,[r3,r2]
 3296 00ae 204B     	 ldr r3,.L78+12
 3297 00b0 9200     	 lsl r2,r2,#2
 3298 00b2 D358     	 ldr r3,[r2,r3]
 3299 00b4 7B60     	 str r3,[r7,#4]
 907:../main.c     **** 	    SineTheta = y0 + ((y1 - y0)*temp);
 3300              	 .loc 1 907 0
 3301 00b6 7868     	 ldr r0,[r7,#4]
 3302 00b8 B968     	 ldr r1,[r7,#8]
 3303 00ba FFF7FEFF 	 bl __aeabi_fsub
 3304 00be 031C     	 add r3,r0,#0
 3305 00c0 181C     	 add r0,r3,#0
 3306 00c2 F968     	 ldr r1,[r7,#12]
 3307 00c4 FFF7FEFF 	 bl __aeabi_fmul
 3308 00c8 031C     	 add r3,r0,#0
 3309 00ca 181C     	 add r0,r3,#0
 3310 00cc B968     	 ldr r1,[r7,#8]
 3311 00ce FFF7FEFF 	 bl __aeabi_fadd
 3312 00d2 031C     	 add r3,r0,#0
 3313 00d4 1A1C     	 add r2,r3,#0
 3314 00d6 174B     	 ldr r3,.L78+16
 3315 00d8 1A60     	 str r2,[r3]
 908:../main.c     **** 
 909:../main.c     **** 	    // Find Cosine
 910:../main.c     **** 	    y0 = CosineTable[y0_Index];
 3316              	 .loc 1 910 0
 3317 00da 1623     	 mov r3,#22
 3318 00dc FB18     	 add r3,r7,r3
 3319 00de 0022     	 mov r2,#0
 3320 00e0 9A5E     	 ldrsh r2,[r3,r2]
 3321 00e2 154B     	 ldr r3,.L78+20
 3322 00e4 9200     	 lsl r2,r2,#2
 3323 00e6 D358     	 ldr r3,[r2,r3]
 3324 00e8 BB60     	 str r3,[r7,#8]
 911:../main.c     **** 	    y1 = CosineTable[y0_IndexNext];
 3325              	 .loc 1 911 0
 3326 00ea 1423     	 mov r3,#20
 3327 00ec FB18     	 add r3,r7,r3
 3328 00ee 0022     	 mov r2,#0
 3329 00f0 9A5E     	 ldrsh r2,[r3,r2]
 3330 00f2 114B     	 ldr r3,.L78+20
 3331 00f4 9200     	 lsl r2,r2,#2
 3332 00f6 D358     	 ldr r3,[r2,r3]
 3333 00f8 7B60     	 str r3,[r7,#4]
 912:../main.c     **** 	    CosineTheta = y0 + ((y1 - y0)*temp);
 3334              	 .loc 1 912 0
 3335 00fa 7868     	 ldr r0,[r7,#4]
 3336 00fc B968     	 ldr r1,[r7,#8]
 3337 00fe FFF7FEFF 	 bl __aeabi_fsub
 3338 0102 031C     	 add r3,r0,#0
 3339 0104 181C     	 add r0,r3,#0
 3340 0106 F968     	 ldr r1,[r7,#12]
 3341 0108 FFF7FEFF 	 bl __aeabi_fmul
 3342 010c 031C     	 add r3,r0,#0
 3343 010e 181C     	 add r0,r3,#0
 3344 0110 B968     	 ldr r1,[r7,#8]
 3345 0112 FFF7FEFF 	 bl __aeabi_fadd
 3346 0116 031C     	 add r3,r0,#0
 3347 0118 1A1C     	 add r2,r3,#0
 3348 011a 084B     	 ldr r3,.L78+24
 3349 011c 1A60     	 str r2,[r3]
 913:../main.c     **** }
 3350              	 .loc 1 913 0
 3351 011e BD46     	 mov sp,r7
 3352 0120 07B0     	 add sp,sp,#28
 3353              	 
 3354 0122 90BD     	 pop {r4,r7,pc}
 3355              	.L79:
 3356              	 .align 2
 3357              	.L78:
 3358 0124 00000000 	 .word Theta
 3359 0128 86F92242 	 .word 1109588358
 3360 012c D80FC93C 	 .word 1019809752
 3361 0130 00000000 	 .word SineTable
 3362 0134 00000000 	 .word SineTheta
 3363 0138 00000000 	 .word CosineTable
 3364 013c 00000000 	 .word CosineTheta
 3365              	 .cfi_endproc
 3366              	.LFE474:
 3368              	 .section .text.LoopcontrolTask,"ax",%progbits
 3369              	 .align 2
 3370              	 .global LoopcontrolTask
 3371              	 .code 16
 3372              	 .thumb_func
 3374              	LoopcontrolTask:
 3375              	.LFB475:
 914:../main.c     **** /*
 915:../main.c     ****  Function:Reset mot so bien khi thay doi tu openloop sang closeloop va khi bat dau vao openloop. Th
 916:../main.c     ****  dung cho thuat toan SVM ( openloop va closeloop).
 917:../main.c     ****  */
 918:../main.c     **** void LoopcontrolTask( void )
 919:../main.c     **** {
 3376              	 .loc 1 919 0
 3377              	 .cfi_startproc
 3378 0000 80B5     	 push {r7,lr}
 3379              	.LCFI27:
 3380              	 .cfi_def_cfa_offset 8
 3381              	 .cfi_offset 7,-8
 3382              	 .cfi_offset 14,-4
 3383 0002 00AF     	 add r7,sp,#0
 3384              	.LCFI28:
 3385              	 .cfi_def_cfa_register 7
 920:../main.c     ****     if( OpenLoop==1 )
 3386              	 .loc 1 920 0
 3387 0004 184B     	 ldr r3,.L85
 3388 0006 1B88     	 ldrh r3,[r3]
 3389 0008 012B     	 cmp r3,#1
 3390 000a 17D1     	 bne .L81
 921:../main.c     ****     {
 922:../main.c     ****         if( ChangeMode ==1)
 3391              	 .loc 1 922 0
 3392 000c 174B     	 ldr r3,.L85+4
 3393 000e 1B88     	 ldrh r3,[r3]
 3394 0010 012B     	 cmp r3,#1
 3395 0012 0BD1     	 bne .L82
 923:../main.c     ****         {
 924:../main.c     ****             ChangeMode = 0;
 3396              	 .loc 1 924 0
 3397 0014 154B     	 ldr r3,.L85+4
 3398 0016 0022     	 mov r2,#0
 3399 0018 1A80     	 strh r2,[r3]
 925:../main.c     ****             IsqRef = 0;
 3400              	 .loc 1 925 0
 3401 001a 154B     	 ldr r3,.L85+8
 3402 001c 0022     	 mov r2,#0
 3403 001e 1A60     	 str r2,[r3]
 926:../main.c     ****             Startup_Lock_Count = 0;
 3404              	 .loc 1 926 0
 3405 0020 144B     	 ldr r3,.L85+12
 3406 0022 0022     	 mov r2,#0
 3407 0024 1A80     	 strh r2,[r3]
 927:../main.c     ****             Startup_Ramp_Angle_Rads_Per_Sec = 0;
 3408              	 .loc 1 927 0
 3409 0026 144B     	 ldr r3,.L85+16
 3410 0028 0022     	 mov r2,#0
 3411 002a 1A60     	 str r2,[r3]
 3412              	.L82:
 928:../main.c     ****         }
 929:../main.c     ****         IsqRef = IsqRef_OPENLOOP;
 3413              	 .loc 1 929 0
 3414 002c 104B     	 ldr r3,.L85+8
 3415 002e 134A     	 ldr r2,.L85+20
 3416 0030 1A60     	 str r2,[r3]
 930:../main.c     ****         UsqCal();
 3417              	 .loc 1 930 0
 3418 0032 FFF7FEFF 	 bl UsqCal
 931:../main.c     ****         UsdCal();
 3419              	 .loc 1 931 0
 3420 0036 FFF7FEFF 	 bl UsdCal
 3421 003a 13E0     	 b .L80
 3422              	.L81:
 932:../main.c     ****     }
 933:../main.c     ****     else
 934:../main.c     ****     {
 935:../main.c     ****         if( ChangeMode==1 )
 3423              	 .loc 1 935 0
 3424 003c 0B4B     	 ldr r3,.L85+4
 3425 003e 1B88     	 ldrh r3,[r3]
 3426 0040 012B     	 cmp r3,#1
 3427 0042 05D1     	 bne .L84
 936:../main.c     ****         {
 937:../main.c     ****             ChangeMode = 0;
 3428              	 .loc 1 937 0
 3429 0044 094B     	 ldr r3,.L85+4
 3430 0046 0022     	 mov r2,#0
 3431 0048 1A80     	 strh r2,[r3]
 938:../main.c     ****             SpeedRef = END_SPEED_RADS_PER_SEC_ELEC;
 3432              	 .loc 1 938 0
 3433 004a 0D4B     	 ldr r3,.L85+24
 3434 004c 0D4A     	 ldr r2,.L85+28
 3435 004e 1A60     	 str r2,[r3]
 3436              	.L84:
 939:../main.c     ****         }
 940:../main.c     ****         SpeedMea = SpeedMea1;
 3437              	 .loc 1 940 0
 3438 0050 0D4B     	 ldr r3,.L85+32
 3439 0052 1A68     	 ldr r2,[r3]
 3440 0054 0D4B     	 ldr r3,.L85+36
 3441 0056 1A60     	 str r2,[r3]
 941:../main.c     ****         IsqRefCal();
 3442              	 .loc 1 941 0
 3443 0058 FFF7FEFF 	 bl IsqRefCal
 942:../main.c     ****         UsqCal();
 3444              	 .loc 1 942 0
 3445 005c FFF7FEFF 	 bl UsqCal
 943:../main.c     ****         UsdCal();
 3446              	 .loc 1 943 0
 3447 0060 FFF7FEFF 	 bl UsdCal
 3448              	.L80:
 944:../main.c     ****     }
 945:../main.c     **** }
 3449              	 .loc 1 945 0
 3450 0064 BD46     	 mov sp,r7
 3451              	 
 3452 0066 80BD     	 pop {r7,pc}
 3453              	.L86:
 3454              	 .align 2
 3455              	.L85:
 3456 0068 00000000 	 .word OpenLoop
 3457 006c 00000000 	 .word ChangeMode
 3458 0070 00000000 	 .word IsqRef
 3459 0074 00000000 	 .word Startup_Lock_Count
 3460 0078 00000000 	 .word Startup_Ramp_Angle_Rads_Per_Sec
 3461 007c 9A99993E 	 .word 1050253722
 3462 0080 00000000 	 .word SpeedRef
 3463 0084 84705142 	 .word 1112633476
 3464 0088 00000000 	 .word SpeedMea1
 3465 008c 00000000 	 .word SpeedMea
 3466              	 .cfi_endproc
 3467              	.LFE475:
 3469              	 .global __aeabi_fcmplt
 3470              	 .global __aeabi_fcmpgt
 3471              	 .section .text.WrapFrom0To2Pi,"ax",%progbits
 3472              	 .align 2
 3473              	 .global WrapFrom0To2Pi
 3474              	 .code 16
 3475              	 .thumb_func
 3477              	WrapFrom0To2Pi:
 3478              	.LFB476:
 946:../main.c     **** /*
 947:../main.c     ****  Function: Dua goc dong co ve gia tri nam trong dai 0 den 2pi
 948:../main.c     ****  */
 949:../main.c     **** float WrapFrom0To2Pi(float raw){
 3479              	 .loc 1 949 0
 3480              	 .cfi_startproc
 3481 0000 80B5     	 push {r7,lr}
 3482              	.LCFI29:
 3483              	 .cfi_def_cfa_offset 8
 3484              	 .cfi_offset 7,-8
 3485              	 .cfi_offset 14,-4
 3486 0002 84B0     	 sub sp,sp,#16
 3487              	.LCFI30:
 3488              	 .cfi_def_cfa_offset 24
 3489 0004 00AF     	 add r7,sp,#0
 3490              	.LCFI31:
 3491              	 .cfi_def_cfa_register 7
 3492 0006 7860     	 str r0,[r7,#4]
 950:../main.c     ****     float tmp;
 951:../main.c     **** 
 952:../main.c     ****     if(0.0 > raw)
 3493              	 .loc 1 952 0
 3494 0008 7868     	 ldr r0,[r7,#4]
 3495 000a 0021     	 mov r1,#0
 3496 000c FFF7FEFF 	 bl __aeabi_fcmplt
 3497 0010 031E     	 sub r3,r0,#0
 3498 0012 06D0     	 beq .L96
 953:../main.c     ****     {
 954:../main.c     ****         tmp = raw + (float)(2.0f*(float)M_PI);
 3499              	 .loc 1 954 0
 3500 0014 7868     	 ldr r0,[r7,#4]
 3501 0016 0D49     	 ldr r1,.L98
 3502 0018 FFF7FEFF 	 bl __aeabi_fadd
 3503 001c 031C     	 add r3,r0,#0
 3504 001e FB60     	 str r3,[r7,#12]
 3505 0020 0EE0     	 b .L90
 3506              	.L96:
 955:../main.c     ****     }
 956:../main.c     ****     else if((float)(2.0f*(float)M_PI) < raw)
 3507              	 .loc 1 956 0
 3508 0022 7868     	 ldr r0,[r7,#4]
 3509 0024 0949     	 ldr r1,.L98
 3510 0026 FFF7FEFF 	 bl __aeabi_fcmpgt
 3511 002a 031E     	 sub r3,r0,#0
 3512 002c 06D0     	 beq .L97
 957:../main.c     ****     {
 958:../main.c     ****         tmp = raw - (float)(2.0f*(float)M_PI);
 3513              	 .loc 1 958 0
 3514 002e 7868     	 ldr r0,[r7,#4]
 3515 0030 0649     	 ldr r1,.L98
 3516 0032 FFF7FEFF 	 bl __aeabi_fsub
 3517 0036 031C     	 add r3,r0,#0
 3518 0038 FB60     	 str r3,[r7,#12]
 3519 003a 01E0     	 b .L90
 3520              	.L97:
 959:../main.c     ****     }
 960:../main.c     ****     else
 961:../main.c     ****     {
 962:../main.c     ****         tmp = raw;
 3521              	 .loc 1 962 0
 3522 003c 7B68     	 ldr r3,[r7,#4]
 3523 003e FB60     	 str r3,[r7,#12]
 3524              	.L90:
 963:../main.c     ****     }
 964:../main.c     **** 
 965:../main.c     ****     return tmp;
 3525              	 .loc 1 965 0
 3526 0040 FB68     	 ldr r3,[r7,#12]
 966:../main.c     **** }
 3527              	 .loc 1 966 0
 3528 0042 181C     	 add r0,r3,#0
 3529 0044 BD46     	 mov sp,r7
 3530 0046 04B0     	 add sp,sp,#16
 3531              	 
 3532 0048 80BD     	 pop {r7,pc}
 3533              	.L99:
 3534 004a C046     	 .align 2
 3535              	.L98:
 3536 004c DB0FC940 	 .word 1086918619
 3537              	 .cfi_endproc
 3538              	.LFE476:
 3540              	 .section .text.CloseLoopTHcal,"ax",%progbits
 3541              	 .align 2
 3542              	 .global CloseLoopTHcal
 3543              	 .code 16
 3544              	 .thumb_func
 3546              	CloseLoopTHcal:
 3547              	.LFB477:
 967:../main.c     **** /*
 968:../main.c     ****  Function:Khi bat dau vao trang thai closeloop can giam do chenh lech giua goc openloop va goc uoc 
 969:../main.c     ****  THI: ThresholdInput, THO:ThresholdOutput (Giai thich: THI ung voi theta1=w.t1, THO ung voi theta2=
 970:../main.c     ****  positionTHI va positionTHO duoc tinh toan tu ham positionCal()
 971:../main.c     ****  Input:Theta, positionTHI, positionTHO
 972:../main.c     ****  Output:closeloopTHI, closeloopTHO
 973:../main.c     ****  */
 974:../main.c     **** void CloseLoopTHcal(void){
 3548              	 .loc 1 974 0
 3549              	 .cfi_startproc
 3550 0000 80B5     	 push {r7,lr}
 3551              	.LCFI32:
 3552              	 .cfi_def_cfa_offset 8
 3553              	 .cfi_offset 7,-8
 3554              	 .cfi_offset 14,-4
 3555 0002 82B0     	 sub sp,sp,#8
 3556              	.LCFI33:
 3557              	 .cfi_def_cfa_offset 16
 3558 0004 00AF     	 add r7,sp,#0
 3559              	.LCFI34:
 3560              	 .cfi_def_cfa_register 7
 975:../main.c     ****     float tmp1;
 976:../main.c     **** 
 977:../main.c     ****     tmp1 = Theta;
 3561              	 .loc 1 977 0
 3562 0006 4B4B     	 ldr r3,.L115
 3563 0008 1B68     	 ldr r3,[r3]
 3564 000a 7B60     	 str r3,[r7,#4]
 978:../main.c     **** 
 979:../main.c     ****     switch(closeLoopTHstate)
 3565              	 .loc 1 979 0
 3566 000c 4A4B     	 ldr r3,.L115+4
 3567 000e 1B88     	 ldrh r3,[r3]
 3568 0010 012B     	 cmp r3,#1
 3569 0012 23D0     	 beq .L102
 3570 0014 022B     	 cmp r3,#2
 3571 0016 00D1     	 bne .LCB2265
 3572 0018 7FE0     	 b .L103
 3573              	.LCB2265:
 3574 001a 002B     	 cmp r3,#0
 3575 001c 00D0     	 beq .L104
 980:../main.c     ****     {
 981:../main.c     ****         case 0:
 982:../main.c     ****             deviationTH = tmp1 - positionTH;
 983:../main.c     ****             decayRateTH = deviationTH * RL_1D_2SCNT;
 984:../main.c     ****             closeLoopTHI = tmp1;
 985:../main.c     ****             closeLoopTHO = tmp1;
 986:../main.c     ****             closeLoopTHstate= 1;
 987:../main.c     ****             break;
 988:../main.c     ****         case 1:
 989:../main.c     ****             if(((0<decayRateTH) && (deviationTH>decayRateTH)) ||
 990:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
 991:../main.c     ****             {
 992:../main.c     ****                 deviationTH = deviationTH - decayRateTH;
 993:../main.c     ****                 tmp1 = deviationTH + positionTHI;
 994:../main.c     ****                 closeLoopTHI = WrapFrom0To2Pi(tmp1);
 995:../main.c     ****                 tmp1 = deviationTH + positionTHO;
 996:../main.c     ****                 closeLoopTHO = WrapFrom0To2Pi(tmp1);
 997:../main.c     ****             }
 998:../main.c     ****             else
 999:../main.c     ****             {
1000:../main.c     ****                 closeLoopTHI =  positionTHI;
1001:../main.c     ****                 closeLoopTHO =  positionTHO;
1002:../main.c     ****                 closeLoopTHstate = 2;
1003:../main.c     ****             }
1004:../main.c     ****             break;
1005:../main.c     ****         case 2u:
1006:../main.c     ****             closeLoopTHI =  positionTHI;
1007:../main.c     ****             closeLoopTHO =  positionTHO;
1008:../main.c     ****             break;
1009:../main.c     ****         default:
1010:../main.c     ****             break;
 3576              	 .loc 1 1010 0
 3577 001e 85E0     	 b .L100
 3578              	.L104:
 982:../main.c     ****             decayRateTH = deviationTH * RL_1D_2SCNT;
 3579              	 .loc 1 982 0
 3580 0020 464B     	 ldr r3,.L115+8
 3581 0022 1B68     	 ldr r3,[r3]
 3582 0024 7868     	 ldr r0,[r7,#4]
 3583 0026 191C     	 add r1,r3,#0
 3584 0028 FFF7FEFF 	 bl __aeabi_fsub
 3585 002c 031C     	 add r3,r0,#0
 3586 002e 1A1C     	 add r2,r3,#0
 3587 0030 434B     	 ldr r3,.L115+12
 3588 0032 1A60     	 str r2,[r3]
 983:../main.c     ****             closeLoopTHI = tmp1;
 3589              	 .loc 1 983 0
 3590 0034 424B     	 ldr r3,.L115+12
 3591 0036 1B68     	 ldr r3,[r3]
 3592 0038 181C     	 add r0,r3,#0
 3593 003a 4249     	 ldr r1,.L115+16
 3594 003c FFF7FEFF 	 bl __aeabi_fmul
 3595 0040 031C     	 add r3,r0,#0
 3596 0042 1A1C     	 add r2,r3,#0
 3597 0044 404B     	 ldr r3,.L115+20
 3598 0046 1A60     	 str r2,[r3]
 984:../main.c     ****             closeLoopTHO = tmp1;
 3599              	 .loc 1 984 0
 3600 0048 404B     	 ldr r3,.L115+24
 3601 004a 7A68     	 ldr r2,[r7,#4]
 3602 004c 1A60     	 str r2,[r3]
 985:../main.c     ****             closeLoopTHstate= 1;
 3603              	 .loc 1 985 0
 3604 004e 404B     	 ldr r3,.L115+28
 3605 0050 7A68     	 ldr r2,[r7,#4]
 3606 0052 1A60     	 str r2,[r3]
 986:../main.c     ****             break;
 3607              	 .loc 1 986 0
 3608 0054 384B     	 ldr r3,.L115+4
 3609 0056 0122     	 mov r2,#1
 3610 0058 1A80     	 strh r2,[r3]
 987:../main.c     ****         case 1:
 3611              	 .loc 1 987 0
 3612 005a 67E0     	 b .L100
 3613              	.L102:
 989:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
 3614              	 .loc 1 989 0
 3615 005c 3A4B     	 ldr r3,.L115+20
 3616 005e 1B68     	 ldr r3,[r3]
 3617 0060 181C     	 add r0,r3,#0
 3618 0062 0021     	 mov r1,#0
 3619 0064 FFF7FEFF 	 bl __aeabi_fcmpgt
 3620 0068 031E     	 sub r3,r0,#0
 3621 006a 09D0     	 beq .L106
 989:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
 3622              	 .loc 1 989 0 is_stmt 0 discriminator 1
 3623 006c 344B     	 ldr r3,.L115+12
 3624 006e 1A68     	 ldr r2,[r3]
 3625 0070 354B     	 ldr r3,.L115+20
 3626 0072 1B68     	 ldr r3,[r3]
 3627 0074 101C     	 add r0,r2,#0
 3628 0076 191C     	 add r1,r3,#0
 3629 0078 FFF7FEFF 	 bl __aeabi_fcmpgt
 3630 007c 031E     	 sub r3,r0,#0
 3631 007e 11D1     	 bne .L108
 3632              	.L106:
 990:../main.c     ****             {
 3633              	 .loc 1 990 0 is_stmt 1 discriminator 3
 3634 0080 314B     	 ldr r3,.L115+20
 3635 0082 1B68     	 ldr r3,[r3]
 989:../main.c     ****             ((0>decayRateTH) && (deviationTH<decayRateTH)))
 3636              	 .loc 1 989 0 discriminator 3
 3637 0084 181C     	 add r0,r3,#0
 3638 0086 0021     	 mov r1,#0
 3639 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 3640 008c 031E     	 sub r3,r0,#0
 3641 008e 38D0     	 beq .L109
 990:../main.c     ****             {
 3642              	 .loc 1 990 0
 3643 0090 2B4B     	 ldr r3,.L115+12
 3644 0092 1A68     	 ldr r2,[r3]
 3645 0094 2C4B     	 ldr r3,.L115+20
 3646 0096 1B68     	 ldr r3,[r3]
 3647 0098 101C     	 add r0,r2,#0
 3648 009a 191C     	 add r1,r3,#0
 3649 009c FFF7FEFF 	 bl __aeabi_fcmplt
 3650 00a0 031E     	 sub r3,r0,#0
 3651 00a2 2ED0     	 beq .L109
 3652              	.L108:
 992:../main.c     ****                 tmp1 = deviationTH + positionTHI;
 3653              	 .loc 1 992 0
 3654 00a4 264B     	 ldr r3,.L115+12
 3655 00a6 1A68     	 ldr r2,[r3]
 3656 00a8 274B     	 ldr r3,.L115+20
 3657 00aa 1B68     	 ldr r3,[r3]
 3658 00ac 101C     	 add r0,r2,#0
 3659 00ae 191C     	 add r1,r3,#0
 3660 00b0 FFF7FEFF 	 bl __aeabi_fsub
 3661 00b4 031C     	 add r3,r0,#0
 3662 00b6 1A1C     	 add r2,r3,#0
 3663 00b8 214B     	 ldr r3,.L115+12
 3664 00ba 1A60     	 str r2,[r3]
 993:../main.c     ****                 closeLoopTHI = WrapFrom0To2Pi(tmp1);
 3665              	 .loc 1 993 0
 3666 00bc 204B     	 ldr r3,.L115+12
 3667 00be 1A68     	 ldr r2,[r3]
 3668 00c0 244B     	 ldr r3,.L115+32
 3669 00c2 1B68     	 ldr r3,[r3]
 3670 00c4 101C     	 add r0,r2,#0
 3671 00c6 191C     	 add r1,r3,#0
 3672 00c8 FFF7FEFF 	 bl __aeabi_fadd
 3673 00cc 031C     	 add r3,r0,#0
 3674 00ce 7B60     	 str r3,[r7,#4]
 994:../main.c     ****                 tmp1 = deviationTH + positionTHO;
 3675              	 .loc 1 994 0
 3676 00d0 7B68     	 ldr r3,[r7,#4]
 3677 00d2 181C     	 add r0,r3,#0
 3678 00d4 FFF7FEFF 	 bl WrapFrom0To2Pi
 3679 00d8 021C     	 add r2,r0,#0
 3680 00da 1C4B     	 ldr r3,.L115+24
 3681 00dc 1A60     	 str r2,[r3]
 995:../main.c     ****                 closeLoopTHO = WrapFrom0To2Pi(tmp1);
 3682              	 .loc 1 995 0
 3683 00de 184B     	 ldr r3,.L115+12
 3684 00e0 1A68     	 ldr r2,[r3]
 3685 00e2 1D4B     	 ldr r3,.L115+36
 3686 00e4 1B68     	 ldr r3,[r3]
 3687 00e6 101C     	 add r0,r2,#0
 3688 00e8 191C     	 add r1,r3,#0
 3689 00ea FFF7FEFF 	 bl __aeabi_fadd
 3690 00ee 031C     	 add r3,r0,#0
 3691 00f0 7B60     	 str r3,[r7,#4]
 996:../main.c     ****             }
 3692              	 .loc 1 996 0
 3693 00f2 7B68     	 ldr r3,[r7,#4]
 3694 00f4 181C     	 add r0,r3,#0
 3695 00f6 FFF7FEFF 	 bl WrapFrom0To2Pi
 3696 00fa 021C     	 add r2,r0,#0
 3697 00fc 144B     	 ldr r3,.L115+28
 3698 00fe 1A60     	 str r2,[r3]
1004:../main.c     ****         case 2u:
 3699              	 .loc 1 1004 0
 3700 0100 14E0     	 b .L100
 3701              	.L109:
1000:../main.c     ****                 closeLoopTHO =  positionTHO;
 3702              	 .loc 1 1000 0
 3703 0102 144B     	 ldr r3,.L115+32
 3704 0104 1A68     	 ldr r2,[r3]
 3705 0106 114B     	 ldr r3,.L115+24
 3706 0108 1A60     	 str r2,[r3]
1001:../main.c     ****                 closeLoopTHstate = 2;
 3707              	 .loc 1 1001 0
 3708 010a 134B     	 ldr r3,.L115+36
 3709 010c 1A68     	 ldr r2,[r3]
 3710 010e 104B     	 ldr r3,.L115+28
 3711 0110 1A60     	 str r2,[r3]
1002:../main.c     ****             }
 3712              	 .loc 1 1002 0
 3713 0112 094B     	 ldr r3,.L115+4
 3714 0114 0222     	 mov r2,#2
 3715 0116 1A80     	 strh r2,[r3]
1004:../main.c     ****         case 2u:
 3716              	 .loc 1 1004 0
 3717 0118 08E0     	 b .L100
 3718              	.L103:
1006:../main.c     ****             closeLoopTHO =  positionTHO;
 3719              	 .loc 1 1006 0
 3720 011a 0E4B     	 ldr r3,.L115+32
 3721 011c 1A68     	 ldr r2,[r3]
 3722 011e 0B4B     	 ldr r3,.L115+24
 3723 0120 1A60     	 str r2,[r3]
1007:../main.c     ****             break;
 3724              	 .loc 1 1007 0
 3725 0122 0D4B     	 ldr r3,.L115+36
 3726 0124 1A68     	 ldr r2,[r3]
 3727 0126 0A4B     	 ldr r3,.L115+28
 3728 0128 1A60     	 str r2,[r3]
1008:../main.c     ****         default:
 3729              	 .loc 1 1008 0
 3730 012a C046     	 mov r8,r8
 3731              	.L100:
1011:../main.c     ****     }
1012:../main.c     **** }
 3732              	 .loc 1 1012 0
 3733 012c BD46     	 mov sp,r7
 3734 012e 02B0     	 add sp,sp,#8
 3735              	 
 3736 0130 80BD     	 pop {r7,pc}
 3737              	.L116:
 3738 0132 C046     	 .align 2
 3739              	.L115:
 3740 0134 00000000 	 .word Theta
 3741 0138 00000000 	 .word closeLoopTHstate
 3742 013c 00000000 	 .word positionTH
 3743 0140 00000000 	 .word deviationTH
 3744 0144 17B7D137 	 .word 936490775
 3745 0148 00000000 	 .word decayRateTH
 3746 014c 00000000 	 .word closeLoopTHI
 3747 0150 00000000 	 .word closeLoopTHO
 3748 0154 00000000 	 .word positionTHI
 3749 0158 00000000 	 .word positionTHO
 3750              	 .cfi_endproc
 3751              	.LFE477:
 3753              	 .section .text.ThetaLoopControl,"ax",%progbits
 3754              	 .align 2
 3755              	 .global ThetaLoopControl
 3756              	 .code 16
 3757              	 .thumb_func
 3759              	ThetaLoopControl:
 3760              	.LFB478:
1013:../main.c     **** 
1014:../main.c     **** /*
1015:../main.c     ****  Function:Tinh toan goc dong co cho openloop, closeloop de su dung cho Park va Inverse Park chuyen 
1016:../main.c     ****  Input:Theta
1017:../main.c     ****  Output:finalTHI, finalTHO
1018:../main.c     ****  */
1019:../main.c     **** void ThetaLoopControl(void)
1020:../main.c     **** {
 3761              	 .loc 1 1020 0
 3762              	 .cfi_startproc
 3763 0000 80B5     	 push {r7,lr}
 3764              	.LCFI35:
 3765              	 .cfi_def_cfa_offset 8
 3766              	 .cfi_offset 7,-8
 3767              	 .cfi_offset 14,-4
 3768 0002 82B0     	 sub sp,sp,#8
 3769              	.LCFI36:
 3770              	 .cfi_def_cfa_offset 16
 3771 0004 00AF     	 add r7,sp,#0
 3772              	.LCFI37:
 3773              	 .cfi_def_cfa_register 7
1021:../main.c     **** 	if(OpenLoop==1)
 3774              	 .loc 1 1021 0
 3775 0006 604B     	 ldr r3,.L143
 3776 0008 1B88     	 ldrh r3,[r3]
 3777 000a 012B     	 cmp r3,#1
 3778 000c 00D0     	 beq .LCB2454
 3779 000e ACE0     	 b .L118
 3780              	.LCB2454:
1022:../main.c     ****     {
1023:../main.c     ****             Theta += Startup_Ramp_Angle_Rads_Per_Sec;
 3781              	 .loc 1 1023 0
 3782 0010 5E4B     	 ldr r3,.L143+4
 3783 0012 1A68     	 ldr r2,[r3]
 3784 0014 5E4B     	 ldr r3,.L143+8
 3785 0016 1B68     	 ldr r3,[r3]
 3786 0018 101C     	 add r0,r2,#0
 3787 001a 191C     	 add r1,r3,#0
 3788 001c FFF7FEFF 	 bl __aeabi_fadd
 3789 0020 031C     	 add r3,r0,#0
 3790 0022 1A1C     	 add r2,r3,#0
 3791 0024 594B     	 ldr r3,.L143+4
 3792 0026 1A60     	 str r2,[r3]
1024:../main.c     ****             if(Theta >= (float)(2.0f*(float)M_PI))
 3793              	 .loc 1 1024 0
 3794 0028 584B     	 ldr r3,.L143+4
 3795 002a 1B68     	 ldr r3,[r3]
 3796 002c 181C     	 add r0,r3,#0
 3797 002e 5949     	 ldr r1,.L143+12
 3798 0030 FFF7FEFF 	 bl __aeabi_fcmpge
 3799 0034 031E     	 sub r3,r0,#0
 3800 0036 09D0     	 beq .L119
1025:../main.c     ****             {
1026:../main.c     ****                 Theta = Theta - (float)(2.0f*(float)M_PI);
 3801              	 .loc 1 1026 0
 3802 0038 544B     	 ldr r3,.L143+4
 3803 003a 1B68     	 ldr r3,[r3]
 3804 003c 181C     	 add r0,r3,#0
 3805 003e 5549     	 ldr r1,.L143+12
 3806 0040 FFF7FEFF 	 bl __aeabi_fsub
 3807 0044 031C     	 add r3,r0,#0
 3808 0046 1A1C     	 add r2,r3,#0
 3809 0048 504B     	 ldr r3,.L143+4
 3810 004a 1A60     	 str r2,[r3]
 3811              	.L119:
1027:../main.c     ****             }
1028:../main.c     **** 		if (Startup_Lock_Count < LOCK_COUNT_FOR_LOCK_TIME)
 3812              	 .loc 1 1028 0
 3813 004c 524B     	 ldr r3,.L143+16
 3814 004e 1B88     	 ldrh r3,[r3]
 3815 0050 181C     	 mov r0,r3
 3816 0052 FFF7FEFF 	 bl __aeabi_i2f
 3817 0056 031C     	 add r3,r0,#0
 3818 0058 181C     	 add r0,r3,#0
 3819 005a 5049     	 ldr r1,.L143+20
 3820 005c FFF7FEFF 	 bl __aeabi_fcmplt
 3821 0060 031E     	 sub r3,r0,#0
 3822 0062 16D0     	 beq .L139
1029:../main.c     ****         {
1030:../main.c     ****             Startup_Lock_Count++;
 3823              	 .loc 1 1030 0
 3824 0064 4C4B     	 ldr r3,.L143+16
 3825 0066 1B88     	 ldrh r3,[r3]
 3826 0068 0133     	 add r3,r3,#1
 3827 006a 9AB2     	 uxth r2,r3
 3828 006c 4A4B     	 ldr r3,.L143+16
 3829 006e 1A80     	 strh r2,[r3]
1031:../main.c     ****             Startup_Ramp_Angle_Rads_Per_Sec = 0;
 3830              	 .loc 1 1031 0
 3831 0070 474B     	 ldr r3,.L143+8
 3832 0072 0022     	 mov r2,#0
 3833 0074 1A60     	 str r2,[r3]
1032:../main.c     ****             Theta = 0;
 3834              	 .loc 1 1032 0
 3835 0076 454B     	 ldr r3,.L143+4
 3836 0078 0022     	 mov r2,#0
 3837 007a 1A60     	 str r2,[r3]
1033:../main.c     ****             SpeedRef = Startup_Ramp_Angle_Rads_Per_Sec/Ts;
 3838              	 .loc 1 1033 0
 3839 007c 444B     	 ldr r3,.L143+8
 3840 007e 1B68     	 ldr r3,[r3]
 3841 0080 181C     	 add r0,r3,#0
 3842 0082 0021     	 mov r1,#0
 3843 0084 FFF7FEFF 	 bl __aeabi_fdiv
 3844 0088 031C     	 add r3,r0,#0
 3845 008a 1A1C     	 add r2,r3,#0
 3846 008c 444B     	 ldr r3,.L143+24
 3847 008e 1A60     	 str r2,[r3]
 3848 0090 62E0     	 b .L123
 3849              	.L139:
1034:../main.c     ****         }
1035:../main.c     ****         else if (Startup_Ramp_Angle_Rads_Per_Sec < END_SPEED_RADS_PER_SEC_ELEC_IN_LOOPTIME)
 3850              	 .loc 1 1035 0
 3851 0092 3F4B     	 ldr r3,.L143+8
 3852 0094 1B68     	 ldr r3,[r3]
 3853 0096 181C     	 add r0,r3,#0
 3854 0098 4249     	 ldr r1,.L143+28
 3855 009a FFF7FEFF 	 bl __aeabi_fcmplt
 3856 009e 031E     	 sub r3,r0,#0
 3857 00a0 0AD0     	 beq .L140
1036:../main.c     ****         {
1037:../main.c     **** 			Startup_Ramp_Angle_Rads_Per_Sec += OPENLOOP_RAMPSPEED_INCREASERATE;
 3858              	 .loc 1 1037 0
 3859 00a2 3B4B     	 ldr r3,.L143+8
 3860 00a4 1B68     	 ldr r3,[r3]
 3861 00a6 181C     	 add r0,r3,#0
 3862 00a8 3F49     	 ldr r1,.L143+32
 3863 00aa FFF7FEFF 	 bl __aeabi_fadd
 3864 00ae 031C     	 add r3,r0,#0
 3865 00b0 1A1C     	 add r2,r3,#0
 3866 00b2 374B     	 ldr r3,.L143+8
 3867 00b4 1A60     	 str r2,[r3]
 3868 00b6 4FE0     	 b .L123
 3869              	.L140:
1038:../main.c     ****         }
1039:../main.c     ****         else if(Speed_Maintain_Cnt1 < (uint32_t)PWM_FREQ)
 3870              	 .loc 1 1039 0
 3871 00b8 3C4B     	 ldr r3,.L143+36
 3872 00ba 1B88     	 ldrh r3,[r3]
 3873 00bc 3C4A     	 ldr r2,.L143+40
 3874 00be 9342     	 cmp r3,r2
 3875 00c0 0CD8     	 bhi .L126
1040:../main.c     ****         {
1041:../main.c     ****             Speed_Maintain_Cnt1++;
 3876              	 .loc 1 1041 0
 3877 00c2 3A4B     	 ldr r3,.L143+36
 3878 00c4 1B88     	 ldrh r3,[r3]
 3879 00c6 0133     	 add r3,r3,#1
 3880 00c8 9AB2     	 uxth r2,r3
 3881 00ca 384B     	 ldr r3,.L143+36
 3882 00cc 1A80     	 strh r2,[r3]
1042:../main.c     ****             SpeedRef = END_SPEED_RADS_PER_SEC_ELEC;
 3883              	 .loc 1 1042 0
 3884 00ce 344B     	 ldr r3,.L143+24
 3885 00d0 384A     	 ldr r2,.L143+44
 3886 00d2 1A60     	 str r2,[r3]
1043:../main.c     ****             flagStartObs = 2;
 3887              	 .loc 1 1043 0
 3888 00d4 384B     	 ldr r3,.L143+48
 3889 00d6 0222     	 mov r2,#2
 3890 00d8 1A80     	 strh r2,[r3]
 3891 00da 3DE0     	 b .L123
 3892              	.L126:
 3893              	.LBB2:
1044:../main.c     ****         }
1045:../main.c     ****         else
1046:../main.c     ****         {
1047:../main.c     ****                 float tmp1;
1048:../main.c     ****                 tmp1 = Theta - positionTH;
 3894              	 .loc 1 1048 0
 3895 00dc 2B4B     	 ldr r3,.L143+4
 3896 00de 1A68     	 ldr r2,[r3]
 3897 00e0 364B     	 ldr r3,.L143+52
 3898 00e2 1B68     	 ldr r3,[r3]
 3899 00e4 101C     	 add r0,r2,#0
 3900 00e6 191C     	 add r1,r3,#0
 3901 00e8 FFF7FEFF 	 bl __aeabi_fsub
 3902 00ec 031C     	 add r3,r0,#0
 3903 00ee 7B60     	 str r3,[r7,#4]
1049:../main.c     ****                 if((float)-M_PI > tmp1)
 3904              	 .loc 1 1049 0
 3905 00f0 7868     	 ldr r0,[r7,#4]
 3906 00f2 3349     	 ldr r1,.L143+56
 3907 00f4 FFF7FEFF 	 bl __aeabi_fcmplt
 3908 00f8 031E     	 sub r3,r0,#0
 3909 00fa 08D0     	 beq .L141
1050:../main.c     ****                 {
1051:../main.c     ****                     deviationTH = tmp1 + (float)(2.0*M_PI);
 3910              	 .loc 1 1051 0
 3911 00fc 7868     	 ldr r0,[r7,#4]
 3912 00fe 2549     	 ldr r1,.L143+12
 3913 0100 FFF7FEFF 	 bl __aeabi_fadd
 3914 0104 031C     	 add r3,r0,#0
 3915 0106 1A1C     	 add r2,r3,#0
 3916 0108 2E4B     	 ldr r3,.L143+60
 3917 010a 1A60     	 str r2,[r3]
 3918 010c 11E0     	 b .L129
 3919              	.L141:
1052:../main.c     ****                 }
1053:../main.c     ****                 else if((float)M_PI < tmp1)
 3920              	 .loc 1 1053 0
 3921 010e 7868     	 ldr r0,[r7,#4]
 3922 0110 2D49     	 ldr r1,.L143+64
 3923 0112 FFF7FEFF 	 bl __aeabi_fcmpgt
 3924 0116 031E     	 sub r3,r0,#0
 3925 0118 08D0     	 beq .L142
1054:../main.c     ****                 {
1055:../main.c     ****                     deviationTH = tmp1 - (float)(2.0*M_PI);
 3926              	 .loc 1 1055 0
 3927 011a 7868     	 ldr r0,[r7,#4]
 3928 011c 1D49     	 ldr r1,.L143+12
 3929 011e FFF7FEFF 	 bl __aeabi_fsub
 3930 0122 031C     	 add r3,r0,#0
 3931 0124 1A1C     	 add r2,r3,#0
 3932 0126 274B     	 ldr r3,.L143+60
 3933 0128 1A60     	 str r2,[r3]
 3934 012a 02E0     	 b .L129
 3935              	.L142:
1056:../main.c     ****                 }
1057:../main.c     ****                 else
1058:../main.c     ****                 {
1059:../main.c     ****                     deviationTH = tmp1;
 3936              	 .loc 1 1059 0
 3937 012c 254B     	 ldr r3,.L143+60
 3938 012e 7A68     	 ldr r2,[r7,#4]
 3939 0130 1A60     	 str r2,[r3]
 3940              	.L129:
1060:../main.c     ****                 }
1061:../main.c     ****                 decayRateTH = deviationTH * RL_1D_2SCNT;
 3941              	 .loc 1 1061 0
 3942 0132 244B     	 ldr r3,.L143+60
 3943 0134 1B68     	 ldr r3,[r3]
 3944 0136 181C     	 add r0,r3,#0
 3945 0138 2449     	 ldr r1,.L143+68
 3946 013a FFF7FEFF 	 bl __aeabi_fmul
 3947 013e 031C     	 add r3,r0,#0
 3948 0140 1A1C     	 add r2,r3,#0
 3949 0142 234B     	 ldr r3,.L143+72
 3950 0144 1A60     	 str r2,[r3]
1062:../main.c     ****                 closeLoopTHstate = 1;
 3951              	 .loc 1 1062 0
 3952 0146 234B     	 ldr r3,.L143+76
 3953 0148 0122     	 mov r2,#1
 3954 014a 1A80     	 strh r2,[r3]
1063:../main.c     ****                 ChangeMode = 1;
 3955              	 .loc 1 1063 0
 3956 014c 224B     	 ldr r3,.L143+80
 3957 014e 0122     	 mov r2,#1
 3958 0150 1A80     	 strh r2,[r3]
1064:../main.c     ****                 OpenLoop = 0;
 3959              	 .loc 1 1064 0
 3960 0152 0D4B     	 ldr r3,.L143
 3961 0154 0022     	 mov r2,#0
 3962 0156 1A80     	 strh r2,[r3]
 3963              	.L123:
 3964              	.LBE2:
1065:../main.c     **** 		}
1066:../main.c     **** 
1067:../main.c     ****         finalTHI = Theta;
 3965              	 .loc 1 1067 0
 3966 0158 0C4B     	 ldr r3,.L143+4
 3967 015a 1A68     	 ldr r2,[r3]
 3968 015c 1F4B     	 ldr r3,.L143+84
 3969 015e 1A60     	 str r2,[r3]
1068:../main.c     ****         finalTHO = Theta;
 3970              	 .loc 1 1068 0
 3971 0160 0A4B     	 ldr r3,.L143+4
 3972 0162 1A68     	 ldr r2,[r3]
 3973 0164 1E4B     	 ldr r3,.L143+88
 3974 0166 1A60     	 str r2,[r3]
 3975 0168 09E0     	 b .L132
 3976              	.L118:
1069:../main.c     **** 	}
1070:../main.c     ****     else
1071:../main.c     ****     {
1072:../main.c     ****         CloseLoopTHcal();
 3977              	 .loc 1 1072 0
 3978 016a FFF7FEFF 	 bl CloseLoopTHcal
1073:../main.c     ****         finalTHI = closeLoopTHI;
 3979              	 .loc 1 1073 0
 3980 016e 1D4B     	 ldr r3,.L143+92
 3981 0170 1A68     	 ldr r2,[r3]
 3982 0172 1A4B     	 ldr r3,.L143+84
 3983 0174 1A60     	 str r2,[r3]
1074:../main.c     ****         finalTHO = closeLoopTHO;
 3984              	 .loc 1 1074 0
 3985 0176 1C4B     	 ldr r3,.L143+96
 3986 0178 1A68     	 ldr r2,[r3]
 3987 017a 194B     	 ldr r3,.L143+88
 3988 017c 1A60     	 str r2,[r3]
 3989              	.L132:
1075:../main.c     **** 	}
1076:../main.c     **** 
1077:../main.c     **** 	return;
 3990              	 .loc 1 1077 0
 3991 017e C046     	 mov r8,r8
1078:../main.c     **** }
 3992              	 .loc 1 1078 0
 3993 0180 BD46     	 mov sp,r7
 3994 0182 02B0     	 add sp,sp,#8
 3995              	 
 3996 0184 80BD     	 pop {r7,pc}
 3997              	.L144:
 3998 0186 C046     	 .align 2
 3999              	.L143:
 4000 0188 00000000 	 .word OpenLoop
 4001 018c 00000000 	 .word Theta
 4002 0190 00000000 	 .word Startup_Ramp_Angle_Rads_Per_Sec
 4003 0194 DB0FC940 	 .word 1086918619
 4004 0198 00000000 	 .word Startup_Lock_Count
 4005 019c 00401C47 	 .word 1193033728
 4006 01a0 00000000 	 .word SpeedRef
 4007 01a4 A6922B3B 	 .word 992711334
 4008 01a8 4BE2E032 	 .word 853598795
 4009 01ac 00000000 	 .word Speed_Maintain_Cnt1
 4010 01b0 1F4E0000 	 .word 19999
 4011 01b4 84705142 	 .word 1112633476
 4012 01b8 00000000 	 .word flagStartObs
 4013 01bc 00000000 	 .word positionTH
 4014 01c0 DB0F49C0 	 .word -1068953637
 4015 01c4 00000000 	 .word deviationTH
 4016 01c8 DB0F4940 	 .word 1078530011
 4017 01cc 17B7D137 	 .word 936490775
 4018 01d0 00000000 	 .word decayRateTH
 4019 01d4 00000000 	 .word closeLoopTHstate
 4020 01d8 00000000 	 .word ChangeMode
 4021 01dc 00000000 	 .word finalTHI
 4022 01e0 00000000 	 .word finalTHO
 4023 01e4 00000000 	 .word closeLoopTHI
 4024 01e8 00000000 	 .word closeLoopTHO
 4025              	 .cfi_endproc
 4026              	.LFE478:
 4028              	 .section .text.floatAbs,"ax",%progbits
 4029              	 .align 2
 4030              	 .global floatAbs
 4031              	 .code 16
 4032              	 .thumb_func
 4034              	floatAbs:
 4035              	.LFB479:
1079:../main.c     **** 
1080:../main.c     **** /*
1081:../main.c     ****  Function:lay gia tri tuyet doi cua bien vao
1082:../main.c     ****  Input:x
1083:../main.c     ****  Output:tri tuyet doi cua x
1084:../main.c     ****  */
1085:../main.c     **** float floatAbs(float x)
1086:../main.c     **** {
 4036              	 .loc 1 1086 0
 4037              	 .cfi_startproc
 4038 0000 80B5     	 push {r7,lr}
 4039              	.LCFI38:
 4040              	 .cfi_def_cfa_offset 8
 4041              	 .cfi_offset 7,-8
 4042              	 .cfi_offset 14,-4
 4043 0002 84B0     	 sub sp,sp,#16
 4044              	.LCFI39:
 4045              	 .cfi_def_cfa_offset 24
 4046 0004 00AF     	 add r7,sp,#0
 4047              	.LCFI40:
 4048              	 .cfi_def_cfa_register 7
 4049 0006 7860     	 str r0,[r7,#4]
1087:../main.c     ****     float tmp;
1088:../main.c     **** 
1089:../main.c     ****     if(0 < x)
 4050              	 .loc 1 1089 0
 4051 0008 7868     	 ldr r0,[r7,#4]
 4052 000a 0021     	 mov r1,#0
 4053 000c FFF7FEFF 	 bl __aeabi_fcmpgt
 4054 0010 031E     	 sub r3,r0,#0
 4055 0012 02D0     	 beq .L151
1090:../main.c     ****     {
1091:../main.c     ****         tmp = x;
 4056              	 .loc 1 1091 0
 4057 0014 7B68     	 ldr r3,[r7,#4]
 4058 0016 FB60     	 str r3,[r7,#12]
 4059 0018 04E0     	 b .L148
 4060              	.L151:
1092:../main.c     ****     }
1093:../main.c     ****     else
1094:../main.c     ****     {
1095:../main.c     ****         tmp = -x;
 4061              	 .loc 1 1095 0
 4062 001a 7B68     	 ldr r3,[r7,#4]
 4063 001c 8022     	 mov r2,#128
 4064 001e 1206     	 lsl r2,r2,#24
 4065 0020 5340     	 eor r3,r2
 4066 0022 FB60     	 str r3,[r7,#12]
 4067              	.L148:
1096:../main.c     ****     }
1097:../main.c     **** 
1098:../main.c     ****     return tmp;
 4068              	 .loc 1 1098 0
 4069 0024 FB68     	 ldr r3,[r7,#12]
1099:../main.c     **** }
 4070              	 .loc 1 1099 0
 4071 0026 181C     	 add r0,r3,#0
 4072 0028 BD46     	 mov sp,r7
 4073 002a 04B0     	 add sp,sp,#16
 4074              	 
 4075 002c 80BD     	 pop {r7,pc}
 4076              	 .cfi_endproc
 4077              	.LFE479:
 4079 002e C046     	 .section .text.sinChebyshevF,"ax",%progbits
 4080              	 .align 2
 4081              	 .global sinChebyshevF
 4082              	 .code 16
 4083              	 .thumb_func
 4085              	sinChebyshevF:
 4086              	.LFB480:
1100:../main.c     **** /*
1101:../main.c     ****  Function:tinh toan xap xi sin cua goc dua vao ham
1102:../main.c     ****  Input:x
1103:../main.c     ****  Output:sin(x)
1104:../main.c     ****  */
1105:../main.c     **** float sinChebyshevF(float x)
1106:../main.c     **** {
 4087              	 .loc 1 1106 0
 4088              	 .cfi_startproc
 4089 0000 80B5     	 push {r7,lr}
 4090              	.LCFI41:
 4091              	 .cfi_def_cfa_offset 8
 4092              	 .cfi_offset 7,-8
 4093              	 .cfi_offset 14,-4
 4094 0002 86B0     	 sub sp,sp,#24
 4095              	.LCFI42:
 4096              	 .cfi_def_cfa_offset 32
 4097 0004 00AF     	 add r7,sp,#0
 4098              	.LCFI43:
 4099              	 .cfi_def_cfa_register 7
 4100 0006 7860     	 str r0,[r7,#4]
1107:../main.c     ****     float y;
1108:../main.c     ****     float tmp1;
1109:../main.c     ****     float tmp2;
1110:../main.c     **** 
1111:../main.c     ****     if((float)M_PI_2 < x)
 4101              	 .loc 1 1111 0
 4102 0008 7868     	 ldr r0,[r7,#4]
 4103 000a 2049     	 ldr r1,.L163
 4104 000c FFF7FEFF 	 bl __aeabi_fcmpgt
 4105 0010 031E     	 sub r3,r0,#0
 4106 0012 06D0     	 beq .L161
1112:../main.c     ****     {
1113:../main.c     ****         y = (float)M_PI - x;
 4107              	 .loc 1 1113 0
 4108 0014 1E48     	 ldr r0,.L163+4
 4109 0016 7968     	 ldr r1,[r7,#4]
 4110 0018 FFF7FEFF 	 bl __aeabi_fsub
 4111 001c 031C     	 add r3,r0,#0
 4112 001e 7B61     	 str r3,[r7,#20]
 4113 0020 0EE0     	 b .L155
 4114              	.L161:
1114:../main.c     ****     }
1115:../main.c     ****     else if((float)(-M_PI_2) > x)
 4115              	 .loc 1 1115 0
 4116 0022 7868     	 ldr r0,[r7,#4]
 4117 0024 1B49     	 ldr r1,.L163+8
 4118 0026 FFF7FEFF 	 bl __aeabi_fcmplt
 4119 002a 031E     	 sub r3,r0,#0
 4120 002c 06D0     	 beq .L162
1116:../main.c     ****     {
1117:../main.c     ****         y = (float)(-M_PI) - x;
 4121              	 .loc 1 1117 0
 4122 002e 1A48     	 ldr r0,.L163+12
 4123 0030 7968     	 ldr r1,[r7,#4]
 4124 0032 FFF7FEFF 	 bl __aeabi_fsub
 4125 0036 031C     	 add r3,r0,#0
 4126 0038 7B61     	 str r3,[r7,#20]
 4127 003a 01E0     	 b .L155
 4128              	.L162:
1118:../main.c     ****     }
1119:../main.c     ****     else
1120:../main.c     ****     {
1121:../main.c     ****         y = x;
 4129              	 .loc 1 1121 0
 4130 003c 7B68     	 ldr r3,[r7,#4]
 4131 003e 7B61     	 str r3,[r7,#20]
 4132              	.L155:
1122:../main.c     ****     }
1123:../main.c     **** 
1124:../main.c     ****     tmp1 = y * y;
 4133              	 .loc 1 1124 0
 4134 0040 7869     	 ldr r0,[r7,#20]
 4135 0042 7969     	 ldr r1,[r7,#20]
 4136 0044 FFF7FEFF 	 bl __aeabi_fmul
 4137 0048 031C     	 add r3,r0,#0
 4138 004a 3B61     	 str r3,[r7,#16]
1125:../main.c     ****     tmp2 = y * (CHEB_SIN_1 + tmp1 * (CHEB_SIN_3 + (tmp1 * CHEB_SIN_5)));
 4139              	 .loc 1 1125 0
 4140 004c 3869     	 ldr r0,[r7,#16]
 4141 004e 1349     	 ldr r1,.L163+16
 4142 0050 FFF7FEFF 	 bl __aeabi_fmul
 4143 0054 031C     	 add r3,r0,#0
 4144 0056 181C     	 add r0,r3,#0
 4145 0058 1149     	 ldr r1,.L163+20
 4146 005a FFF7FEFF 	 bl __aeabi_fsub
 4147 005e 031C     	 add r3,r0,#0
 4148 0060 181C     	 add r0,r3,#0
 4149 0062 3969     	 ldr r1,[r7,#16]
 4150 0064 FFF7FEFF 	 bl __aeabi_fmul
 4151 0068 031C     	 add r3,r0,#0
 4152 006a 181C     	 add r0,r3,#0
 4153 006c 0D49     	 ldr r1,.L163+24
 4154 006e FFF7FEFF 	 bl __aeabi_fadd
 4155 0072 031C     	 add r3,r0,#0
 4156 0074 181C     	 add r0,r3,#0
 4157 0076 7969     	 ldr r1,[r7,#20]
 4158 0078 FFF7FEFF 	 bl __aeabi_fmul
 4159 007c 031C     	 add r3,r0,#0
 4160 007e FB60     	 str r3,[r7,#12]
1126:../main.c     **** 
1127:../main.c     ****     return tmp2;
 4161              	 .loc 1 1127 0
 4162 0080 FB68     	 ldr r3,[r7,#12]
1128:../main.c     **** }
 4163              	 .loc 1 1128 0
 4164 0082 181C     	 add r0,r3,#0
 4165 0084 BD46     	 mov sp,r7
 4166 0086 06B0     	 add sp,sp,#24
 4167              	 
 4168 0088 80BD     	 pop {r7,pc}
 4169              	.L164:
 4170 008a C046     	 .align 2
 4171              	.L163:
 4172 008c DB0FC93F 	 .word 1070141403
 4173 0090 DB0F4940 	 .word 1078530011
 4174 0094 DB0FC9BF 	 .word -1077342245
 4175 0098 DB0F49C0 	 .word -1068953637
 4176 009c E2F1023C 	 .word 1006825954
 4177 00a0 377E2A3E 	 .word 1042972215
 4178 00a4 9AFE7F3F 	 .word 1065352858
 4179              	 .cfi_endproc
 4180              	.LFE480:
 4182              	 .section .text.cosChebyshevF,"ax",%progbits
 4183              	 .align 2
 4184              	 .global cosChebyshevF
 4185              	 .code 16
 4186              	 .thumb_func
 4188              	cosChebyshevF:
 4189              	.LFB481:
1129:../main.c     **** /*
1130:../main.c     ****  Function:tinh toan xap xi cos cua goc dua vao ham
1131:../main.c     ****  Input:x
1132:../main.c     ****  Output:cos(x)
1133:../main.c     ****  */
1134:../main.c     **** float cosChebyshevF(float x)
1135:../main.c     **** {
 4190              	 .loc 1 1135 0
 4191              	 .cfi_startproc
 4192 0000 80B5     	 push {r7,lr}
 4193              	.LCFI44:
 4194              	 .cfi_def_cfa_offset 8
 4195              	 .cfi_offset 7,-8
 4196              	 .cfi_offset 14,-4
 4197 0002 84B0     	 sub sp,sp,#16
 4198              	.LCFI45:
 4199              	 .cfi_def_cfa_offset 24
 4200 0004 00AF     	 add r7,sp,#0
 4201              	.LCFI46:
 4202              	 .cfi_def_cfa_register 7
 4203 0006 7860     	 str r0,[r7,#4]
1136:../main.c     ****     float y;
1137:../main.c     ****     float tmp1;
1138:../main.c     **** 
1139:../main.c     ****     if(0.0 > x)
 4204              	 .loc 1 1139 0
 4205 0008 7868     	 ldr r0,[r7,#4]
 4206 000a 0021     	 mov r1,#0
 4207 000c FFF7FEFF 	 bl __aeabi_fcmplt
 4208 0010 031E     	 sub r3,r0,#0
 4209 0012 06D0     	 beq .L171
1140:../main.c     ****     {
1141:../main.c     ****         y = (float)M_PI_2 + x;
 4210              	 .loc 1 1141 0
 4211 0014 7868     	 ldr r0,[r7,#4]
 4212 0016 0B49     	 ldr r1,.L172
 4213 0018 FFF7FEFF 	 bl __aeabi_fadd
 4214 001c 031C     	 add r3,r0,#0
 4215 001e FB60     	 str r3,[r7,#12]
 4216 0020 05E0     	 b .L168
 4217              	.L171:
1142:../main.c     ****     }
1143:../main.c     ****     else
1144:../main.c     ****     {
1145:../main.c     ****         y = (float)M_PI_2 - x;
 4218              	 .loc 1 1145 0
 4219 0022 0848     	 ldr r0,.L172
 4220 0024 7968     	 ldr r1,[r7,#4]
 4221 0026 FFF7FEFF 	 bl __aeabi_fsub
 4222 002a 031C     	 add r3,r0,#0
 4223 002c FB60     	 str r3,[r7,#12]
 4224              	.L168:
1146:../main.c     ****     }
1147:../main.c     **** 
1148:../main.c     ****     tmp1 = sinChebyshevF(y);
 4225              	 .loc 1 1148 0
 4226 002e FB68     	 ldr r3,[r7,#12]
 4227 0030 181C     	 add r0,r3,#0
 4228 0032 FFF7FEFF 	 bl sinChebyshevF
 4229 0036 031C     	 add r3,r0,#0
 4230 0038 BB60     	 str r3,[r7,#8]
1149:../main.c     **** 
1150:../main.c     ****     return tmp1;
 4231              	 .loc 1 1150 0
 4232 003a BB68     	 ldr r3,[r7,#8]
1151:../main.c     **** }
 4233              	 .loc 1 1151 0
 4234 003c 181C     	 add r0,r3,#0
 4235 003e BD46     	 mov sp,r7
 4236 0040 04B0     	 add sp,sp,#16
 4237              	 
 4238 0042 80BD     	 pop {r7,pc}
 4239              	.L173:
 4240              	 .align 2
 4241              	.L172:
 4242 0044 DB0FC93F 	 .word 1070141403
 4243              	 .cfi_endproc
 4244              	.LFE481:
 4246              	 .section .text.resetSMO,"ax",%progbits
 4247              	 .align 2
 4248              	 .global resetSMO
 4249              	 .code 16
 4250              	 .thumb_func
 4252              	resetSMO:
 4253              	.LFB482:
1152:../main.c     **** /*
1153:../main.c     ****  Function:Dua gia tri bien dau ra cua bo quan sat dong dien, back emf ve 0 (reset ve 0)
1154:../main.c     ****  */
1155:../main.c     **** void resetSMO()
1156:../main.c     **** {
 4254              	 .loc 1 1156 0
 4255              	 .cfi_startproc
 4256 0000 80B5     	 push {r7,lr}
 4257              	.LCFI47:
 4258              	 .cfi_def_cfa_offset 8
 4259              	 .cfi_offset 7,-8
 4260              	 .cfi_offset 14,-4
 4261 0002 00AF     	 add r7,sp,#0
 4262              	.LCFI48:
 4263              	 .cfi_def_cfa_register 7
1157:../main.c     ****     IalphaHat = 0;
 4264              	 .loc 1 1157 0
 4265 0004 064B     	 ldr r3,.L175
 4266 0006 0022     	 mov r2,#0
 4267 0008 1A60     	 str r2,[r3]
1158:../main.c     ****     IbetaHat = 0;
 4268              	 .loc 1 1158 0
 4269 000a 064B     	 ldr r3,.L175+4
 4270 000c 0022     	 mov r2,#0
 4271 000e 1A60     	 str r2,[r3]
1159:../main.c     ****     EalphaHat = 0;
 4272              	 .loc 1 1159 0
 4273 0010 054B     	 ldr r3,.L175+8
 4274 0012 0022     	 mov r2,#0
 4275 0014 1A60     	 str r2,[r3]
1160:../main.c     ****     EbetaHat = 0;
 4276              	 .loc 1 1160 0
 4277 0016 054B     	 ldr r3,.L175+12
 4278 0018 0022     	 mov r2,#0
 4279 001a 1A60     	 str r2,[r3]
1161:../main.c     **** }
 4280              	 .loc 1 1161 0
 4281 001c BD46     	 mov sp,r7
 4282              	 
 4283 001e 80BD     	 pop {r7,pc}
 4284              	.L176:
 4285              	 .align 2
 4286              	.L175:
 4287 0020 00000000 	 .word IalphaHat
 4288 0024 00000000 	 .word IbetaHat
 4289 0028 00000000 	 .word EalphaHat
 4290 002c 00000000 	 .word EbetaHat
 4291              	 .cfi_endproc
 4292              	.LFE482:
 4294              	 .global __aeabi_f2d
 4295              	 .global __aeabi_d2f
 4296              	 .global __aeabi_dsub
 4297              	 .global __aeabi_ddiv
 4298              	 .global __aeabi_dmul
 4299              	 .section .text.currentCoeffCal,"ax",%progbits
 4300              	 .align 2
 4301              	 .global currentCoeffCal
 4302              	 .code 16
 4303              	 .thumb_func
 4305              	currentCoeffCal:
 4306              	.LFB483:
1162:../main.c     **** /*
1163:../main.c     ****  Function:Bo quan sat dong dien  tinh toan dong dien uoc luong sau do so sanh voi dong dien sau khi
1164:../main.c     ****  Input:current_alpha, Usalpha, EalphaHat (tuong tu voi beta)
1165:../main.c     ****  Output:Balpha, IalphaHat (tuong tu voi beta)
1166:../main.c     ****  */
1167:../main.c     **** void currentCoeffCal(void)
1168:../main.c     **** {
 4307              	 .loc 1 1168 0
 4308              	 .cfi_startproc
 4309 0000 B0B5     	 push {r4,r5,r7,lr}
 4310              	.LCFI49:
 4311              	 .cfi_def_cfa_offset 16
 4312              	 .cfi_offset 4,-16
 4313              	 .cfi_offset 5,-12
 4314              	 .cfi_offset 7,-8
 4315              	 .cfi_offset 14,-4
 4316 0002 00AF     	 add r7,sp,#0
 4317              	.LCFI50:
 4318              	 .cfi_def_cfa_register 7
1169:../main.c     ****         aIObs = (exp(-Rs/(Ls*Ts)));
 4319              	 .loc 1 1169 0
 4320 0004 5148     	 ldr r0,.L178
 4321 0006 0021     	 mov r1,#0
 4322 0008 FFF7FEFF 	 bl __aeabi_fdiv
 4323 000c 031C     	 add r3,r0,#0
 4324 000e 181C     	 add r0,r3,#0
 4325 0010 FFF7FEFF 	 bl __aeabi_f2d
 4326 0014 021C     	 mov r2,r0
 4327 0016 0B1C     	 mov r3,r1
 4328 0018 101C     	 mov r0,r2
 4329 001a 191C     	 mov r1,r3
 4330 001c FFF7FEFF 	 bl exp
 4331 0020 021C     	 mov r2,r0
 4332 0022 0B1C     	 mov r3,r1
 4333 0024 101C     	 mov r0,r2
 4334 0026 191C     	 mov r1,r3
 4335 0028 FFF7FEFF 	 bl __aeabi_d2f
 4336 002c 021C     	 add r2,r0,#0
 4337 002e 484B     	 ldr r3,.L178+4
 4338 0030 1A60     	 str r2,[r3]
1170:../main.c     ****         b1IObs = (float)((exp(-Rs/(Ls*Ts))-1.0f)/Rs);
 4339              	 .loc 1 1170 0
 4340 0032 4648     	 ldr r0,.L178
 4341 0034 0021     	 mov r1,#0
 4342 0036 FFF7FEFF 	 bl __aeabi_fdiv
 4343 003a 031C     	 add r3,r0,#0
 4344 003c 181C     	 add r0,r3,#0
 4345 003e FFF7FEFF 	 bl __aeabi_f2d
 4346 0042 021C     	 mov r2,r0
 4347 0044 0B1C     	 mov r3,r1
 4348 0046 101C     	 mov r0,r2
 4349 0048 191C     	 mov r1,r3
 4350 004a FFF7FEFF 	 bl exp
 4351 004e 021C     	 mov r2,r0
 4352 0050 0B1C     	 mov r3,r1
 4353 0052 101C     	 mov r0,r2
 4354 0054 191C     	 mov r1,r3
 4355 0056 0022     	 mov r2,#0
 4356 0058 3E4B     	 ldr r3,.L178+8
 4357 005a FFF7FEFF 	 bl __aeabi_dsub
 4358 005e 021C     	 mov r2,r0
 4359 0060 0B1C     	 mov r3,r1
 4360 0062 101C     	 mov r0,r2
 4361 0064 191C     	 mov r1,r3
 4362 0066 C022     	 mov r2,#192
 4363 0068 D205     	 lsl r2,r2,#23
 4364 006a 3B4B     	 ldr r3,.L178+12
 4365 006c FFF7FEFF 	 bl __aeabi_ddiv
 4366 0070 021C     	 mov r2,r0
 4367 0072 0B1C     	 mov r3,r1
 4368 0074 101C     	 mov r0,r2
 4369 0076 191C     	 mov r1,r3
 4370 0078 FFF7FEFF 	 bl __aeabi_d2f
 4371 007c 021C     	 add r2,r0,#0
 4372 007e 374B     	 ldr r3,.L178+16
 4373 0080 1A60     	 str r2,[r3]
1171:../main.c     ****         b2IObs = (float)(-((exp(-Rs/(Ls*Ts))-1.0f)/Rs));
 4374              	 .loc 1 1171 0
 4375 0082 3248     	 ldr r0,.L178
 4376 0084 0021     	 mov r1,#0
 4377 0086 FFF7FEFF 	 bl __aeabi_fdiv
 4378 008a 031C     	 add r3,r0,#0
 4379 008c 181C     	 add r0,r3,#0
 4380 008e FFF7FEFF 	 bl __aeabi_f2d
 4381 0092 021C     	 mov r2,r0
 4382 0094 0B1C     	 mov r3,r1
 4383 0096 101C     	 mov r0,r2
 4384 0098 191C     	 mov r1,r3
 4385 009a FFF7FEFF 	 bl exp
 4386 009e 021C     	 mov r2,r0
 4387 00a0 0B1C     	 mov r3,r1
 4388 00a2 101C     	 mov r0,r2
 4389 00a4 191C     	 mov r1,r3
 4390 00a6 0022     	 mov r2,#0
 4391 00a8 2A4B     	 ldr r3,.L178+8
 4392 00aa FFF7FEFF 	 bl __aeabi_dsub
 4393 00ae 021C     	 mov r2,r0
 4394 00b0 0B1C     	 mov r3,r1
 4395 00b2 101C     	 mov r0,r2
 4396 00b4 191C     	 mov r1,r3
 4397 00b6 C022     	 mov r2,#192
 4398 00b8 D205     	 lsl r2,r2,#23
 4399 00ba 274B     	 ldr r3,.L178+12
 4400 00bc FFF7FEFF 	 bl __aeabi_ddiv
 4401 00c0 021C     	 mov r2,r0
 4402 00c2 0B1C     	 mov r3,r1
 4403 00c4 101C     	 mov r0,r2
 4404 00c6 191C     	 mov r1,r3
 4405 00c8 FFF7FEFF 	 bl __aeabi_d2f
 4406 00cc 021C     	 add r2,r0,#0
 4407 00ce 8023     	 mov r3,#128
 4408 00d0 1B06     	 lsl r3,r3,#24
 4409 00d2 5A40     	 eor r2,r3
 4410 00d4 224B     	 ldr r3,.L178+20
 4411 00d6 1A60     	 str r2,[r3]
1172:../main.c     ****         b3IObs = (float)(Ls*(-((exp(-Rs/(Ls*Ts))-1.0f)/Rs)));
 4412              	 .loc 1 1172 0
 4413 00d8 1C48     	 ldr r0,.L178
 4414 00da 0021     	 mov r1,#0
 4415 00dc FFF7FEFF 	 bl __aeabi_fdiv
 4416 00e0 031C     	 add r3,r0,#0
 4417 00e2 181C     	 add r0,r3,#0
 4418 00e4 FFF7FEFF 	 bl __aeabi_f2d
 4419 00e8 021C     	 mov r2,r0
 4420 00ea 0B1C     	 mov r3,r1
 4421 00ec 101C     	 mov r0,r2
 4422 00ee 191C     	 mov r1,r3
 4423 00f0 FFF7FEFF 	 bl exp
 4424 00f4 021C     	 mov r2,r0
 4425 00f6 0B1C     	 mov r3,r1
 4426 00f8 101C     	 mov r0,r2
 4427 00fa 191C     	 mov r1,r3
 4428 00fc 0022     	 mov r2,#0
 4429 00fe 154B     	 ldr r3,.L178+8
 4430 0100 FFF7FEFF 	 bl __aeabi_dsub
 4431 0104 021C     	 mov r2,r0
 4432 0106 0B1C     	 mov r3,r1
 4433 0108 101C     	 mov r0,r2
 4434 010a 191C     	 mov r1,r3
 4435 010c C022     	 mov r2,#192
 4436 010e D205     	 lsl r2,r2,#23
 4437 0110 114B     	 ldr r3,.L178+12
 4438 0112 FFF7FEFF 	 bl __aeabi_ddiv
 4439 0116 021C     	 mov r2,r0
 4440 0118 0B1C     	 mov r3,r1
 4441 011a 111C     	 mov r1,r2
 4442 011c 0C1C     	 mov r4,r1
 4443 011e 8021     	 mov r1,#128
 4444 0120 0906     	 lsl r1,r1,#24
 4445 0122 5940     	 eor r1,r3
 4446 0124 0D1C     	 mov r5,r1
 4447 0126 201C     	 mov r0,r4
 4448 0128 291C     	 mov r1,r5
 4449 012a E022     	 mov r2,#224
 4450 012c 1206     	 lsl r2,r2,#24
 4451 012e 0D4B     	 ldr r3,.L178+24
 4452 0130 FFF7FEFF 	 bl __aeabi_dmul
 4453 0134 031C     	 mov r3,r0
 4454 0136 0C1C     	 mov r4,r1
 4455 0138 181C     	 mov r0,r3
 4456 013a 211C     	 mov r1,r4
 4457 013c FFF7FEFF 	 bl __aeabi_d2f
 4458 0140 021C     	 add r2,r0,#0
 4459 0142 094B     	 ldr r3,.L178+28
 4460 0144 1A60     	 str r2,[r3]
1173:../main.c     **** }
 4461              	 .loc 1 1173 0
 4462 0146 BD46     	 mov sp,r7
 4463              	 
 4464 0148 B0BD     	 pop {r4,r5,r7,pc}
 4465              	.L179:
 4466 014a C046     	 .align 2
 4467              	.L178:
 4468 014c DBF94EC0 	 .word -1068566053
 4469 0150 00000000 	 .word aIObs
 4470 0154 0000F03F 	 .word 1072693248
 4471 0158 3BDF0940 	 .word 1074388795
 4472 015c 00000000 	 .word b1IObs
 4473 0160 00000000 	 .word b2IObs
 4474 0164 552B633F 	 .word 1063463765
 4475 0168 00000000 	 .word b3IObs
 4476              	 .cfi_endproc
 4477              	.LFE483:
 4479              	 .section .text.currentObserver,"ax",%progbits
 4480              	 .align 2
 4481              	 .global currentObserver
 4482              	 .code 16
 4483              	 .thumb_func
 4485              	currentObserver:
 4486              	.LFB484:
1174:../main.c     **** void currentObserver(float Current, float U, float Ehat, float * Ihat, float * B)
1175:../main.c     **** {
 4487              	 .loc 1 1175 0
 4488              	 .cfi_startproc
 4489 0000 90B5     	 push {r4,r7,lr}
 4490              	.LCFI51:
 4491              	 .cfi_def_cfa_offset 12
 4492              	 .cfi_offset 4,-12
 4493              	 .cfi_offset 7,-8
 4494              	 .cfi_offset 14,-4
 4495 0002 87B0     	 sub sp,sp,#28
 4496              	.LCFI52:
 4497              	 .cfi_def_cfa_offset 40
 4498 0004 00AF     	 add r7,sp,#0
 4499              	.LCFI53:
 4500              	 .cfi_def_cfa_register 7
 4501 0006 F860     	 str r0,[r7,#12]
 4502 0008 B960     	 str r1,[r7,#8]
 4503 000a 7A60     	 str r2,[r7,#4]
 4504 000c 3B60     	 str r3,[r7]
1176:../main.c     ****     float tmp1;
1177:../main.c     **** 
1178:../main.c     ****     tmp1 = Current - *Ihat;
 4505              	 .loc 1 1178 0
 4506 000e 3B68     	 ldr r3,[r7]
 4507 0010 1B68     	 ldr r3,[r3]
 4508 0012 F868     	 ldr r0,[r7,#12]
 4509 0014 191C     	 add r1,r3,#0
 4510 0016 FFF7FEFF 	 bl __aeabi_fsub
 4511 001a 031C     	 add r3,r0,#0
 4512 001c 7B61     	 str r3,[r7,#20]
1179:../main.c     **** 
1180:../main.c     ****     if(boundary_I < tmp1)
 4513              	 .loc 1 1180 0
 4514 001e 7869     	 ldr r0,[r7,#20]
 4515 0020 FC21     	 mov r1,#252
 4516 0022 8905     	 lsl r1,r1,#22
 4517 0024 FFF7FEFF 	 bl __aeabi_fcmpgt
 4518 0028 031E     	 sub r3,r0,#0
 4519 002a 03D0     	 beq .L188
1181:../main.c     ****     {
1182:../main.c     ****         *B = currentObserver_gain;
 4520              	 .loc 1 1182 0
 4521 002c BB6A     	 ldr r3,[r7,#40]
 4522 002e 274A     	 ldr r2,.L190
 4523 0030 1A60     	 str r2,[r3]
 4524 0032 12E0     	 b .L183
 4525              	.L188:
1183:../main.c     ****     }
1184:../main.c     ****     else if(boundary_I > tmp1)
 4526              	 .loc 1 1184 0
 4527 0034 7869     	 ldr r0,[r7,#20]
 4528 0036 FC21     	 mov r1,#252
 4529 0038 8905     	 lsl r1,r1,#22
 4530 003a FFF7FEFF 	 bl __aeabi_fcmplt
 4531 003e 031E     	 sub r3,r0,#0
 4532 0040 03D0     	 beq .L189
1185:../main.c     ****     {
1186:../main.c     ****         *B = -currentObserver_gain;
 4533              	 .loc 1 1186 0
 4534 0042 BB6A     	 ldr r3,[r7,#40]
 4535 0044 224A     	 ldr r2,.L190+4
 4536 0046 1A60     	 str r2,[r3]
 4537 0048 07E0     	 b .L183
 4538              	.L189:
1187:../main.c     ****     }
1188:../main.c     ****     else
1189:../main.c     ****     {
1190:../main.c     ****         *B = tmp1 *(float)(currentObserver_gain/boundary_I) ;
 4539              	 .loc 1 1190 0
 4540 004a 7869     	 ldr r0,[r7,#20]
 4541 004c 2149     	 ldr r1,.L190+8
 4542 004e FFF7FEFF 	 bl __aeabi_fmul
 4543 0052 031C     	 add r3,r0,#0
 4544 0054 1A1C     	 add r2,r3,#0
 4545 0056 BB6A     	 ldr r3,[r7,#40]
 4546 0058 1A60     	 str r2,[r3]
 4547              	.L183:
1191:../main.c     ****     }
1192:../main.c     **** 
1193:../main.c     ****     *Ihat = (aIObs * (*Ihat)) + (b1IObs * Ehat) + (b2IObs * U) + (b3IObs * (*B));
 4548              	 .loc 1 1193 0
 4549 005a 3B68     	 ldr r3,[r7]
 4550 005c 1A68     	 ldr r2,[r3]
 4551 005e 1E4B     	 ldr r3,.L190+12
 4552 0060 1B68     	 ldr r3,[r3]
 4553 0062 101C     	 add r0,r2,#0
 4554 0064 191C     	 add r1,r3,#0
 4555 0066 FFF7FEFF 	 bl __aeabi_fmul
 4556 006a 031C     	 add r3,r0,#0
 4557 006c 1C1C     	 add r4,r3,#0
 4558 006e 1B4B     	 ldr r3,.L190+16
 4559 0070 1B68     	 ldr r3,[r3]
 4560 0072 181C     	 add r0,r3,#0
 4561 0074 7968     	 ldr r1,[r7,#4]
 4562 0076 FFF7FEFF 	 bl __aeabi_fmul
 4563 007a 031C     	 add r3,r0,#0
 4564 007c 201C     	 add r0,r4,#0
 4565 007e 191C     	 add r1,r3,#0
 4566 0080 FFF7FEFF 	 bl __aeabi_fadd
 4567 0084 031C     	 add r3,r0,#0
 4568 0086 1C1C     	 add r4,r3,#0
 4569 0088 154B     	 ldr r3,.L190+20
 4570 008a 1B68     	 ldr r3,[r3]
 4571 008c 181C     	 add r0,r3,#0
 4572 008e B968     	 ldr r1,[r7,#8]
 4573 0090 FFF7FEFF 	 bl __aeabi_fmul
 4574 0094 031C     	 add r3,r0,#0
 4575 0096 201C     	 add r0,r4,#0
 4576 0098 191C     	 add r1,r3,#0
 4577 009a FFF7FEFF 	 bl __aeabi_fadd
 4578 009e 031C     	 add r3,r0,#0
 4579 00a0 1C1C     	 add r4,r3,#0
 4580 00a2 BB6A     	 ldr r3,[r7,#40]
 4581 00a4 1A68     	 ldr r2,[r3]
 4582 00a6 0F4B     	 ldr r3,.L190+24
 4583 00a8 1B68     	 ldr r3,[r3]
 4584 00aa 101C     	 add r0,r2,#0
 4585 00ac 191C     	 add r1,r3,#0
 4586 00ae FFF7FEFF 	 bl __aeabi_fmul
 4587 00b2 031C     	 add r3,r0,#0
 4588 00b4 201C     	 add r0,r4,#0
 4589 00b6 191C     	 add r1,r3,#0
 4590 00b8 FFF7FEFF 	 bl __aeabi_fadd
 4591 00bc 031C     	 add r3,r0,#0
 4592 00be 1A1C     	 add r2,r3,#0
 4593 00c0 3B68     	 ldr r3,[r7]
 4594 00c2 1A60     	 str r2,[r3]
1194:../main.c     **** }
 4595              	 .loc 1 1194 0
 4596 00c4 BD46     	 mov sp,r7
 4597 00c6 07B0     	 add sp,sp,#28
 4598              	 
 4599 00c8 90BD     	 pop {r4,r7,pc}
 4600              	.L191:
 4601 00ca C046     	 .align 2
 4602              	.L190:
 4603 00cc 0000FA45 	 .word 1174011904
 4604 00d0 0000FAC5 	 .word -973471744
 4605 00d4 00007A46 	 .word 1182400512
 4606 00d8 00000000 	 .word aIObs
 4607 00dc 00000000 	 .word b1IObs
 4608 00e0 00000000 	 .word b2IObs
 4609 00e4 00000000 	 .word b3IObs
 4610              	 .cfi_endproc
 4611              	.LFE484:
 4613              	 .global __aeabi_dcmplt
 4614              	 .global __aeabi_dcmpgt
 4615              	 .section .text.BEMFobsCoeffCal,"ax",%progbits
 4616              	 .align 2
 4617              	 .global BEMFobsCoeffCal
 4618              	 .code 16
 4619              	 .thumb_func
 4621              	BEMFobsCoeffCal:
 4622              	.LFB485:
1195:../main.c     **** /*
1196:../main.c     ****  Function: tinh toan he so bo quan sat back emf
1197:../main.c     ****  Input:We toc do khi chay do duoc
1198:../main.c     ****  Output:he so bo quan sat BEMFobserver
1199:../main.c     ****  */
1200:../main.c     **** void BEMFobsCoeffCal(float WeObs)
1201:../main.c     **** {
 4623              	 .loc 1 1201 0
 4624              	 .cfi_startproc
 4625 0000 90B5     	 push {r4,r7,lr}
 4626              	.LCFI54:
 4627              	 .cfi_def_cfa_offset 12
 4628              	 .cfi_offset 4,-12
 4629              	 .cfi_offset 7,-8
 4630              	 .cfi_offset 14,-4
 4631 0002 85B0     	 sub sp,sp,#20
 4632              	.LCFI55:
 4633              	 .cfi_def_cfa_offset 32
 4634 0004 00AF     	 add r7,sp,#0
 4635              	.LCFI56:
 4636              	 .cfi_def_cfa_register 7
 4637 0006 7860     	 str r0,[r7,#4]
1202:../main.c     ****     float tmp1;
1203:../main.c     ****     float tmp2;
1204:../main.c     **** 
1205:../main.c     ****     if((0.000001 > WeObs) && (0.000001 < WeObs))
 4638              	 .loc 1 1205 0
 4639 0008 7868     	 ldr r0,[r7,#4]
 4640 000a FFF7FEFF 	 bl __aeabi_f2d
 4641 000e 031C     	 mov r3,r0
 4642 0010 0C1C     	 mov r4,r1
 4643 0012 181C     	 mov r0,r3
 4644 0014 211C     	 mov r1,r4
 4645 0016 314A     	 ldr r2,.L199
 4646 0018 314B     	 ldr r3,.L199+4
 4647 001a FFF7FEFF 	 bl __aeabi_dcmplt
 4648 001e 031E     	 sub r3,r0,#0
 4649 0020 0DD0     	 beq .L193
 4650              	 .loc 1 1205 0 is_stmt 0 discriminator 1
 4651 0022 7868     	 ldr r0,[r7,#4]
 4652 0024 FFF7FEFF 	 bl __aeabi_f2d
 4653 0028 031C     	 mov r3,r0
 4654 002a 0C1C     	 mov r4,r1
 4655 002c 181C     	 mov r0,r3
 4656 002e 211C     	 mov r1,r4
 4657 0030 2A4A     	 ldr r2,.L199
 4658 0032 2B4B     	 ldr r3,.L199+4
 4659 0034 FFF7FEFF 	 bl __aeabi_dcmpgt
 4660 0038 031E     	 sub r3,r0,#0
 4661 003a 00D0     	 beq .L193
1206:../main.c     ****     {
1207:../main.c     ****         return;
 4662              	 .loc 1 1207 0 is_stmt 1
 4663 003c 4AE0     	 b .L192
 4664              	.L193:
1208:../main.c     ****     }
1209:../main.c     **** 
1210:../main.c     ****     tmp1 = WeObs * Ts;
 4665              	 .loc 1 1210 0
 4666 003e 7868     	 ldr r0,[r7,#4]
 4667 0040 0021     	 mov r1,#0
 4668 0042 FFF7FEFF 	 bl __aeabi_fmul
 4669 0046 031C     	 add r3,r0,#0
 4670 0048 FB60     	 str r3,[r7,#12]
1211:../main.c     ****     a1BEMFobs = cosChebyshevF(tmp1);
 4671              	 .loc 1 1211 0
 4672 004a FB68     	 ldr r3,[r7,#12]
 4673 004c 181C     	 add r0,r3,#0
 4674 004e FFF7FEFF 	 bl cosChebyshevF
 4675 0052 021C     	 add r2,r0,#0
 4676 0054 234B     	 ldr r3,.L199+8
 4677 0056 1A60     	 str r2,[r3]
1212:../main.c     ****     a2BEMFobs = sinChebyshevF(tmp1);
 4678              	 .loc 1 1212 0
 4679 0058 FB68     	 ldr r3,[r7,#12]
 4680 005a 181C     	 add r0,r3,#0
 4681 005c FFF7FEFF 	 bl sinChebyshevF
 4682 0060 021C     	 add r2,r0,#0
 4683 0062 214B     	 ldr r3,.L199+12
 4684 0064 1A60     	 str r2,[r3]
1213:../main.c     ****     tmp1 = 1.0f - a1BEMFobs;
 4685              	 .loc 1 1213 0
 4686 0066 1F4B     	 ldr r3,.L199+8
 4687 0068 1B68     	 ldr r3,[r3]
 4688 006a FE20     	 mov r0,#254
 4689 006c 8005     	 lsl r0,r0,#22
 4690 006e 191C     	 add r1,r3,#0
 4691 0070 FFF7FEFF 	 bl __aeabi_fsub
 4692 0074 031C     	 add r3,r0,#0
 4693 0076 FB60     	 str r3,[r7,#12]
1214:../main.c     ****     tmp2 = bemfObserver_gain / WeObs;
 4694              	 .loc 1 1214 0
 4695 0078 1C48     	 ldr r0,.L199+16
 4696 007a 7968     	 ldr r1,[r7,#4]
 4697 007c FFF7FEFF 	 bl __aeabi_fdiv
 4698 0080 031C     	 add r3,r0,#0
 4699 0082 BB60     	 str r3,[r7,#8]
1215:../main.c     ****     b1BEMFobs = ((tmp2 * a2BEMFobs) + tmp1) * Ls;
 4700              	 .loc 1 1215 0
 4701 0084 184B     	 ldr r3,.L199+12
 4702 0086 1B68     	 ldr r3,[r3]
 4703 0088 181C     	 add r0,r3,#0
 4704 008a B968     	 ldr r1,[r7,#8]
 4705 008c FFF7FEFF 	 bl __aeabi_fmul
 4706 0090 031C     	 add r3,r0,#0
 4707 0092 181C     	 add r0,r3,#0
 4708 0094 F968     	 ldr r1,[r7,#12]
 4709 0096 FFF7FEFF 	 bl __aeabi_fadd
 4710 009a 031C     	 add r3,r0,#0
 4711 009c 181C     	 add r0,r3,#0
 4712 009e 1449     	 ldr r1,.L199+20
 4713 00a0 FFF7FEFF 	 bl __aeabi_fmul
 4714 00a4 031C     	 add r3,r0,#0
 4715 00a6 1A1C     	 add r2,r3,#0
 4716 00a8 124B     	 ldr r3,.L199+24
 4717 00aa 1A60     	 str r2,[r3]
1216:../main.c     ****     b2BEMFobs = (a2BEMFobs - (tmp2 * tmp1)) * Ls;
 4718              	 .loc 1 1216 0
 4719 00ac 0E4B     	 ldr r3,.L199+12
 4720 00ae 1C68     	 ldr r4,[r3]
 4721 00b0 B868     	 ldr r0,[r7,#8]
 4722 00b2 F968     	 ldr r1,[r7,#12]
 4723 00b4 FFF7FEFF 	 bl __aeabi_fmul
 4724 00b8 031C     	 add r3,r0,#0
 4725 00ba 201C     	 add r0,r4,#0
 4726 00bc 191C     	 add r1,r3,#0
 4727 00be FFF7FEFF 	 bl __aeabi_fsub
 4728 00c2 031C     	 add r3,r0,#0
 4729 00c4 181C     	 add r0,r3,#0
 4730 00c6 0A49     	 ldr r1,.L199+20
 4731 00c8 FFF7FEFF 	 bl __aeabi_fmul
 4732 00cc 031C     	 add r3,r0,#0
 4733 00ce 1A1C     	 add r2,r3,#0
 4734 00d0 094B     	 ldr r3,.L199+28
 4735 00d2 1A60     	 str r2,[r3]
 4736              	.L192:
1217:../main.c     **** }
 4737              	 .loc 1 1217 0
 4738 00d4 BD46     	 mov sp,r7
 4739 00d6 05B0     	 add sp,sp,#20
 4740              	 
 4741 00d8 90BD     	 pop {r4,r7,pc}
 4742              	.L200:
 4743 00da C046     	 .align 2
 4744              	.L199:
 4745 00dc 8DEDB5A0 	 .word -1598689907
 4746 00e0 F7C6B03E 	 .word 1051772663
 4747 00e4 00000000 	 .word a1BEMFobs
 4748 00e8 00000000 	 .word a2BEMFobs
 4749 00ec 00007AC4 	 .word -998637568
 4750 00f0 AF5A193B 	 .word 991517359
 4751 00f4 00000000 	 .word b1BEMFobs
 4752 00f8 00000000 	 .word b2BEMFobs
 4753              	 .cfi_endproc
 4754              	.LFE485:
 4756              	 .section .text.BEMFobserver,"ax",%progbits
 4757              	 .align 2
 4758              	 .global BEMFobserver
 4759              	 .code 16
 4760              	 .thumb_func
 4762              	BEMFobserver:
 4763              	.LFB486:
1218:../main.c     **** /*
1219:../main.c     ****  Function: Tinh toan back emf uoc luong
1220:../main.c     ****  Input:Balpha, Bbeta
1221:../main.c     ****  Output:EalphaHat,EbetaHat
1222:../main.c     ****  */
1223:../main.c     **** void BEMFobserver(float * E1hat, float E2hat, float B1, float B2)
1224:../main.c     **** {
 4764              	 .loc 1 1224 0
 4765              	 .cfi_startproc
 4766 0000 90B5     	 push {r4,r7,lr}
 4767              	.LCFI57:
 4768              	 .cfi_def_cfa_offset 12
 4769              	 .cfi_offset 4,-12
 4770              	 .cfi_offset 7,-8
 4771              	 .cfi_offset 14,-4
 4772 0002 85B0     	 sub sp,sp,#20
 4773              	.LCFI58:
 4774              	 .cfi_def_cfa_offset 32
 4775 0004 00AF     	 add r7,sp,#0
 4776              	.LCFI59:
 4777              	 .cfi_def_cfa_register 7
 4778 0006 F860     	 str r0,[r7,#12]
 4779 0008 B960     	 str r1,[r7,#8]
 4780 000a 7A60     	 str r2,[r7,#4]
 4781 000c 3B60     	 str r3,[r7]
1225:../main.c     ****      *E1hat =  (a1BEMFobs * (*E1hat)) + (a2BEMFobs * E2hat) + (b1BEMFobs * B1) + (b2BEMFobs * B2);
 4782              	 .loc 1 1225 0
 4783 000e FB68     	 ldr r3,[r7,#12]
 4784 0010 1A68     	 ldr r2,[r3]
 4785 0012 1A4B     	 ldr r3,.L202
 4786 0014 1B68     	 ldr r3,[r3]
 4787 0016 101C     	 add r0,r2,#0
 4788 0018 191C     	 add r1,r3,#0
 4789 001a FFF7FEFF 	 bl __aeabi_fmul
 4790 001e 031C     	 add r3,r0,#0
 4791 0020 1C1C     	 add r4,r3,#0
 4792 0022 174B     	 ldr r3,.L202+4
 4793 0024 1B68     	 ldr r3,[r3]
 4794 0026 181C     	 add r0,r3,#0
 4795 0028 B968     	 ldr r1,[r7,#8]
 4796 002a FFF7FEFF 	 bl __aeabi_fmul
 4797 002e 031C     	 add r3,r0,#0
 4798 0030 201C     	 add r0,r4,#0
 4799 0032 191C     	 add r1,r3,#0
 4800 0034 FFF7FEFF 	 bl __aeabi_fadd
 4801 0038 031C     	 add r3,r0,#0
 4802 003a 1C1C     	 add r4,r3,#0
 4803 003c 114B     	 ldr r3,.L202+8
 4804 003e 1B68     	 ldr r3,[r3]
 4805 0040 181C     	 add r0,r3,#0
 4806 0042 7968     	 ldr r1,[r7,#4]
 4807 0044 FFF7FEFF 	 bl __aeabi_fmul
 4808 0048 031C     	 add r3,r0,#0
 4809 004a 201C     	 add r0,r4,#0
 4810 004c 191C     	 add r1,r3,#0
 4811 004e FFF7FEFF 	 bl __aeabi_fadd
 4812 0052 031C     	 add r3,r0,#0
 4813 0054 1C1C     	 add r4,r3,#0
 4814 0056 0C4B     	 ldr r3,.L202+12
 4815 0058 1B68     	 ldr r3,[r3]
 4816 005a 181C     	 add r0,r3,#0
 4817 005c 3968     	 ldr r1,[r7]
 4818 005e FFF7FEFF 	 bl __aeabi_fmul
 4819 0062 031C     	 add r3,r0,#0
 4820 0064 201C     	 add r0,r4,#0
 4821 0066 191C     	 add r1,r3,#0
 4822 0068 FFF7FEFF 	 bl __aeabi_fadd
 4823 006c 031C     	 add r3,r0,#0
 4824 006e 1A1C     	 add r2,r3,#0
 4825 0070 FB68     	 ldr r3,[r7,#12]
 4826 0072 1A60     	 str r2,[r3]
1226:../main.c     **** }
 4827              	 .loc 1 1226 0
 4828 0074 BD46     	 mov sp,r7
 4829 0076 05B0     	 add sp,sp,#20
 4830              	 
 4831 0078 90BD     	 pop {r4,r7,pc}
 4832              	.L203:
 4833 007a C046     	 .align 2
 4834              	.L202:
 4835 007c 00000000 	 .word a1BEMFobs
 4836 0080 00000000 	 .word a2BEMFobs
 4837 0084 00000000 	 .word b1BEMFobs
 4838 0088 00000000 	 .word b2BEMFobs
 4839              	 .cfi_endproc
 4840              	.LFE486:
 4842              	 .section .text.exeSMO,"ax",%progbits
 4843              	 .align 2
 4844              	 .global exeSMO
 4845              	 .code 16
 4846              	 .thumb_func
 4848              	exeSMO:
 4849              	.LFB487:
1227:../main.c     **** void exeSMO(void){
 4850              	 .loc 1 1227 0
 4851              	 .cfi_startproc
 4852 0000 90B5     	 push {r4,r7,lr}
 4853              	.LCFI60:
 4854              	 .cfi_def_cfa_offset 12
 4855              	 .cfi_offset 4,-12
 4856              	 .cfi_offset 7,-8
 4857              	 .cfi_offset 14,-4
 4858 0002 85B0     	 sub sp,sp,#20
 4859              	.LCFI61:
 4860              	 .cfi_def_cfa_offset 32
 4861 0004 02AF     	 add r7,sp,#8
 4862              	.LCFI62:
 4863              	 .cfi_def_cfa 7,24
1228:../main.c     **** 	float zEalphaHat;
1229:../main.c     **** 	currentObserver(current_alpha, Usalpha, EalphaHat, &IalphaHat, &Balpha);
 4864              	 .loc 1 1229 0
 4865 0006 1F4B     	 ldr r3,.L205
 4866 0008 1868     	 ldr r0,[r3]
 4867 000a 1F4B     	 ldr r3,.L205+4
 4868 000c 1968     	 ldr r1,[r3]
 4869 000e 1F4B     	 ldr r3,.L205+8
 4870 0010 1A68     	 ldr r2,[r3]
 4871 0012 1F4C     	 ldr r4,.L205+12
 4872 0014 1F4B     	 ldr r3,.L205+16
 4873 0016 0093     	 str r3,[sp]
 4874 0018 231C     	 mov r3,r4
 4875 001a FFF7FEFF 	 bl currentObserver
1230:../main.c     **** 	currentObserver(current_beta, Usbeta, EbetaHat, &IbetaHat, &Bbeta);
 4876              	 .loc 1 1230 0
 4877 001e 1E4B     	 ldr r3,.L205+20
 4878 0020 1868     	 ldr r0,[r3]
 4879 0022 1E4B     	 ldr r3,.L205+24
 4880 0024 1968     	 ldr r1,[r3]
 4881 0026 1E4B     	 ldr r3,.L205+28
 4882 0028 1A68     	 ldr r2,[r3]
 4883 002a 1E4C     	 ldr r4,.L205+32
 4884 002c 1E4B     	 ldr r3,.L205+36
 4885 002e 0093     	 str r3,[sp]
 4886 0030 231C     	 mov r3,r4
 4887 0032 FFF7FEFF 	 bl currentObserver
1231:../main.c     **** 	zEalphaHat = EalphaHat;
 4888              	 .loc 1 1231 0
 4889 0036 154B     	 ldr r3,.L205+8
 4890 0038 1B68     	 ldr r3,[r3]
 4891 003a 7B60     	 str r3,[r7,#4]
1232:../main.c     **** 	BEMFobsCoeffCal(We);
 4892              	 .loc 1 1232 0
 4893 003c 1B4B     	 ldr r3,.L205+40
 4894 003e 1B68     	 ldr r3,[r3]
 4895 0040 181C     	 add r0,r3,#0
 4896 0042 FFF7FEFF 	 bl BEMFobsCoeffCal
1233:../main.c     **** 	BEMFobserver(&EalphaHat, -EbetaHat, Balpha, Bbeta);
 4897              	 .loc 1 1233 0
 4898 0046 164B     	 ldr r3,.L205+28
 4899 0048 1B68     	 ldr r3,[r3]
 4900 004a 8022     	 mov r2,#128
 4901 004c 1206     	 lsl r2,r2,#24
 4902 004e 5A40     	 eor r2,r3
 4903 0050 111C     	 mov r1,r2
 4904 0052 104B     	 ldr r3,.L205+16
 4905 0054 1A68     	 ldr r2,[r3]
 4906 0056 144B     	 ldr r3,.L205+36
 4907 0058 1B68     	 ldr r3,[r3]
 4908 005a 0C48     	 ldr r0,.L205+8
 4909 005c FFF7FEFF 	 bl BEMFobserver
1234:../main.c     **** 	BEMFobserver(&EbetaHat, zEalphaHat, Bbeta, -Balpha);
 4910              	 .loc 1 1234 0
 4911 0060 114B     	 ldr r3,.L205+36
 4912 0062 1C68     	 ldr r4,[r3]
 4913 0064 0B4B     	 ldr r3,.L205+16
 4914 0066 1B68     	 ldr r3,[r3]
 4915 0068 8022     	 mov r2,#128
 4916 006a 1206     	 lsl r2,r2,#24
 4917 006c 5340     	 eor r3,r2
 4918 006e 0C49     	 ldr r1,.L205+28
 4919 0070 7A68     	 ldr r2,[r7,#4]
 4920 0072 081C     	 mov r0,r1
 4921 0074 111C     	 add r1,r2,#0
 4922 0076 221C     	 add r2,r4,#0
 4923 0078 FFF7FEFF 	 bl BEMFobserver
1235:../main.c     **** }
 4924              	 .loc 1 1235 0
 4925 007c BD46     	 mov sp,r7
 4926 007e 03B0     	 add sp,sp,#12
 4927              	 
 4928 0080 90BD     	 pop {r4,r7,pc}
 4929              	.L206:
 4930 0082 C046     	 .align 2
 4931              	.L205:
 4932 0084 00000000 	 .word current_alpha
 4933 0088 00000000 	 .word Usalpha
 4934 008c 00000000 	 .word EalphaHat
 4935 0090 00000000 	 .word IalphaHat
 4936 0094 00000000 	 .word Balpha
 4937 0098 00000000 	 .word current_beta
 4938 009c 00000000 	 .word Usbeta
 4939 00a0 00000000 	 .word EbetaHat
 4940 00a4 00000000 	 .word IbetaHat
 4941 00a8 00000000 	 .word Bbeta
 4942 00ac 00000000 	 .word We
 4943              	 .cfi_endproc
 4944              	.LFE487:
 4946              	 .section .text.polynmApproxAtanf,"ax",%progbits
 4947              	 .align 2
 4948              	 .global polynmApproxAtanf
 4949              	 .code 16
 4950              	 .thumb_func
 4952              	polynmApproxAtanf:
 4953              	.LFB488:
1236:../main.c     **** /*
1237:../main.c     ****  Function: Tinh toan arctan cua gia tri tan=sin/cos
1238:../main.c     ****  Input:tanVal
1239:../main.c     ****  Output: tra ve goc trong khoang -pi/2 den pi/2
1240:../main.c     ****  */
1241:../main.c     **** float polynmApproxAtanf(float tanVal)
1242:../main.c     **** {
 4954              	 .loc 1 1242 0
 4955              	 .cfi_startproc
 4956 0000 80B5     	 push {r7,lr}
 4957              	.LCFI63:
 4958              	 .cfi_def_cfa_offset 8
 4959              	 .cfi_offset 7,-8
 4960              	 .cfi_offset 14,-4
 4961 0002 84B0     	 sub sp,sp,#16
 4962              	.LCFI64:
 4963              	 .cfi_def_cfa_offset 24
 4964 0004 00AF     	 add r7,sp,#0
 4965              	.LCFI65:
 4966              	 .cfi_def_cfa_register 7
 4967 0006 7860     	 str r0,[r7,#4]
1243:../main.c     ****     float z, zz;
1244:../main.c     **** 
1245:../main.c     ****     if(1.0f < tanVal)
 4968              	 .loc 1 1245 0
 4969 0008 7868     	 ldr r0,[r7,#4]
 4970 000a FE21     	 mov r1,#254
 4971 000c 8905     	 lsl r1,r1,#22
 4972 000e FFF7FEFF 	 bl __aeabi_fcmpgt
 4973 0012 031E     	 sub r3,r0,#0
 4974 0014 03D0     	 beq .L216
1246:../main.c     ****     {
1247:../main.c     ****         z = 1;
 4975              	 .loc 1 1247 0
 4976 0016 FE23     	 mov r3,#254
 4977 0018 9B05     	 lsl r3,r3,#22
 4978 001a FB60     	 str r3,[r7,#12]
 4979 001c 0AE0     	 b .L210
 4980              	.L216:
1248:../main.c     ****     }
1249:../main.c     ****     else if(-1.0f > tanVal)
 4981              	 .loc 1 1249 0
 4982 001e 7868     	 ldr r0,[r7,#4]
 4983 0020 1649     	 ldr r1,.L218
 4984 0022 FFF7FEFF 	 bl __aeabi_fcmplt
 4985 0026 031E     	 sub r3,r0,#0
 4986 0028 02D0     	 beq .L217
1250:../main.c     ****     {
1251:../main.c     ****         z = -1;
 4987              	 .loc 1 1251 0
 4988 002a 144B     	 ldr r3,.L218
 4989 002c FB60     	 str r3,[r7,#12]
 4990 002e 01E0     	 b .L210
 4991              	.L217:
1252:../main.c     ****     }
1253:../main.c     ****     else
1254:../main.c     ****     {
1255:../main.c     ****         z = tanVal;
 4992              	 .loc 1 1255 0
 4993 0030 7B68     	 ldr r3,[r7,#4]
 4994 0032 FB60     	 str r3,[r7,#12]
 4995              	.L210:
1256:../main.c     ****     }
1257:../main.c     **** 
1258:../main.c     ****     zz = z * z;
 4996              	 .loc 1 1258 0
 4997 0034 F868     	 ldr r0,[r7,#12]
 4998 0036 F968     	 ldr r1,[r7,#12]
 4999 0038 FFF7FEFF 	 bl __aeabi_fmul
 5000 003c 031C     	 add r3,r0,#0
 5001 003e BB60     	 str r3,[r7,#8]
1259:../main.c     **** 
1260:../main.c     ****     return ((RL_A*zz + RL_B)*zz + RL_C)*z;
 5002              	 .loc 1 1260 0
 5003 0040 B868     	 ldr r0,[r7,#8]
 5004 0042 0F49     	 ldr r1,.L218+4
 5005 0044 FFF7FEFF 	 bl __aeabi_fmul
 5006 0048 031C     	 add r3,r0,#0
 5007 004a 181C     	 add r0,r3,#0
 5008 004c 0D49     	 ldr r1,.L218+8
 5009 004e FFF7FEFF 	 bl __aeabi_fsub
 5010 0052 031C     	 add r3,r0,#0
 5011 0054 181C     	 add r0,r3,#0
 5012 0056 B968     	 ldr r1,[r7,#8]
 5013 0058 FFF7FEFF 	 bl __aeabi_fmul
 5014 005c 031C     	 add r3,r0,#0
 5015 005e 181C     	 add r0,r3,#0
 5016 0060 0949     	 ldr r1,.L218+12
 5017 0062 FFF7FEFF 	 bl __aeabi_fadd
 5018 0066 031C     	 add r3,r0,#0
 5019 0068 181C     	 add r0,r3,#0
 5020 006a F968     	 ldr r1,[r7,#12]
 5021 006c FFF7FEFF 	 bl __aeabi_fmul
 5022 0070 031C     	 add r3,r0,#0
1261:../main.c     **** }
 5023              	 .loc 1 1261 0
 5024 0072 181C     	 add r0,r3,#0
 5025 0074 BD46     	 mov sp,r7
 5026 0076 04B0     	 add sp,sp,#16
 5027              	 
 5028 0078 80BD     	 pop {r7,pc}
 5029              	.L219:
 5030 007a C046     	 .align 2
 5031              	.L218:
 5032 007c 000080BF 	 .word -1082130432
 5033 0080 77079F3D 	 .word 1033832311
 5034 0084 9D2A933E 	 .word 1049832093
 5035 0088 3AC47E3F 	 .word 1065272378
 5036              	 .cfi_endproc
 5037              	.LFE488:
 5039              	 .section .text.polynmApproxAtan2f,"ax",%progbits
 5040              	 .align 2
 5041              	 .global polynmApproxAtan2f
 5042              	 .code 16
 5043              	 .thumb_func
 5045              	polynmApproxAtan2f:
 5046              	.LFB489:
1262:../main.c     **** /*
1263:../main.c     ****  Function:Tinh toan arctan cua gia tri tan=sin/cos (nam trong toan bo 4 goc phan tu cua vong tron l
1264:../main.c     ****  Input:sin(), cos()
1265:../main.c     ****  Output:tra ve goc trong vong tron luong giac
1266:../main.c     ****  */
1267:../main.c     **** float polynmApproxAtan2f(float y, float x)
1268:../main.c     **** {
 5047              	 .loc 1 1268 0
 5048              	 .cfi_startproc
 5049 0000 80B5     	 push {r7,lr}
 5050              	.LCFI66:
 5051              	 .cfi_def_cfa_offset 8
 5052              	 .cfi_offset 7,-8
 5053              	 .cfi_offset 14,-4
 5054 0002 86B0     	 sub sp,sp,#24
 5055              	.LCFI67:
 5056              	 .cfi_def_cfa_offset 32
 5057 0004 00AF     	 add r7,sp,#0
 5058              	.LCFI68:
 5059              	 .cfi_def_cfa_register 7
 5060 0006 7860     	 str r0,[r7,#4]
 5061 0008 3960     	 str r1,[r7]
1269:../main.c     ****     float tmp1, tmp2, z;
1270:../main.c     **** 
1271:../main.c     ****     tmp1 = floatAbs(y);
 5062              	 .loc 1 1271 0
 5063 000a 7B68     	 ldr r3,[r7,#4]
 5064 000c 181C     	 add r0,r3,#0
 5065 000e FFF7FEFF 	 bl floatAbs
 5066 0012 031C     	 add r3,r0,#0
 5067 0014 7B61     	 str r3,[r7,#20]
1272:../main.c     ****     tmp2 = floatAbs(x);
 5068              	 .loc 1 1272 0
 5069 0016 3B68     	 ldr r3,[r7]
 5070 0018 181C     	 add r0,r3,#0
 5071 001a FFF7FEFF 	 bl floatAbs
 5072 001e 031C     	 add r3,r0,#0
 5073 0020 3B61     	 str r3,[r7,#16]
1273:../main.c     ****     z = (tmp1 > tmp2) ? (tmp1) : (tmp2);
 5074              	 .loc 1 1273 0
 5075 0022 7869     	 ldr r0,[r7,#20]
 5076 0024 3969     	 ldr r1,[r7,#16]
 5077 0026 FFF7FEFF 	 bl __aeabi_fcmpgt
 5078 002a 031E     	 sub r3,r0,#0
 5079 002c 01D0     	 beq .L243
 5080              	 .loc 1 1273 0 is_stmt 0 discriminator 1
 5081 002e 7B69     	 ldr r3,[r7,#20]
 5082 0030 00E0     	 b .L223
 5083              	.L243:
 5084              	 .loc 1 1273 0 discriminator 2
 5085 0032 3B69     	 ldr r3,[r7,#16]
 5086              	.L223:
 5087              	 .loc 1 1273 0 discriminator 4
 5088 0034 FB60     	 str r3,[r7,#12]
1274:../main.c     **** 
1275:../main.c     ****     if(z < RL_EPSILON_F)
 5089              	 .loc 1 1275 0 is_stmt 1 discriminator 4
 5090 0036 F868     	 ldr r0,[r7,#12]
 5091 0038 2E49     	 ldr r1,.L249
 5092 003a FFF7FEFF 	 bl __aeabi_fcmplt
 5093 003e 031E     	 sub r3,r0,#0
 5094 0040 01D0     	 beq .L244
1276:../main.c     ****     {
1277:../main.c     ****         return 0.0f;
 5095              	 .loc 1 1277 0
 5096 0042 0023     	 mov r3,#0
 5097 0044 52E0     	 b .L226
 5098              	.L244:
1278:../main.c     ****     }
1279:../main.c     **** 
1280:../main.c     ****     if(tmp2 >= tmp1)
 5099              	 .loc 1 1280 0
 5100 0046 3869     	 ldr r0,[r7,#16]
 5101 0048 7969     	 ldr r1,[r7,#20]
 5102 004a FFF7FEFF 	 bl __aeabi_fcmpge
 5103 004e 031E     	 sub r3,r0,#0
 5104 0050 28D0     	 beq .L245
1281:../main.c     ****     {
1282:../main.c     ****         z = y / x;
 5105              	 .loc 1 1282 0
 5106 0052 7868     	 ldr r0,[r7,#4]
 5107 0054 3968     	 ldr r1,[r7]
 5108 0056 FFF7FEFF 	 bl __aeabi_fdiv
 5109 005a 031C     	 add r3,r0,#0
 5110 005c FB60     	 str r3,[r7,#12]
1283:../main.c     ****         tmp2 = polynmApproxAtanf(z);
 5111              	 .loc 1 1283 0
 5112 005e FB68     	 ldr r3,[r7,#12]
 5113 0060 181C     	 add r0,r3,#0
 5114 0062 FFF7FEFF 	 bl polynmApproxAtanf
 5115 0066 031C     	 add r3,r0,#0
 5116 0068 3B61     	 str r3,[r7,#16]
1284:../main.c     ****         if(x > 0)
 5117              	 .loc 1 1284 0
 5118 006a 3868     	 ldr r0,[r7]
 5119 006c 0021     	 mov r1,#0
 5120 006e FFF7FEFF 	 bl __aeabi_fcmpgt
 5121 0072 031E     	 sub r3,r0,#0
 5122 0074 02D0     	 beq .L246
1285:../main.c     ****         {
1286:../main.c     ****             tmp1 = tmp2;
 5123              	 .loc 1 1286 0
 5124 0076 3B69     	 ldr r3,[r7,#16]
 5125 0078 7B61     	 str r3,[r7,#20]
 5126 007a 36E0     	 b .L234
 5127              	.L246:
1287:../main.c     ****         }
1288:../main.c     ****         else if(y > 0)
 5128              	 .loc 1 1288 0
 5129 007c 7868     	 ldr r0,[r7,#4]
 5130 007e 0021     	 mov r1,#0
 5131 0080 FFF7FEFF 	 bl __aeabi_fcmpgt
 5132 0084 031E     	 sub r3,r0,#0
 5133 0086 06D0     	 beq .L247
1289:../main.c     ****         {
1290:../main.c     ****             tmp1 = tmp2 + (float)M_PI;
 5134              	 .loc 1 1290 0
 5135 0088 3869     	 ldr r0,[r7,#16]
 5136 008a 1B49     	 ldr r1,.L249+4
 5137 008c FFF7FEFF 	 bl __aeabi_fadd
 5138 0090 031C     	 add r3,r0,#0
 5139 0092 7B61     	 str r3,[r7,#20]
 5140 0094 29E0     	 b .L234
 5141              	.L247:
1291:../main.c     ****         }
1292:../main.c     ****         else
1293:../main.c     ****         {
1294:../main.c     ****             tmp1 = tmp2 - (float)M_PI;
 5142              	 .loc 1 1294 0
 5143 0096 3869     	 ldr r0,[r7,#16]
 5144 0098 1749     	 ldr r1,.L249+4
 5145 009a FFF7FEFF 	 bl __aeabi_fsub
 5146 009e 031C     	 add r3,r0,#0
 5147 00a0 7B61     	 str r3,[r7,#20]
 5148 00a2 22E0     	 b .L234
 5149              	.L245:
1295:../main.c     ****         }
1296:../main.c     ****     }
1297:../main.c     ****     else
1298:../main.c     ****     {
1299:../main.c     ****         z = x / y;
 5150              	 .loc 1 1299 0
 5151 00a4 3868     	 ldr r0,[r7]
 5152 00a6 7968     	 ldr r1,[r7,#4]
 5153 00a8 FFF7FEFF 	 bl __aeabi_fdiv
 5154 00ac 031C     	 add r3,r0,#0
 5155 00ae FB60     	 str r3,[r7,#12]
1300:../main.c     ****         tmp2 = polynmApproxAtanf(z);
 5156              	 .loc 1 1300 0
 5157 00b0 FB68     	 ldr r3,[r7,#12]
 5158 00b2 181C     	 add r0,r3,#0
 5159 00b4 FFF7FEFF 	 bl polynmApproxAtanf
 5160 00b8 031C     	 add r3,r0,#0
 5161 00ba 3B61     	 str r3,[r7,#16]
1301:../main.c     ****         if(y > 0)
 5162              	 .loc 1 1301 0
 5163 00bc 7868     	 ldr r0,[r7,#4]
 5164 00be 0021     	 mov r1,#0
 5165 00c0 FFF7FEFF 	 bl __aeabi_fcmpgt
 5166 00c4 031E     	 sub r3,r0,#0
 5167 00c6 06D0     	 beq .L248
1302:../main.c     ****         {
1303:../main.c     ****             tmp1 = -tmp2 + (float)M_PI_2;
 5168              	 .loc 1 1303 0
 5169 00c8 0C48     	 ldr r0,.L249+8
 5170 00ca 3969     	 ldr r1,[r7,#16]
 5171 00cc FFF7FEFF 	 bl __aeabi_fsub
 5172 00d0 031C     	 add r3,r0,#0
 5173 00d2 7B61     	 str r3,[r7,#20]
 5174 00d4 09E0     	 b .L234
 5175              	.L248:
1304:../main.c     ****         }
1305:../main.c     ****         else
1306:../main.c     ****         {
1307:../main.c     ****             tmp1 = -tmp2 - (float)M_PI_2;
 5176              	 .loc 1 1307 0
 5177 00d6 3B69     	 ldr r3,[r7,#16]
 5178 00d8 8022     	 mov r2,#128
 5179 00da 1206     	 lsl r2,r2,#24
 5180 00dc 5340     	 eor r3,r2
 5181 00de 181C     	 add r0,r3,#0
 5182 00e0 0649     	 ldr r1,.L249+8
 5183 00e2 FFF7FEFF 	 bl __aeabi_fsub
 5184 00e6 031C     	 add r3,r0,#0
 5185 00e8 7B61     	 str r3,[r7,#20]
 5186              	.L234:
1308:../main.c     ****         }
1309:../main.c     ****     }
1310:../main.c     **** 
1311:../main.c     ****     return tmp1;
 5187              	 .loc 1 1311 0
 5188 00ea 7B69     	 ldr r3,[r7,#20]
 5189              	.L226:
1312:../main.c     **** }
 5190              	 .loc 1 1312 0
 5191 00ec 181C     	 add r0,r3,#0
 5192 00ee BD46     	 mov sp,r7
 5193 00f0 06B0     	 add sp,sp,#24
 5194              	 
 5195 00f2 80BD     	 pop {r7,pc}
 5196              	.L250:
 5197              	 .align 2
 5198              	.L249:
 5199 00f4 77CC2B32 	 .word 841731191
 5200 00f8 DB0F4940 	 .word 1078530011
 5201 00fc DB0FC93F 	 .word 1070141403
 5202              	 .cfi_endproc
 5203              	.LFE489:
 5205              	 .section .text.ThetaCal,"ax",%progbits
 5206              	 .align 2
 5207              	 .global ThetaCal
 5208              	 .code 16
 5209              	 .thumb_func
 5211              	ThetaCal:
 5212              	.LFB490:
1313:../main.c     **** 
1314:../main.c     **** /*
1315:../main.c     ****  Function:Tinh toan goc dong co
1316:../main.c     ****  Input:EbetaHat,EalphaHat
1317:../main.c     ****  Output:positionTHI,positionTHO (goc dong co tai thoi diem t va t+1)
1318:../main.c     ****  */
1319:../main.c     **** void ThetaCal(void){
 5213              	 .loc 1 1319 0
 5214              	 .cfi_startproc
 5215 0000 90B5     	 push {r4,r7,lr}
 5216              	.LCFI69:
 5217              	 .cfi_def_cfa_offset 12
 5218              	 .cfi_offset 4,-12
 5219              	 .cfi_offset 7,-8
 5220              	 .cfi_offset 14,-4
 5221 0002 85B0     	 sub sp,sp,#20
 5222              	.LCFI70:
 5223              	 .cfi_def_cfa_offset 32
 5224 0004 00AF     	 add r7,sp,#0
 5225              	.LCFI71:
 5226              	 .cfi_def_cfa_register 7
1320:../main.c     **** 	float tmp, tmp1, tmp2;
1321:../main.c     ****     tmp=polynmApproxAtan2f(EbetaHat,EalphaHat);
 5227              	 .loc 1 1321 0
 5228 0006 454B     	 ldr r3,.L275
 5229 0008 1A68     	 ldr r2,[r3]
 5230 000a 454B     	 ldr r3,.L275+4
 5231 000c 1B68     	 ldr r3,[r3]
 5232 000e 101C     	 add r0,r2,#0
 5233 0010 191C     	 add r1,r3,#0
 5234 0012 FFF7FEFF 	 bl polynmApproxAtan2f
 5235 0016 031C     	 add r3,r0,#0
 5236 0018 FB60     	 str r3,[r7,#12]
1322:../main.c     ****     if(0 > tmp)
 5237              	 .loc 1 1322 0
 5238 001a F868     	 ldr r0,[r7,#12]
 5239 001c 0021     	 mov r1,#0
 5240 001e FFF7FEFF 	 bl __aeabi_fcmplt
 5241 0022 031E     	 sub r3,r0,#0
 5242 0024 08D0     	 beq .L270
1323:../main.c     ****     {
1324:../main.c     ****         positionTH = tmp + 2*PI;
 5243              	 .loc 1 1324 0
 5244 0026 F868     	 ldr r0,[r7,#12]
 5245 0028 3E49     	 ldr r1,.L275+8
 5246 002a FFF7FEFF 	 bl __aeabi_fadd
 5247 002e 031C     	 add r3,r0,#0
 5248 0030 1A1C     	 add r2,r3,#0
 5249 0032 3D4B     	 ldr r3,.L275+12
 5250 0034 1A60     	 str r2,[r3]
 5251 0036 02E0     	 b .L254
 5252              	.L270:
1325:../main.c     ****     }
1326:../main.c     ****     else
1327:../main.c     ****     {
1328:../main.c     ****         positionTH = tmp;
 5253              	 .loc 1 1328 0
 5254 0038 3B4B     	 ldr r3,.L275+12
 5255 003a FA68     	 ldr r2,[r7,#12]
 5256 003c 1A60     	 str r2,[r3]
 5257              	.L254:
1329:../main.c     ****     }
1330:../main.c     **** 
1331:../main.c     ****     tmp1 = (positionTH) - (positionzTH);
 5258              	 .loc 1 1331 0
 5259 003e 3A4B     	 ldr r3,.L275+12
 5260 0040 1A68     	 ldr r2,[r3]
 5261 0042 3A4B     	 ldr r3,.L275+16
 5262 0044 1B68     	 ldr r3,[r3]
 5263 0046 101C     	 add r0,r2,#0
 5264 0048 191C     	 add r1,r3,#0
 5265 004a FFF7FEFF 	 bl __aeabi_fsub
 5266 004e 031C     	 add r3,r0,#0
 5267 0050 BB60     	 str r3,[r7,#8]
1332:../main.c     ****     if(-M_PI > tmp1)
 5268              	 .loc 1 1332 0
 5269 0052 B868     	 ldr r0,[r7,#8]
 5270 0054 FFF7FEFF 	 bl __aeabi_f2d
 5271 0058 031C     	 mov r3,r0
 5272 005a 0C1C     	 mov r4,r1
 5273 005c 181C     	 mov r0,r3
 5274 005e 211C     	 mov r1,r4
 5275 0060 334A     	 ldr r2,.L275+20
 5276 0062 344B     	 ldr r3,.L275+24
 5277 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 5278 0068 031E     	 sub r3,r0,#0
 5279 006a 08D0     	 beq .L271
1333:../main.c     ****     {
1334:../main.c     ****         positiondTH = tmp1 + 2*PI;
 5280              	 .loc 1 1334 0
 5281 006c B868     	 ldr r0,[r7,#8]
 5282 006e 2D49     	 ldr r1,.L275+8
 5283 0070 FFF7FEFF 	 bl __aeabi_fadd
 5284 0074 031C     	 add r3,r0,#0
 5285 0076 1A1C     	 add r2,r3,#0
 5286 0078 2F4B     	 ldr r3,.L275+28
 5287 007a 1A60     	 str r2,[r3]
 5288 007c 18E0     	 b .L257
 5289              	.L271:
1335:../main.c     ****     }
1336:../main.c     ****     else if(M_PI < tmp1)
 5290              	 .loc 1 1336 0
 5291 007e B868     	 ldr r0,[r7,#8]
 5292 0080 FFF7FEFF 	 bl __aeabi_f2d
 5293 0084 031C     	 mov r3,r0
 5294 0086 0C1C     	 mov r4,r1
 5295 0088 181C     	 mov r0,r3
 5296 008a 211C     	 mov r1,r4
 5297 008c 284A     	 ldr r2,.L275+20
 5298 008e 2B4B     	 ldr r3,.L275+32
 5299 0090 FFF7FEFF 	 bl __aeabi_dcmpgt
 5300 0094 031E     	 sub r3,r0,#0
 5301 0096 08D0     	 beq .L272
1337:../main.c     ****     {
1338:../main.c     ****         positiondTH = tmp1 - 2*PI;
 5302              	 .loc 1 1338 0
 5303 0098 B868     	 ldr r0,[r7,#8]
 5304 009a 2249     	 ldr r1,.L275+8
 5305 009c FFF7FEFF 	 bl __aeabi_fsub
 5306 00a0 031C     	 add r3,r0,#0
 5307 00a2 1A1C     	 add r2,r3,#0
 5308 00a4 244B     	 ldr r3,.L275+28
 5309 00a6 1A60     	 str r2,[r3]
 5310 00a8 02E0     	 b .L257
 5311              	.L272:
1339:../main.c     ****     } else
1340:../main.c     ****     {
1341:../main.c     ****         positiondTH = tmp1;
 5312              	 .loc 1 1341 0
 5313 00aa 234B     	 ldr r3,.L275+28
 5314 00ac BA68     	 ldr r2,[r7,#8]
 5315 00ae 1A60     	 str r2,[r3]
 5316              	.L257:
1342:../main.c     ****     }
1343:../main.c     **** 
1344:../main.c     ****     positionTHI = positionTH;
 5317              	 .loc 1 1344 0
 5318 00b0 1D4B     	 ldr r3,.L275+12
 5319 00b2 1A68     	 ldr r2,[r3]
 5320 00b4 224B     	 ldr r3,.L275+36
 5321 00b6 1A60     	 str r2,[r3]
1345:../main.c     **** 
1346:../main.c     ****     tmp2 = positionTHI + positiondTH;
 5322              	 .loc 1 1346 0
 5323 00b8 214B     	 ldr r3,.L275+36
 5324 00ba 1A68     	 ldr r2,[r3]
 5325 00bc 1E4B     	 ldr r3,.L275+28
 5326 00be 1B68     	 ldr r3,[r3]
 5327 00c0 101C     	 add r0,r2,#0
 5328 00c2 191C     	 add r1,r3,#0
 5329 00c4 FFF7FEFF 	 bl __aeabi_fadd
 5330 00c8 031C     	 add r3,r0,#0
 5331 00ca 7B60     	 str r3,[r7,#4]
1347:../main.c     ****     if(0 > tmp2)
 5332              	 .loc 1 1347 0
 5333 00cc 7868     	 ldr r0,[r7,#4]
 5334 00ce 0021     	 mov r1,#0
 5335 00d0 FFF7FEFF 	 bl __aeabi_fcmplt
 5336 00d4 031E     	 sub r3,r0,#0
 5337 00d6 08D0     	 beq .L273
1348:../main.c     ****     {
1349:../main.c     ****         positionTHO = tmp2 + 2*PI;
 5338              	 .loc 1 1349 0
 5339 00d8 7868     	 ldr r0,[r7,#4]
 5340 00da 1249     	 ldr r1,.L275+8
 5341 00dc FFF7FEFF 	 bl __aeabi_fadd
 5342 00e0 031C     	 add r3,r0,#0
 5343 00e2 1A1C     	 add r2,r3,#0
 5344 00e4 174B     	 ldr r3,.L275+40
 5345 00e6 1A60     	 str r2,[r3]
 5346 00e8 11E0     	 b .L262
 5347              	.L273:
1350:../main.c     ****     }
1351:../main.c     ****     else if((2*PI) < tmp2)
 5348              	 .loc 1 1351 0
 5349 00ea 7868     	 ldr r0,[r7,#4]
 5350 00ec 0D49     	 ldr r1,.L275+8
 5351 00ee FFF7FEFF 	 bl __aeabi_fcmpgt
 5352 00f2 031E     	 sub r3,r0,#0
 5353 00f4 08D0     	 beq .L274
1352:../main.c     ****     {
1353:../main.c     ****         positionTHO = tmp2 - 2*PI;
 5354              	 .loc 1 1353 0
 5355 00f6 7868     	 ldr r0,[r7,#4]
 5356 00f8 0A49     	 ldr r1,.L275+8
 5357 00fa FFF7FEFF 	 bl __aeabi_fsub
 5358 00fe 031C     	 add r3,r0,#0
 5359 0100 1A1C     	 add r2,r3,#0
 5360 0102 104B     	 ldr r3,.L275+40
 5361 0104 1A60     	 str r2,[r3]
 5362 0106 02E0     	 b .L262
 5363              	.L274:
1354:../main.c     ****     }
1355:../main.c     ****     else
1356:../main.c     ****     {
1357:../main.c     ****         positionTHO = tmp2;
 5364              	 .loc 1 1357 0
 5365 0108 0E4B     	 ldr r3,.L275+40
 5366 010a 7A68     	 ldr r2,[r7,#4]
 5367 010c 1A60     	 str r2,[r3]
 5368              	.L262:
1358:../main.c     ****     }
1359:../main.c     **** 
1360:../main.c     ****     positionzTH = positionTH;
 5369              	 .loc 1 1360 0
 5370 010e 064B     	 ldr r3,.L275+12
 5371 0110 1A68     	 ldr r2,[r3]
 5372 0112 064B     	 ldr r3,.L275+16
 5373 0114 1A60     	 str r2,[r3]
1361:../main.c     **** 
1362:../main.c     **** }
 5374              	 .loc 1 1362 0
 5375 0116 BD46     	 mov sp,r7
 5376 0118 05B0     	 add sp,sp,#20
 5377              	 
 5378 011a 90BD     	 pop {r4,r7,pc}
 5379              	.L276:
 5380              	 .align 2
 5381              	.L275:
 5382 011c 00000000 	 .word EbetaHat
 5383 0120 00000000 	 .word EalphaHat
 5384 0124 D80FC940 	 .word 1086918616
 5385 0128 00000000 	 .word positionTH
 5386 012c 00000000 	 .word positionzTH
 5387 0130 182D4454 	 .word 1413754136
 5388 0134 FB2109C0 	 .word -1073143301
 5389 0138 00000000 	 .word positiondTH
 5390 013c FB210940 	 .word 1074340347
 5391 0140 00000000 	 .word positionTHI
 5392 0144 00000000 	 .word positionTHO
 5393              	 .cfi_endproc
 5394              	.LFE490:
 5396              	 .global __aeabi_ui2f
 5397              	 .section .text.SpeedCal,"ax",%progbits
 5398              	 .align 2
 5399              	 .global SpeedCal
 5400              	 .code 16
 5401              	 .thumb_func
 5403              	SpeedCal:
 5404              	.LFB491:
1363:../main.c     **** 
1364:../main.c     **** /*
1365:../main.c     ****  Function: Ham tinh toan toc do dong co do ve (Speed Measurment). goc=tich phan cua toc do => (thet
1366:../main.c     ****  Input:positiondTH
1367:../main.c     ****  Output:SpeedMea1
1368:../main.c     ****  */
1369:../main.c     **** void SpeedCal(void){
 5405              	 .loc 1 1369 0
 5406              	 .cfi_startproc
 5407 0000 80B5     	 push {r7,lr}
 5408              	.LCFI72:
 5409              	 .cfi_def_cfa_offset 8
 5410              	 .cfi_offset 7,-8
 5411              	 .cfi_offset 14,-4
 5412 0002 82B0     	 sub sp,sp,#8
 5413              	.LCFI73:
 5414              	 .cfi_def_cfa_offset 16
 5415 0004 00AF     	 add r7,sp,#0
 5416              	.LCFI74:
 5417              	 .cfi_def_cfa_register 7
1370:../main.c     ****     float tmp1;
1371:../main.c     ****     uint16_t tmp2;
1372:../main.c     **** 
1373:../main.c     ****     tmp1 = positiondTH;
 5418              	 .loc 1 1373 0
 5419 0006 244B     	 ldr r3,.L283
 5420 0008 1B68     	 ldr r3,[r3]
 5421 000a 7B60     	 str r3,[r7,#4]
1374:../main.c     ****     tmp2 = countFIFO;
 5422              	 .loc 1 1374 0
 5423 000c BB1C     	 add r3,r7,#2
 5424 000e 234A     	 ldr r2,.L283+4
 5425 0010 1288     	 ldrh r2,[r2]
 5426 0012 1A80     	 strh r2,[r3]
1375:../main.c     ****     FIFOdTH[tmp2] = tmp1;
 5427              	 .loc 1 1375 0
 5428 0014 BB1C     	 add r3,r7,#2
 5429 0016 1A88     	 ldrh r2,[r3]
 5430 0018 214B     	 ldr r3,.L283+8
 5431 001a 9200     	 lsl r2,r2,#2
 5432 001c 7968     	 ldr r1,[r7,#4]
 5433 001e D150     	 str r1,[r2,r3]
1376:../main.c     **** 
1377:../main.c     ****     if(22 > (float)tmp2)
 5434              	 .loc 1 1377 0
 5435 0020 BB1C     	 add r3,r7,#2
 5436 0022 1B88     	 ldrh r3,[r3]
 5437 0024 181C     	 mov r0,r3
 5438 0026 FFF7FEFF 	 bl __aeabi_ui2f
 5439 002a 031C     	 add r3,r0,#0
 5440 002c 181C     	 add r0,r3,#0
 5441 002e 1D49     	 ldr r1,.L283+12
 5442 0030 FFF7FEFF 	 bl __aeabi_fcmplt
 5443 0034 031E     	 sub r3,r0,#0
 5444 0036 06D0     	 beq .L282
1378:../main.c     ****     {
1379:../main.c     ****         countFIFO++;
 5445              	 .loc 1 1379 0
 5446 0038 184B     	 ldr r3,.L283+4
 5447 003a 1B88     	 ldrh r3,[r3]
 5448 003c 0133     	 add r3,r3,#1
 5449 003e 9AB2     	 uxth r2,r3
 5450 0040 164B     	 ldr r3,.L283+4
 5451 0042 1A80     	 strh r2,[r3]
 5452 0044 02E0     	 b .L280
 5453              	.L282:
1380:../main.c     ****     }
1381:../main.c     ****     else
1382:../main.c     ****     {
1383:../main.c     ****         countFIFO = 0;
 5454              	 .loc 1 1383 0
 5455 0046 154B     	 ldr r3,.L283+4
 5456 0048 0022     	 mov r2,#0
 5457 004a 1A80     	 strh r2,[r3]
 5458              	.L280:
1384:../main.c     ****     }
1385:../main.c     **** 
1386:../main.c     ****     tmp2 = countFIFO;
 5459              	 .loc 1 1386 0
 5460 004c BB1C     	 add r3,r7,#2
 5461 004e 134A     	 ldr r2,.L283+4
 5462 0050 1288     	 ldrh r2,[r2]
 5463 0052 1A80     	 strh r2,[r3]
1387:../main.c     ****     SUMdTH +=  tmp1 - FIFOdTH[tmp2];
 5464              	 .loc 1 1387 0
 5465 0054 BB1C     	 add r3,r7,#2
 5466 0056 1A88     	 ldrh r2,[r3]
 5467 0058 114B     	 ldr r3,.L283+8
 5468 005a 9200     	 lsl r2,r2,#2
 5469 005c D358     	 ldr r3,[r2,r3]
 5470 005e 7868     	 ldr r0,[r7,#4]
 5471 0060 191C     	 add r1,r3,#0
 5472 0062 FFF7FEFF 	 bl __aeabi_fsub
 5473 0066 031C     	 add r3,r0,#0
 5474 0068 1A1C     	 add r2,r3,#0
 5475 006a 0F4B     	 ldr r3,.L283+16
 5476 006c 1B68     	 ldr r3,[r3]
 5477 006e 101C     	 add r0,r2,#0
 5478 0070 191C     	 add r1,r3,#0
 5479 0072 FFF7FEFF 	 bl __aeabi_fadd
 5480 0076 031C     	 add r3,r0,#0
 5481 0078 1A1C     	 add r2,r3,#0
 5482 007a 0B4B     	 ldr r3,.L283+16
 5483 007c 1A60     	 str r2,[r3]
1388:../main.c     ****     SpeedMea1 = SUMdTH * 1000;
 5484              	 .loc 1 1388 0
 5485 007e 0A4B     	 ldr r3,.L283+16
 5486 0080 1B68     	 ldr r3,[r3]
 5487 0082 181C     	 add r0,r3,#0
 5488 0084 0949     	 ldr r1,.L283+20
 5489 0086 FFF7FEFF 	 bl __aeabi_fmul
 5490 008a 031C     	 add r3,r0,#0
 5491 008c 1A1C     	 add r2,r3,#0
 5492 008e 084B     	 ldr r3,.L283+24
 5493 0090 1A60     	 str r2,[r3]
1389:../main.c     **** }
 5494              	 .loc 1 1389 0
 5495 0092 BD46     	 mov sp,r7
 5496 0094 02B0     	 add sp,sp,#8
 5497              	 
 5498 0096 80BD     	 pop {r7,pc}
 5499              	.L284:
 5500              	 .align 2
 5501              	.L283:
 5502 0098 00000000 	 .word positiondTH
 5503 009c 00000000 	 .word countFIFO
 5504 00a0 00000000 	 .word FIFOdTH
 5505 00a4 0000B041 	 .word 1102053376
 5506 00a8 00000000 	 .word SUMdTH
 5507 00ac 00007A44 	 .word 1148846080
 5508 00b0 00000000 	 .word SpeedMea1
 5509              	 .cfi_endproc
 5510              	.LFE491:
 5512              	 .section .text.resetSpeedCal,"ax",%progbits
 5513              	 .align 2
 5514              	 .global resetSpeedCal
 5515              	 .code 16
 5516              	 .thumb_func
 5518              	resetSpeedCal:
 5519              	.LFB492:
1390:../main.c     **** /*
1391:../main.c     ****  Function:Reset ca gia tri cua mang FIFOdTH[] ve 0
1392:../main.c     ****  */
1393:../main.c     **** void resetSpeedCal(void)
1394:../main.c     **** {
 5520              	 .loc 1 1394 0
 5521              	 .cfi_startproc
 5522 0000 80B5     	 push {r7,lr}
 5523              	.LCFI75:
 5524              	 .cfi_def_cfa_offset 8
 5525              	 .cfi_offset 7,-8
 5526              	 .cfi_offset 14,-4
 5527 0002 82B0     	 sub sp,sp,#8
 5528              	.LCFI76:
 5529              	 .cfi_def_cfa_offset 16
 5530 0004 00AF     	 add r7,sp,#0
 5531              	.LCFI77:
 5532              	 .cfi_def_cfa_register 7
1395:../main.c     ****     uint16_t tmp;
1396:../main.c     **** 
1397:../main.c     ****     countFIFO = 0;
 5533              	 .loc 1 1397 0
 5534 0006 0C4B     	 ldr r3,.L288
 5535 0008 0022     	 mov r2,#0
 5536 000a 1A80     	 strh r2,[r3]
1398:../main.c     **** 
1399:../main.c     ****     for(tmp=0; 22 >= tmp; tmp++)
 5537              	 .loc 1 1399 0
 5538 000c BB1D     	 add r3,r7,#6
 5539 000e 0022     	 mov r2,#0
 5540 0010 1A80     	 strh r2,[r3]
 5541 0012 0AE0     	 b .L286
 5542              	.L287:
1400:../main.c     ****     {
1401:../main.c     ****         FIFOdTH[tmp] = 0;
 5543              	 .loc 1 1401 0 discriminator 3
 5544 0014 BB1D     	 add r3,r7,#6
 5545 0016 1A88     	 ldrh r2,[r3]
 5546 0018 084B     	 ldr r3,.L288+4
 5547 001a 9200     	 lsl r2,r2,#2
 5548 001c 0021     	 mov r1,#0
 5549 001e D150     	 str r1,[r2,r3]
1399:../main.c     ****     {
 5550              	 .loc 1 1399 0 discriminator 3
 5551 0020 BB1D     	 add r3,r7,#6
 5552 0022 1A88     	 ldrh r2,[r3]
 5553 0024 BB1D     	 add r3,r7,#6
 5554 0026 0132     	 add r2,r2,#1
 5555 0028 1A80     	 strh r2,[r3]
 5556              	.L286:
1399:../main.c     ****     {
 5557              	 .loc 1 1399 0 is_stmt 0 discriminator 1
 5558 002a BB1D     	 add r3,r7,#6
 5559 002c 1B88     	 ldrh r3,[r3]
 5560 002e 162B     	 cmp r3,#22
 5561 0030 F0D9     	 bls .L287
1402:../main.c     ****     }
1403:../main.c     **** }
 5562              	 .loc 1 1403 0 is_stmt 1
 5563 0032 BD46     	 mov sp,r7
 5564 0034 02B0     	 add sp,sp,#8
 5565              	 
 5566 0036 80BD     	 pop {r7,pc}
 5567              	.L289:
 5568              	 .align 2
 5569              	.L288:
 5570 0038 00000000 	 .word countFIFO
 5571 003c 00000000 	 .word FIFOdTH
 5572              	 .cfi_endproc
 5573              	.LFE492:
 5575              	 .section .text.motionCal,"ax",%progbits
 5576              	 .align 2
 5577              	 .global motionCal
 5578              	 .code 16
 5579              	 .thumb_func
 5581              	motionCal:
 5582              	.LFB493:
1404:../main.c     **** /*
1405:../main.c     ****  Function:Goi ra ham tinh toan goc va toc do dong co
1406:../main.c     ****  */
1407:../main.c     **** void motionCal(){
 5583              	 .loc 1 1407 0
 5584              	 .cfi_startproc
 5585 0000 80B5     	 push {r7,lr}
 5586              	.LCFI78:
 5587              	 .cfi_def_cfa_offset 8
 5588              	 .cfi_offset 7,-8
 5589              	 .cfi_offset 14,-4
 5590 0002 00AF     	 add r7,sp,#0
 5591              	.LCFI79:
 5592              	 .cfi_def_cfa_register 7
1408:../main.c     **** 	ThetaCal();
 5593              	 .loc 1 1408 0
 5594 0004 FFF7FEFF 	 bl ThetaCal
1409:../main.c     **** 	SpeedCal();
 5595              	 .loc 1 1409 0
 5596 0008 FFF7FEFF 	 bl SpeedCal
1410:../main.c     **** }
 5597              	 .loc 1 1410 0
 5598 000c BD46     	 mov sp,r7
 5599              	 
 5600 000e 80BD     	 pop {r7,pc}
 5601              	 .cfi_endproc
 5602              	.LFE493:
 5604              	 .section .text.resetEstimator,"ax",%progbits
 5605              	 .align 2
 5606              	 .global resetEstimator
 5607              	 .code 16
 5608              	 .thumb_func
 5610              	resetEstimator:
 5611              	.LFB494:
1411:../main.c     **** /*
1412:../main.c     ****  Function: Reset cac bien output cua SMO, bien trang thai cua Estimator, gia tri mang luu tru delta
1413:../main.c     ****  */
1414:../main.c     **** 
1415:../main.c     **** void resetEstimator()
1416:../main.c     **** {
 5612              	 .loc 1 1416 0
 5613              	 .cfi_startproc
 5614 0000 80B5     	 push {r7,lr}
 5615              	.LCFI80:
 5616              	 .cfi_def_cfa_offset 8
 5617              	 .cfi_offset 7,-8
 5618              	 .cfi_offset 14,-4
 5619 0002 00AF     	 add r7,sp,#0
 5620              	.LCFI81:
 5621              	 .cfi_def_cfa_register 7
1417:../main.c     ****     estimatorState = 0;
 5622              	 .loc 1 1417 0
 5623 0004 054B     	 ldr r3,.L292
 5624 0006 0022     	 mov r2,#0
 5625 0008 1A80     	 strh r2,[r3]
1418:../main.c     ****     resetSMO();
 5626              	 .loc 1 1418 0
 5627 000a FFF7FEFF 	 bl resetSMO
1419:../main.c     ****     resetSpeedCal();
 5628              	 .loc 1 1419 0
 5629 000e FFF7FEFF 	 bl resetSpeedCal
1420:../main.c     ****     estimatorStatecnt1 = 0;
 5630              	 .loc 1 1420 0
 5631 0012 034B     	 ldr r3,.L292+4
 5632 0014 0022     	 mov r2,#0
 5633 0016 1A80     	 strh r2,[r3]
1421:../main.c     **** }
 5634              	 .loc 1 1421 0
 5635 0018 BD46     	 mov sp,r7
 5636              	 
 5637 001a 80BD     	 pop {r7,pc}
 5638              	.L293:
 5639              	 .align 2
 5640              	.L292:
 5641 001c 00000000 	 .word estimatorState
 5642 0020 00000000 	 .word estimatorStatecnt1
 5643              	 .cfi_endproc
 5644              	.LFE494:
 5646              	 .section .text.motionEstimator,"ax",%progbits
 5647              	 .align 2
 5648              	 .global motionEstimator
 5649              	 .code 16
 5650              	 .thumb_func
 5652              	motionEstimator:
 5653              	.LFB495:
1422:../main.c     **** /*
1423:../main.c     ****  Function:Uoc luong BEMF, tinh toan goc, toc do dong co o cac trang thai Alignment, Openloop, Closl
1424:../main.c     ****  */
1425:../main.c     **** void motionEstimator()
1426:../main.c     **** {
 5654              	 .loc 1 1426 0
 5655              	 .cfi_startproc
 5656 0000 80B5     	 push {r7,lr}
 5657              	.LCFI82:
 5658              	 .cfi_def_cfa_offset 8
 5659              	 .cfi_offset 7,-8
 5660              	 .cfi_offset 14,-4
 5661 0002 82B0     	 sub sp,sp,#8
 5662              	.LCFI83:
 5663              	 .cfi_def_cfa_offset 16
 5664 0004 00AF     	 add r7,sp,#0
 5665              	.LCFI84:
 5666              	 .cfi_def_cfa_register 7
1427:../main.c     ****     float tmp;
1428:../main.c     **** 
1429:../main.c     ****     if(1 == flagStartObs)
 5667              	 .loc 1 1429 0
 5668 0006 364B     	 ldr r3,.L308
 5669 0008 1B88     	 ldrh r3,[r3]
 5670 000a 012B     	 cmp r3,#1
 5671 000c 05D1     	 bne .L295
1430:../main.c     ****     {
1431:../main.c     ****         flagStartObs = 0;
 5672              	 .loc 1 1431 0
 5673 000e 344B     	 ldr r3,.L308
 5674 0010 0022     	 mov r2,#0
 5675 0012 1A80     	 strh r2,[r3]
1432:../main.c     ****         estimatorState = 0;
 5676              	 .loc 1 1432 0
 5677 0014 334B     	 ldr r3,.L308+4
 5678 0016 0022     	 mov r2,#0
 5679 0018 1A80     	 strh r2,[r3]
 5680              	.L295:
1433:../main.c     ****     }
1434:../main.c     **** 
1435:../main.c     ****     switch(estimatorState)
 5681              	 .loc 1 1435 0
 5682 001a 324B     	 ldr r3,.L308+4
 5683 001c 1B88     	 ldrh r3,[r3]
 5684 001e 012B     	 cmp r3,#1
 5685 0020 13D0     	 beq .L297
 5686 0022 02DC     	 bgt .L298
 5687 0024 002B     	 cmp r3,#0
 5688 0026 05D0     	 beq .L299
1436:../main.c     ****     {
1437:../main.c     ****         case 0:
1438:../main.c     ****             resetSMO();
1439:../main.c     ****             resetSpeedCal();
1440:../main.c     ****             estimatorStatecnt1 = 0;
1441:../main.c     ****             estimatorState = 1;
1442:../main.c     ****             break;
1443:../main.c     ****         case 1:
1444:../main.c     ****             if(2 == flagStartObs)
1445:../main.c     ****             {
1446:../main.c     ****                 estimatorStatecnt1++;
1447:../main.c     ****             }
1448:../main.c     ****             if(1 <= estimatorStatecnt1)
1449:../main.c     ****             {
1450:../main.c     ****                 estimatorStatecnt1 = 0;
1451:../main.c     ****                 flagStartObs = 0;
1452:../main.c     ****                 estimatorState = 2;
1453:../main.c     ****             }
1454:../main.c     ****             break;
1455:../main.c     ****         case 2:
1456:../main.c     ****             tmp = END_SPEED_RADS_PER_SEC_ELEC;
1457:../main.c     ****             We = tmp;
1458:../main.c     ****             exeSMO();
1459:../main.c     ****             motionCal();
1460:../main.c     ****             estimatorStatecnt1++;
1461:../main.c     ****             if(speedRefCnt <= (float)estimatorStatecnt1)
1462:../main.c     ****             {
1463:../main.c     ****                 estimatorStatecnt1 = 0;
1464:../main.c     ****                 estimatorState = 3;
1465:../main.c     ****             }
1466:../main.c     ****             break;
1467:../main.c     ****         case 3:
1468:../main.c     ****             We = SpeedMea1;
1469:../main.c     ****             exeSMO();
1470:../main.c     ****             motionCal();
1471:../main.c     ****             break;
1472:../main.c     ****         default:
1473:../main.c     ****         	break;
 5689              	 .loc 1 1473 0
 5690 0028 56E0     	 b .L294
 5691              	.L298:
1435:../main.c     ****     {
 5692              	 .loc 1 1435 0
 5693 002a 022B     	 cmp r3,#2
 5694 002c 26D0     	 beq .L300
 5695 002e 032B     	 cmp r3,#3
 5696 0030 49D0     	 beq .L301
 5697              	 .loc 1 1473 0
 5698 0032 51E0     	 b .L294
 5699              	.L299:
1438:../main.c     ****             resetSpeedCal();
 5700              	 .loc 1 1438 0
 5701 0034 FFF7FEFF 	 bl resetSMO
1439:../main.c     ****             estimatorStatecnt1 = 0;
 5702              	 .loc 1 1439 0
 5703 0038 FFF7FEFF 	 bl resetSpeedCal
1440:../main.c     ****             estimatorState = 1;
 5704              	 .loc 1 1440 0
 5705 003c 2A4B     	 ldr r3,.L308+8
 5706 003e 0022     	 mov r2,#0
 5707 0040 1A80     	 strh r2,[r3]
1441:../main.c     ****             break;
 5708              	 .loc 1 1441 0
 5709 0042 284B     	 ldr r3,.L308+4
 5710 0044 0122     	 mov r2,#1
 5711 0046 1A80     	 strh r2,[r3]
1442:../main.c     ****         case 1:
 5712              	 .loc 1 1442 0
 5713 0048 46E0     	 b .L294
 5714              	.L297:
1444:../main.c     ****             {
 5715              	 .loc 1 1444 0
 5716 004a 254B     	 ldr r3,.L308
 5717 004c 1B88     	 ldrh r3,[r3]
 5718 004e 022B     	 cmp r3,#2
 5719 0050 05D1     	 bne .L303
1446:../main.c     ****             }
 5720              	 .loc 1 1446 0
 5721 0052 254B     	 ldr r3,.L308+8
 5722 0054 1B88     	 ldrh r3,[r3]
 5723 0056 0133     	 add r3,r3,#1
 5724 0058 9AB2     	 uxth r2,r3
 5725 005a 234B     	 ldr r3,.L308+8
 5726 005c 1A80     	 strh r2,[r3]
 5727              	.L303:
1448:../main.c     ****             {
 5728              	 .loc 1 1448 0
 5729 005e 224B     	 ldr r3,.L308+8
 5730 0060 1B88     	 ldrh r3,[r3]
 5731 0062 002B     	 cmp r3,#0
 5732 0064 09D0     	 beq .L304
1450:../main.c     ****                 flagStartObs = 0;
 5733              	 .loc 1 1450 0
 5734 0066 204B     	 ldr r3,.L308+8
 5735 0068 0022     	 mov r2,#0
 5736 006a 1A80     	 strh r2,[r3]
1451:../main.c     ****                 estimatorState = 2;
 5737              	 .loc 1 1451 0
 5738 006c 1C4B     	 ldr r3,.L308
 5739 006e 0022     	 mov r2,#0
 5740 0070 1A80     	 strh r2,[r3]
1452:../main.c     ****             }
 5741              	 .loc 1 1452 0
 5742 0072 1C4B     	 ldr r3,.L308+4
 5743 0074 0222     	 mov r2,#2
 5744 0076 1A80     	 strh r2,[r3]
1454:../main.c     ****         case 2:
 5745              	 .loc 1 1454 0
 5746 0078 2EE0     	 b .L294
 5747              	.L304:
 5748 007a 2DE0     	 b .L294
 5749              	.L300:
1456:../main.c     ****             We = tmp;
 5750              	 .loc 1 1456 0
 5751 007c 1B4B     	 ldr r3,.L308+12
 5752 007e 7B60     	 str r3,[r7,#4]
1457:../main.c     ****             exeSMO();
 5753              	 .loc 1 1457 0
 5754 0080 1B4B     	 ldr r3,.L308+16
 5755 0082 7A68     	 ldr r2,[r7,#4]
 5756 0084 1A60     	 str r2,[r3]
1458:../main.c     ****             motionCal();
 5757              	 .loc 1 1458 0
 5758 0086 FFF7FEFF 	 bl exeSMO
1459:../main.c     ****             estimatorStatecnt1++;
 5759              	 .loc 1 1459 0
 5760 008a FFF7FEFF 	 bl motionCal
1460:../main.c     ****             if(speedRefCnt <= (float)estimatorStatecnt1)
 5761              	 .loc 1 1460 0
 5762 008e 164B     	 ldr r3,.L308+8
 5763 0090 1B88     	 ldrh r3,[r3]
 5764 0092 0133     	 add r3,r3,#1
 5765 0094 9AB2     	 uxth r2,r3
 5766 0096 144B     	 ldr r3,.L308+8
 5767 0098 1A80     	 strh r2,[r3]
1461:../main.c     ****             {
 5768              	 .loc 1 1461 0
 5769 009a 134B     	 ldr r3,.L308+8
 5770 009c 1B88     	 ldrh r3,[r3]
 5771 009e 181C     	 mov r0,r3
 5772 00a0 FFF7FEFF 	 bl __aeabi_ui2f
 5773 00a4 021C     	 add r2,r0,#0
 5774 00a6 134B     	 ldr r3,.L308+20
 5775 00a8 1B68     	 ldr r3,[r3]
 5776 00aa 101C     	 add r0,r2,#0
 5777 00ac 191C     	 add r1,r3,#0
 5778 00ae FFF7FEFF 	 bl __aeabi_fcmpge
 5779 00b2 031E     	 sub r3,r0,#0
 5780 00b4 00D1     	 bne .L307
1466:../main.c     ****         case 3:
 5781              	 .loc 1 1466 0
 5782 00b6 0FE0     	 b .L294
 5783              	.L307:
1463:../main.c     ****                 estimatorState = 3;
 5784              	 .loc 1 1463 0
 5785 00b8 0B4B     	 ldr r3,.L308+8
 5786 00ba 0022     	 mov r2,#0
 5787 00bc 1A80     	 strh r2,[r3]
1464:../main.c     ****             }
 5788              	 .loc 1 1464 0
 5789 00be 094B     	 ldr r3,.L308+4
 5790 00c0 0322     	 mov r2,#3
 5791 00c2 1A80     	 strh r2,[r3]
1466:../main.c     ****         case 3:
 5792              	 .loc 1 1466 0
 5793 00c4 08E0     	 b .L294
 5794              	.L301:
1468:../main.c     ****             exeSMO();
 5795              	 .loc 1 1468 0
 5796 00c6 0C4B     	 ldr r3,.L308+24
 5797 00c8 1A68     	 ldr r2,[r3]
 5798 00ca 094B     	 ldr r3,.L308+16
 5799 00cc 1A60     	 str r2,[r3]
1469:../main.c     ****             motionCal();
 5800              	 .loc 1 1469 0
 5801 00ce FFF7FEFF 	 bl exeSMO
1470:../main.c     ****             break;
 5802              	 .loc 1 1470 0
 5803 00d2 FFF7FEFF 	 bl motionCal
1471:../main.c     ****         default:
 5804              	 .loc 1 1471 0
 5805 00d6 C046     	 mov r8,r8
 5806              	.L294:
1474:../main.c     ****     }
1475:../main.c     **** }
 5807              	 .loc 1 1475 0
 5808 00d8 BD46     	 mov sp,r7
 5809 00da 02B0     	 add sp,sp,#8
 5810              	 
 5811 00dc 80BD     	 pop {r7,pc}
 5812              	.L309:
 5813 00de C046     	 .align 2
 5814              	.L308:
 5815 00e0 00000000 	 .word flagStartObs
 5816 00e4 00000000 	 .word estimatorState
 5817 00e8 00000000 	 .word estimatorStatecnt1
 5818 00ec 84705142 	 .word 1112633476
 5819 00f0 00000000 	 .word We
 5820 00f4 00000000 	 .word speedRefCnt
 5821 00f8 00000000 	 .word SpeedMea1
 5822              	 .cfi_endproc
 5823              	.LFE495:
 5825              	 .section .text.InterruptHandler,"ax",%progbits
 5826              	 .align 2
 5827              	 .global InterruptHandler
 5828              	 .code 16
 5829              	 .thumb_func
 5831              	InterruptHandler:
 5832              	.LFB496:
1476:../main.c     **** 
1477:../main.c     **** 
1478:../main.c     **** /*
1479:../main.c     ****  TIMER_0->INTERRUPT_0->50us (1/20000)
1480:../main.c     ****  Function:vong lap 50us tinh toan 1 lan, thuat toan FOC
1481:../main.c     ****  */
1482:../main.c     **** void InterruptHandler(void){
 5833              	 .loc 1 1482 0
 5834              	 .cfi_startproc
 5835 0000 80B5     	 push {r7,lr}
 5836              	.LCFI85:
 5837              	 .cfi_def_cfa_offset 8
 5838              	 .cfi_offset 7,-8
 5839              	 .cfi_offset 14,-4
 5840 0002 00AF     	 add r7,sp,#0
 5841              	.LCFI86:
 5842              	 .cfi_def_cfa_register 7
1483:../main.c     **** 	currentCoeffCal();
 5843              	 .loc 1 1483 0
 5844 0004 FFF7FEFF 	 bl currentCoeffCal
1484:../main.c     **** 	AlphaBetaTrans_Current();
 5845              	 .loc 1 1484 0
 5846 0008 FFF7FEFF 	 bl AlphaBetaTrans_Current
1485:../main.c     **** 	motionEstimator();
 5847              	 .loc 1 1485 0
 5848 000c FFF7FEFF 	 bl motionEstimator
1486:../main.c     **** 	ThetaLoopControl();
 5849              	 .loc 1 1486 0
 5850 0010 FFF7FEFF 	 bl ThetaLoopControl
1487:../main.c     **** 	Theta=finalTHI;
 5851              	 .loc 1 1487 0
 5852 0014 0C4B     	 ldr r3,.L311
 5853 0016 1A68     	 ldr r2,[r3]
 5854 0018 0C4B     	 ldr r3,.L311+4
 5855 001a 1A60     	 str r2,[r3]
1488:../main.c     **** 	SinCosCheck();
 5856              	 .loc 1 1488 0
 5857 001c FFF7FEFF 	 bl SinCosCheck
1489:../main.c     **** 	DQTrans_Current();
 5858              	 .loc 1 1489 0
 5859 0020 FFF7FEFF 	 bl DQTrans_Current
1490:../main.c     **** 	LoopcontrolTask();
 5860              	 .loc 1 1490 0
 5861 0024 FFF7FEFF 	 bl LoopcontrolTask
1491:../main.c     **** 	Theta=finalTHO;
 5862              	 .loc 1 1491 0
 5863 0028 094B     	 ldr r3,.L311+8
 5864 002a 1A68     	 ldr r2,[r3]
 5865 002c 074B     	 ldr r3,.L311+4
 5866 002e 1A60     	 str r2,[r3]
1492:../main.c     **** 	SinCosCheck();
 5867              	 .loc 1 1492 0
 5868 0030 FFF7FEFF 	 bl SinCosCheck
1493:../main.c     **** 	UsdqtoUsalphabeta();
 5869              	 .loc 1 1493 0
 5870 0034 FFF7FEFF 	 bl UsdqtoUsalphabeta
1494:../main.c     **** 	UsalphabetatoUsabc();
 5871              	 .loc 1 1494 0
 5872 0038 FFF7FEFF 	 bl UsalphabetatoUsabc
1495:../main.c     **** 	SVMAlgorithm();
 5873              	 .loc 1 1495 0
 5874 003c FFF7FEFF 	 bl SVMAlgorithm
1496:../main.c     **** 	UpdatePWMDutyCycle();
 5875              	 .loc 1 1496 0
 5876 0040 FFF7FEFF 	 bl UpdatePWMDutyCycle
1497:../main.c     **** }
 5877              	 .loc 1 1497 0
 5878 0044 BD46     	 mov sp,r7
 5879              	 
 5880 0046 80BD     	 pop {r7,pc}
 5881              	.L312:
 5882              	 .align 2
 5883              	.L311:
 5884 0048 00000000 	 .word finalTHI
 5885 004c 00000000 	 .word Theta
 5886 0050 00000000 	 .word finalTHO
 5887              	 .cfi_endproc
 5888              	.LFE496:
 5890              	 .text
 5891              	.Letext0:
 5892              	 .file 2 "d:\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5893              	 .file 3 "d:\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5894              	 .file 4 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 5895              	 .file 5 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc1_scu.h"
 5896              	 .file 6 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_gpio.h"
 5897              	 .file 7 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc1_gpio.h"
 5898              	 .file 8 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_usic.h"
 5899              	 .file 9 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_vadc.h"
 5900              	 .file 10 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/ADC_MEASUREMENT/adc_measurement.h"
 5901              	 .file 11 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/XMCLib/inc/xmc_ccu8.h"
 5902              	 .file 12 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 5903              	 .file 13 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/PWM_CCU8/pwm_ccu8.h"
 5904              	 .file 14 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/DAVE.h"
 5905              	 .file 15 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/CMSIS/Include/cmsis_gcc.h"
 5906              	 .file 16 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 5907              	 .file 17 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/ADC_MEASUREMENT/adc_measurement_extern.h"
 5908              	 .file 18 "D:/DAVE IDE/4.5.0.202105191637/eclipse/workspace/bldcmotorv1.0/Dave/Generated/PWM_CCU8/pwm_ccu8_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000002 current_phaseU
                            *COM*:00000002 current_phaseV
    {standard input}:24     .data.ADC_scale:00000000 ADC_scale
    {standard input}:21     .data.ADC_scale:00000000 $d
    {standard input}:31     .bss.cumulative_sum_phaseU:00000000 cumulative_sum_phaseU
    {standard input}:28     .bss.cumulative_sum_phaseU:00000000 $d
    {standard input}:38     .bss.cumulative_sum_phaseV:00000000 cumulative_sum_phaseV
    {standard input}:35     .bss.cumulative_sum_phaseV:00000000 $d
    {standard input}:45     .bss.moving_average_phaseU:00000000 moving_average_phaseU
    {standard input}:42     .bss.moving_average_phaseU:00000000 $d
    {standard input}:52     .bss.moving_average_phaseV:00000000 moving_average_phaseV
    {standard input}:49     .bss.moving_average_phaseV:00000000 $d
    {standard input}:59     .bss.aIObs:00000000 aIObs
    {standard input}:56     .bss.aIObs:00000000 $d
    {standard input}:66     .bss.b1IObs:00000000 b1IObs
    {standard input}:63     .bss.b1IObs:00000000 $d
    {standard input}:73     .bss.b2IObs:00000000 b2IObs
    {standard input}:70     .bss.b2IObs:00000000 $d
    {standard input}:80     .bss.b3IObs:00000000 b3IObs
    {standard input}:77     .bss.b3IObs:00000000 $d
    {standard input}:87     .bss.flagStartObs:00000000 flagStartObs
    {standard input}:84     .bss.flagStartObs:00000000 $d
    {standard input}:94     .bss.EalphaHat:00000000 EalphaHat
    {standard input}:91     .bss.EalphaHat:00000000 $d
    {standard input}:101    .bss.EbetaHat:00000000 EbetaHat
    {standard input}:98     .bss.EbetaHat:00000000 $d
    {standard input}:108    .bss.IalphaHat:00000000 IalphaHat
    {standard input}:105    .bss.IalphaHat:00000000 $d
    {standard input}:115    .bss.IbetaHat:00000000 IbetaHat
    {standard input}:112    .bss.IbetaHat:00000000 $d
    {standard input}:122    .bss.Balpha:00000000 Balpha
    {standard input}:119    .bss.Balpha:00000000 $d
    {standard input}:129    .bss.Bbeta:00000000 Bbeta
    {standard input}:126    .bss.Bbeta:00000000 $d
    {standard input}:136    .bss.a1BEMFobs:00000000 a1BEMFobs
    {standard input}:133    .bss.a1BEMFobs:00000000 $d
    {standard input}:143    .bss.a2BEMFobs:00000000 a2BEMFobs
    {standard input}:140    .bss.a2BEMFobs:00000000 $d
    {standard input}:150    .bss.b1BEMFobs:00000000 b1BEMFobs
    {standard input}:147    .bss.b1BEMFobs:00000000 $d
    {standard input}:157    .bss.b2BEMFobs:00000000 b2BEMFobs
    {standard input}:154    .bss.b2BEMFobs:00000000 $d
    {standard input}:164    .bss.da:00000000 da
    {standard input}:161    .bss.da:00000000 $d
    {standard input}:171    .bss.db:00000000 db
    {standard input}:168    .bss.db:00000000 $d
    {standard input}:178    .bss.dc:00000000 dc
    {standard input}:175    .bss.dc:00000000 $d
    {standard input}:185    .bss.d0:00000000 d0
    {standard input}:182    .bss.d0:00000000 $d
    {standard input}:192    .bss.d1:00000000 d1
    {standard input}:189    .bss.d1:00000000 $d
    {standard input}:199    .bss.d2:00000000 d2
    {standard input}:196    .bss.d2:00000000 $d
    {standard input}:206    .data.OpenLoop:00000000 OpenLoop
    {standard input}:203    .data.OpenLoop:00000000 $d
    {standard input}:213    .data.ChangeMode:00000000 ChangeMode
    {standard input}:210    .data.ChangeMode:00000000 $d
    {standard input}:220    .bss.Startup_Lock_Count:00000000 Startup_Lock_Count
    {standard input}:217    .bss.Startup_Lock_Count:00000000 $d
    {standard input}:227    .bss.Speed_Maintain_Cnt1:00000000 Speed_Maintain_Cnt1
    {standard input}:224    .bss.Speed_Maintain_Cnt1:00000000 $d
    {standard input}:234    .bss.SineTheta:00000000 SineTheta
    {standard input}:231    .bss.SineTheta:00000000 $d
    {standard input}:241    .bss.CosineTheta:00000000 CosineTheta
    {standard input}:238    .bss.CosineTheta:00000000 $d
    {standard input}:248    .bss.Theta:00000000 Theta
    {standard input}:245    .bss.Theta:00000000 $d
    {standard input}:255    .bss.Startup_Ramp_Angle_Rads_Per_Sec:00000000 Startup_Ramp_Angle_Rads_Per_Sec
    {standard input}:252    .bss.Startup_Ramp_Angle_Rads_Per_Sec:00000000 $d
    {standard input}:262    .bss.positionTH:00000000 positionTH
    {standard input}:259    .bss.positionTH:00000000 $d
    {standard input}:269    .bss.positiondTH:00000000 positiondTH
    {standard input}:266    .bss.positiondTH:00000000 $d
    {standard input}:276    .bss.positionTHI:00000000 positionTHI
    {standard input}:273    .bss.positionTHI:00000000 $d
    {standard input}:283    .bss.positionTHO:00000000 positionTHO
    {standard input}:280    .bss.positionTHO:00000000 $d
    {standard input}:290    .bss.positionzTH:00000000 positionzTH
    {standard input}:287    .bss.positionzTH:00000000 $d
    {standard input}:297    .bss.closeLoopTHI:00000000 closeLoopTHI
    {standard input}:294    .bss.closeLoopTHI:00000000 $d
    {standard input}:304    .bss.closeLoopTHO:00000000 closeLoopTHO
    {standard input}:301    .bss.closeLoopTHO:00000000 $d
    {standard input}:311    .bss.deviationTH:00000000 deviationTH
    {standard input}:308    .bss.deviationTH:00000000 $d
    {standard input}:318    .bss.decayRateTH:00000000 decayRateTH
    {standard input}:315    .bss.decayRateTH:00000000 $d
    {standard input}:325    .bss.closeLoopTHstate:00000000 closeLoopTHstate
    {standard input}:322    .bss.closeLoopTHstate:00000000 $d
    {standard input}:332    .bss.finalTHI:00000000 finalTHI
    {standard input}:329    .bss.finalTHI:00000000 $d
    {standard input}:339    .bss.finalTHO:00000000 finalTHO
    {standard input}:336    .bss.finalTHO:00000000 $d
    {standard input}:346    .bss.estimatorState:00000000 estimatorState
    {standard input}:343    .bss.estimatorState:00000000 $d
    {standard input}:353    .bss.estimatorStatecnt1:00000000 estimatorStatecnt1
    {standard input}:350    .bss.estimatorStatecnt1:00000000 $d
    {standard input}:360    .data.speedRefCnt:00000000 speedRefCnt
    {standard input}:357    .data.speedRefCnt:00000000 $d
    {standard input}:367    .bss.SUMdTH:00000000 SUMdTH
    {standard input}:364    .bss.SUMdTH:00000000 $d
    {standard input}:374    .bss.SpeedMea1:00000000 SpeedMea1
    {standard input}:371    .bss.SpeedMea1:00000000 $d
    {standard input}:381    .bss.SpeedMea:00000000 SpeedMea
    {standard input}:378    .bss.SpeedMea:00000000 $d
    {standard input}:388    .bss.SpeedRef:00000000 SpeedRef
    {standard input}:385    .bss.SpeedRef:00000000 $d
                            *COM*:00000054 FIFOdTH
                            *COM*:00000004 We
    {standard input}:397    .bss.countFIFO:00000000 countFIFO
    {standard input}:394    .bss.countFIFO:00000000 $d
    {standard input}:404    .bss.current_u:00000000 current_u
    {standard input}:401    .bss.current_u:00000000 $d
    {standard input}:411    .bss.current_v:00000000 current_v
    {standard input}:408    .bss.current_v:00000000 $d
    {standard input}:418    .bss.current_alpha:00000000 current_alpha
    {standard input}:415    .bss.current_alpha:00000000 $d
    {standard input}:425    .bss.current_beta:00000000 current_beta
    {standard input}:422    .bss.current_beta:00000000 $d
    {standard input}:432    .bss.current_sd:00000000 current_sd
    {standard input}:429    .bss.current_sd:00000000 $d
    {standard input}:439    .bss.current_sq:00000000 current_sq
    {standard input}:436    .bss.current_sq:00000000 $d
    {standard input}:446    .bss.SpeedError:00000000 SpeedError
    {standard input}:443    .bss.SpeedError:00000000 $d
    {standard input}:453    .data.Kp_IsqRef:00000000 Kp_IsqRef
    {standard input}:450    .data.Kp_IsqRef:00000000 $d
    {standard input}:460    .data.Ki_IsqRef:00000000 Ki_IsqRef
    {standard input}:457    .data.Ki_IsqRef:00000000 $d
    {standard input}:467    .bss.sum_IsqRef:00000000 sum_IsqRef
    {standard input}:464    .bss.sum_IsqRef:00000000 $d
    {standard input}:474    .bss.IsqRef1:00000000 IsqRef1
    {standard input}:471    .bss.IsqRef1:00000000 $d
    {standard input}:481    .bss.IsqRef:00000000 IsqRef
    {standard input}:478    .bss.IsqRef:00000000 $d
    {standard input}:488    .bss.IsdError:00000000 IsdError
    {standard input}:485    .bss.IsdError:00000000 $d
    {standard input}:495    .bss.sum_Usd:00000000 sum_Usd
    {standard input}:492    .bss.sum_Usd:00000000 $d
    {standard input}:502    .bss.Usd1:00000000 Usd1
    {standard input}:499    .bss.Usd1:00000000 $d
    {standard input}:509    .bss.Usd:00000000 Usd
    {standard input}:506    .bss.Usd:00000000 $d
    {standard input}:516    .data.Kp_Usd:00000000 Kp_Usd
    {standard input}:513    .data.Kp_Usd:00000000 $d
    {standard input}:523    .data.Ki_Usd:00000000 Ki_Usd
    {standard input}:520    .data.Ki_Usd:00000000 $d
    {standard input}:530    .bss.IsqError:00000000 IsqError
    {standard input}:527    .bss.IsqError:00000000 $d
    {standard input}:537    .bss.sum_Usq:00000000 sum_Usq
    {standard input}:534    .bss.sum_Usq:00000000 $d
    {standard input}:544    .bss.Usq1:00000000 Usq1
    {standard input}:541    .bss.Usq1:00000000 $d
    {standard input}:551    .bss.Usq:00000000 Usq
    {standard input}:548    .bss.Usq:00000000 $d
    {standard input}:558    .data.Kp_Usq:00000000 Kp_Usq
    {standard input}:555    .data.Kp_Usq:00000000 $d
    {standard input}:565    .data.Ki_Usq:00000000 Ki_Usq
    {standard input}:562    .data.Ki_Usq:00000000 $d
    {standard input}:572    .bss.Usalpha:00000000 Usalpha
    {standard input}:569    .bss.Usalpha:00000000 $d
    {standard input}:579    .bss.Usbeta:00000000 Usbeta
    {standard input}:576    .bss.Usbeta:00000000 $d
    {standard input}:586    .bss.Usa:00000000 Usa
    {standard input}:583    .bss.Usa:00000000 $d
    {standard input}:593    .bss.Usb:00000000 Usb
    {standard input}:590    .bss.Usb:00000000 $d
    {standard input}:600    .bss.Usc:00000000 Usc
    {standard input}:597    .bss.Usc:00000000 $d
    {standard input}:607    .data.SineTable:00000000 SineTable
    {standard input}:604    .data.SineTable:00000000 $d
    {standard input}:869    .data.CosineTable:00000000 CosineTable
    {standard input}:866    .data.CosineTable:00000000 $d
    {standard input}:1127   .text.main:00000000 $t
    {standard input}:1132   .text.main:00000000 main
    {standard input}:1171   .text.IRQ15_Handler:00000000 $t
    {standard input}:1176   .text.IRQ15_Handler:00000000 IRQ15_Handler
    {standard input}:1339   .text.IRQ15_Handler:0000010c $d
    {standard input}:1356   .text.UpdatePWMDutyCycle:00000000 $t
    {standard input}:1361   .text.UpdatePWMDutyCycle:00000000 UpdatePWMDutyCycle
    {standard input}:1416   .text.UpdatePWMDutyCycle:00000050 $d
    {standard input}:1427   .text.AlphaBetaTrans_Current:00000000 $t
    {standard input}:1432   .text.AlphaBetaTrans_Current:00000000 AlphaBetaTrans_Current
    {standard input}:1477   .text.AlphaBetaTrans_Current:00000040 $d
    {standard input}:1486   .text.DQTrans_Current:00000000 $t
    {standard input}:1491   .text.DQTrans_Current:00000000 DQTrans_Current
    {standard input}:1565   .text.DQTrans_Current:0000007c $d
    {standard input}:1576   .text.IsqRefCal:00000000 $t
    {standard input}:1581   .text.IsqRefCal:00000000 IsqRefCal
    {standard input}:1668   .text.IsqRefCal:00000094 $d
    {standard input}:1680   .text.UsdCal:00000000 $t
    {standard input}:1685   .text.UsdCal:00000000 UsdCal
    {standard input}:1770   .text.UsdCal:00000090 $d
    {standard input}:1781   .text.UsqCal:00000000 $t
    {standard input}:1786   .text.UsqCal:00000000 UsqCal
    {standard input}:1873   .text.UsqCal:00000094 $d
    {standard input}:1885   .text.UsdqtoUsalphabeta:00000000 $t
    {standard input}:1890   .text.UsdqtoUsalphabeta:00000000 UsdqtoUsalphabeta
    {standard input}:1961   .text.UsdqtoUsalphabeta:00000074 $d
    {standard input}:1972   .text.UsalphabetatoUsabc:00000000 $t
    {standard input}:1977   .text.UsalphabetatoUsabc:00000000 UsalphabetatoUsabc
    {standard input}:2053   .text.UsalphabetatoUsabc:0000007c $d
    {standard input}:2065   .text.SVMAlgorithm:00000000 $t
    {standard input}:2070   .text.SVMAlgorithm:00000000 SVMAlgorithm
    {standard input}:2183   .rodata.SVMAlgorithm:00000000 $d
    {standard input}:2568   .text.SVMAlgorithm:00000378 $d
    {standard input}:2589   .text.SVMAlgorithm:000003c4 $t
    {standard input}:3006   .text.SVMAlgorithm:00000750 $d
    {standard input}:3023   .text.SVMAlgorithm:0000078c $t
    {standard input}:3165   .text.SVMAlgorithm:000008b8 $d
    {standard input}:3184   .text.SinCosCheck:00000000 $t
    {standard input}:3189   .text.SinCosCheck:00000000 SinCosCheck
    {standard input}:3358   .text.SinCosCheck:00000124 $d
    {standard input}:3369   .text.LoopcontrolTask:00000000 $t
    {standard input}:3374   .text.LoopcontrolTask:00000000 LoopcontrolTask
    {standard input}:3456   .text.LoopcontrolTask:00000068 $d
    {standard input}:3472   .text.WrapFrom0To2Pi:00000000 $t
    {standard input}:3477   .text.WrapFrom0To2Pi:00000000 WrapFrom0To2Pi
    {standard input}:3536   .text.WrapFrom0To2Pi:0000004c $d
    {standard input}:3541   .text.CloseLoopTHcal:00000000 $t
    {standard input}:3546   .text.CloseLoopTHcal:00000000 CloseLoopTHcal
    {standard input}:3740   .text.CloseLoopTHcal:00000134 $d
    {standard input}:3754   .text.ThetaLoopControl:00000000 $t
    {standard input}:3759   .text.ThetaLoopControl:00000000 ThetaLoopControl
    {standard input}:4000   .text.ThetaLoopControl:00000188 $d
    {standard input}:4029   .text.floatAbs:00000000 $t
    {standard input}:4034   .text.floatAbs:00000000 floatAbs
    {standard input}:4080   .text.sinChebyshevF:00000000 $t
    {standard input}:4085   .text.sinChebyshevF:00000000 sinChebyshevF
    {standard input}:4172   .text.sinChebyshevF:0000008c $d
    {standard input}:4183   .text.cosChebyshevF:00000000 $t
    {standard input}:4188   .text.cosChebyshevF:00000000 cosChebyshevF
    {standard input}:4242   .text.cosChebyshevF:00000044 $d
    {standard input}:4247   .text.resetSMO:00000000 $t
    {standard input}:4252   .text.resetSMO:00000000 resetSMO
    {standard input}:4287   .text.resetSMO:00000020 $d
    {standard input}:4300   .text.currentCoeffCal:00000000 $t
    {standard input}:4305   .text.currentCoeffCal:00000000 currentCoeffCal
    {standard input}:4468   .text.currentCoeffCal:0000014c $d
    {standard input}:4480   .text.currentObserver:00000000 $t
    {standard input}:4485   .text.currentObserver:00000000 currentObserver
    {standard input}:4603   .text.currentObserver:000000cc $d
    {standard input}:4616   .text.BEMFobsCoeffCal:00000000 $t
    {standard input}:4621   .text.BEMFobsCoeffCal:00000000 BEMFobsCoeffCal
    {standard input}:4745   .text.BEMFobsCoeffCal:000000dc $d
    {standard input}:4757   .text.BEMFobserver:00000000 $t
    {standard input}:4762   .text.BEMFobserver:00000000 BEMFobserver
    {standard input}:4835   .text.BEMFobserver:0000007c $d
    {standard input}:4843   .text.exeSMO:00000000 $t
    {standard input}:4848   .text.exeSMO:00000000 exeSMO
    {standard input}:4932   .text.exeSMO:00000084 $d
    {standard input}:4947   .text.polynmApproxAtanf:00000000 $t
    {standard input}:4952   .text.polynmApproxAtanf:00000000 polynmApproxAtanf
    {standard input}:5032   .text.polynmApproxAtanf:0000007c $d
    {standard input}:5040   .text.polynmApproxAtan2f:00000000 $t
    {standard input}:5045   .text.polynmApproxAtan2f:00000000 polynmApproxAtan2f
    {standard input}:5199   .text.polynmApproxAtan2f:000000f4 $d
    {standard input}:5206   .text.ThetaCal:00000000 $t
    {standard input}:5211   .text.ThetaCal:00000000 ThetaCal
    {standard input}:5382   .text.ThetaCal:0000011c $d
    {standard input}:5398   .text.SpeedCal:00000000 $t
    {standard input}:5403   .text.SpeedCal:00000000 SpeedCal
    {standard input}:5502   .text.SpeedCal:00000098 $d
    {standard input}:5513   .text.resetSpeedCal:00000000 $t
    {standard input}:5518   .text.resetSpeedCal:00000000 resetSpeedCal
    {standard input}:5570   .text.resetSpeedCal:00000038 $d
    {standard input}:5576   .text.motionCal:00000000 $t
    {standard input}:5581   .text.motionCal:00000000 motionCal
    {standard input}:5605   .text.resetEstimator:00000000 $t
    {standard input}:5610   .text.resetEstimator:00000000 resetEstimator
    {standard input}:5641   .text.resetEstimator:0000001c $d
    {standard input}:5647   .text.motionEstimator:00000000 $t
    {standard input}:5652   .text.motionEstimator:00000000 motionEstimator
    {standard input}:5815   .text.motionEstimator:000000e0 $d
    {standard input}:5826   .text.InterruptHandler:00000000 $t
    {standard input}:5831   .text.InterruptHandler:00000000 InterruptHandler
    {standard input}:5884   .text.InterruptHandler:00000048 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
__aeabi_i2f
__aeabi_fmul
ADC_MEASUREMENT_GetResult
ADC_MEASUREMENT_Current_PhaseU_handle
ADC_MEASUREMENT_Current_PhaseV_handle
PWM_CCU8_Start
PWM_CCU8_SetDutyCycleSymmetric
PWM_CCU8_0
PWM_CCU8_1
PWM_CCU8_2
__aeabi_fadd
__aeabi_fsub
__aeabi_fdiv
__aeabi_fcmpge
__aeabi_f2uiz
__aeabi_f2iz
__aeabi_fcmplt
__aeabi_fcmpgt
__aeabi_f2d
__aeabi_d2f
__aeabi_dsub
__aeabi_ddiv
__aeabi_dmul
exp
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ui2f
